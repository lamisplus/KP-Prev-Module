[{"C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\index.js":"1","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\App.js":"2","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\context\\ThemeContext.js":"3","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\reportWebVitals.js":"4","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Home.js":"6","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"7","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"8","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\UpdatePatientEnrollment.js":"9","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\EnrollPatient.js":"10","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\KpPrev\\ViewUpdate.js":"11","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\KpPrev\\KpPrevEnrolled.js":"12","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"13","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js":"14","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\KpPrev\\index.js":"15","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"16","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\Biometric.js":"17","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"18","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\AddmissionHome.js":"19","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Vaccination\\VaccinationHistory.js":"20","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js":"21","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\api.js":"22","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\CaptureBiometric.js":"23","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\KpPrev\\KpPrevHistory.js":"24","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Vaccination\\AddViccination.js":"25","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\SupportiveCare.js":"26","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\SignsSymptons.js":"27","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\Medication.js":"28","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\ChronicMedication.js":"29","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\VitalSign.js":"30","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\ReInfection.js":"31","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\InclusionCriteria.js":"32","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\Demograhic.js":"33","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\Comorbitie.js":"34","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\Vaccination.js":"35","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\utils\\index.js":"36"},{"size":753,"mtime":1709736677935,"results":"37","hashOfConfig":"38"},{"size":1865,"mtime":1710076513453,"results":"39","hashOfConfig":"38"},{"size":9235,"mtime":1709736678646,"results":"40","hashOfConfig":"38"},{"size":375,"mtime":1709736679025,"results":"41","hashOfConfig":"38"},{"size":3056,"mtime":1709736678649,"results":"42","hashOfConfig":"38"},{"size":2413,"mtime":1709896503075,"results":"43","hashOfConfig":"38"},{"size":5156,"mtime":1710000578191,"results":"44","hashOfConfig":"38"},{"size":134635,"mtime":1709756175196,"results":"45","hashOfConfig":"38"},{"size":120922,"mtime":1709736678961,"results":"46","hashOfConfig":"38"},{"size":102001,"mtime":1709736678925,"results":"47","hashOfConfig":"38"},{"size":75447,"mtime":1710235504935,"results":"48","hashOfConfig":"38"},{"size":8296,"mtime":1710077350706,"results":"49","hashOfConfig":"38"},{"size":10094,"mtime":1710237492334,"results":"50","hashOfConfig":"38"},{"size":3281,"mtime":1709736678958,"results":"51","hashOfConfig":"38"},{"size":73726,"mtime":1710235504943,"results":"52","hashOfConfig":"38"},{"size":7543,"mtime":1710091092405,"results":"53","hashOfConfig":"38"},{"size":40515,"mtime":1709736678907,"results":"54","hashOfConfig":"38"},{"size":18068,"mtime":1709736678705,"results":"55","hashOfConfig":"38"},{"size":23439,"mtime":1709736678655,"results":"56","hashOfConfig":"38"},{"size":13360,"mtime":1709999144271,"results":"57","hashOfConfig":"38"},{"size":1908,"mtime":1709999930580,"results":"58","hashOfConfig":"38"},{"size":424,"mtime":1710235622027,"results":"59","hashOfConfig":"38"},{"size":20662,"mtime":1709736678912,"results":"60","hashOfConfig":"38"},{"size":12572,"mtime":1710076505238,"results":"61","hashOfConfig":"38"},{"size":17685,"mtime":1709736678970,"results":"62","hashOfConfig":"38"},{"size":12362,"mtime":1709736678684,"results":"63","hashOfConfig":"38"},{"size":12376,"mtime":1709736678681,"results":"64","hashOfConfig":"38"},{"size":12339,"mtime":1709736678675,"results":"65","hashOfConfig":"38"},{"size":12388,"mtime":1709736678663,"results":"66","hashOfConfig":"38"},{"size":12415,"mtime":1709736678691,"results":"67","hashOfConfig":"38"},{"size":12334,"mtime":1709736678678,"results":"68","hashOfConfig":"38"},{"size":12378,"mtime":1709736678672,"results":"69","hashOfConfig":"38"},{"size":12349,"mtime":1709736678669,"results":"70","hashOfConfig":"38"},{"size":12336,"mtime":1709736678666,"results":"71","hashOfConfig":"38"},{"size":12363,"mtime":1709736678687,"results":"72","hashOfConfig":"38"},{"size":1962,"mtime":1709917080061,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"171k4p8",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":5,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},"C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\index.js",["176"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\App.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Home.js",["177","178","179"],"import React, { useState, Fragment } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport PatientList from \"./Patient/PatientList\";\r\n//import PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport KpPrevEnrolled from \"./KpPrev/KpPrevEnrolled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState(\"home\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>KP-PREV</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      {/* <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link> */}\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n\r\n                  <Tab eventKey=\"kpprev\" title=\"KP_PrEV Patients\">\r\n                    <KpPrevEnrolled />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["180","181","182","183","184","185"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport PatientCardDetail from \"./PatientCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport RecentHistory from \"./../History/RecentHistory\";\r\nimport PatientHistory from \"./../History/PatientHistory\";\r\nimport Biometrics from \"./Biometric\";\r\nimport AddmissionHome from \"./../Admission/AddmissionHome\";\r\nimport PatientVaccinationHistory from \"./../Vaccination/VaccinationHistory\";\r\nimport KpPrev from \"../KpPrev\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [art, setArt] = useState(false);\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: \"recent-history\",\r\n    id: \"\",\r\n    activeTab: \"home\",\r\n    actionType: \"create\",\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n  const patientObj =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const prepId =\r\n    history.location && history.location.state\r\n      ? history.location.state.prepId\r\n      : {};\r\n  //console.log(patientObj)\r\n  useEffect(() => {}, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>KP-PREV /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <PatientCardDetail\r\n            patientObj={patientObj}\r\n            setArt={setArt}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <SubMenu\r\n            patientObj={patientObj}\r\n            art={art}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <br />\r\n          {activeContent.route === \"recent-history\" && (\r\n            <RecentHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n          {/* {activeContent.route === \"biometrics\" && (\r\n            <Biometrics\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"addmission\" && (\r\n            <AddmissionHome\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"vaccination\" && (\r\n            <PatientVaccinationHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"discharge\" && (\r\n            <AddmissionHome\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"icu\" && (\r\n            <AddmissionHome\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"patient-history\" && (\r\n            <PatientHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n\r\n          {activeContent.route === \"kp-prev\" && (\r\n            <KpPrev\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n          {/* History Pages */}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { FaPlus, FaAngleDown } from \"react-icons/fa\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"./patient.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst UserRegistration = (props) => {\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: \"\",\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: \"\",\r\n    genderId: \"\",\r\n    identifier: \"\",\r\n    otherName: \"\",\r\n    maritalStatusId: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    dateOfRegistration: \"\",\r\n    isDateOfBirthEstimated: null,\r\n    age: \"\",\r\n    phoneNumber: \"\",\r\n    altPhonenumber: \"\",\r\n    dob: \"\",\r\n    countryId: 1,\r\n    stateId: \"\",\r\n    district: \"\",\r\n    sexId: \"\",\r\n    ninNumber: \"\",\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: \"\",\r\n    phone: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    relationshipId: \"\",\r\n    lastName: \"\",\r\n    middleName: \"\",\r\n  });\r\n  const [contacts, setContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  //const [editRelative, setEditRelative] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [covidEffect, setCovidEffect] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: \"\",\r\n    vaccinationEnrollment: \"\",\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //HIV INFORMATION\r\n  const [showContactCard, setShowContactCard] = useState(true);\r\n  const [vaccine, setVaccine] = useState([]);\r\n  //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n  const [objValues, setObjValues] = useState({\r\n    adverseEffect: \"\",\r\n    batchNumber: \"\",\r\n    doseNumber: \"\",\r\n    location: \"\",\r\n    patientId: \"\",\r\n    vaccinationFacility: \"\",\r\n    vaccine: \"\",\r\n    vaccineDate: \"\",\r\n    knownMedicalCondition: \"\",\r\n    medicalCondition: \"\",\r\n    occupation: \"\",\r\n    vaccineId: \"\",\r\n    visitDate: \"\",\r\n    patientId: \"\",\r\n    visitId: \"\",\r\n    workInHealthSector: \"\",\r\n  });\r\n\r\n  //status for hospital Number\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [hospitalNumStatus2, setHospitalNumStatus2] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  patientId = locationState ? locationState.patientId : null;\r\n  let temp = { ...errors };\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    VACCINE();\r\n    GetCountry();\r\n    setStateByCountryId();\r\n    COVID_ADVERSE_EFFECT();\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      toast.error(\"Date of registration can not be earlier than date of birth\");\r\n    }\r\n  }, [basicInfo.dateOfRegistration]);\r\n  //covid/codeset?category=VACCINE\r\n  const VACCINE = () => {\r\n    axios\r\n      .get(`${baseUrl}covid/codeset?category=VACCINE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setVaccine(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const COVID_ADVERSE_EFFECT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setCovidEffect(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //COVID_ADVERSE_EFFECT\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  // const loadTopLevelCountry = useCallback(async () => {\r\n  //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n  //     settopLevelUnitCountryOptions(response.data);\r\n  // }, []);\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get States from selected country\r\n  const getStates = (e) => {\r\n    const getCountryId = e.target.value;\r\n    setStateByCountryId(1);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId() {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setStates(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: \"\" });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n    if (basicInfo.age !== \"\" && basicInfo.age >= 60) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value === \"Actual\") {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value === \"Estimated\") {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    const ageNumber = e.target.value.replace(/\\D/g, \"\");\r\n    if (!ageDisabled && ageNumber) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(ageNumber * -1, \"years\");\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n      if (ageNumber !== \"\" && ageNumber >= 60) {\r\n        toggle();\r\n      }\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: Math.abs(e.target.value) });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  //Handle Input Change for Basic Infor\r\n  const handleInputChangeBasic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"ninNumber\" && e.target.value !== \"\") {\r\n      const ninNumberValue = checkNINLimit(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: ninNumberValue });\r\n    }\r\n    if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n          setObjValues({ ...objValues, uniqueId: e.target.value });\r\n          setHospitalNumStatus2(true);\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n          setHospitalNumStatus2(false);\r\n        }\r\n      }\r\n      getHosiptalNumber();\r\n    }\r\n  };\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? \"\" : \"First Name is required\";\r\n    temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\";\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? \"\"\r\n      : \"Relationship Type is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = (e) => {\r\n    if (validateRelatives()) {\r\n      setContacts([...contacts, relatives]);\r\n      setRelatives({\r\n        address: \"\",\r\n        phone: \"\",\r\n        firstName: \"\",\r\n        email: \"\",\r\n        relationshipId: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n      });\r\n    }\r\n  };\r\n  const handleDeleteRelative = (index) => {\r\n    contacts.splice(index, 1);\r\n    setContacts([...contacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    contacts.splice(index, 1);\r\n  };\r\n  const getRelationship = (relationshipId) => {\r\n    const relationship = relationshipOptions.find(\r\n      (obj) => obj.id == relationshipId\r\n    );\r\n    return relationship ? relationship.display : \"\";\r\n  };\r\n  const handleInputChangeRelatives = (e) => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\";\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? \"\"\r\n      : \"Hospital Number  is required.\";\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n    // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n    temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\";\r\n    temp.dateOfRegistration = basicInfo.dateOfRegistration\r\n      ? \"\"\r\n      : \"Date of Registration is required.\";\r\n    //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n    temp.address = basicInfo.address ? \"\" : \"Address is required.\";\r\n    temp.phoneNumber = basicInfo.phoneNumber\r\n      ? \"\"\r\n      : \"Phone Number  is required.\";\r\n    temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\";\r\n    temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\";\r\n    temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\";\r\n    //VACCINATION FORM VALIDATION\r\n    temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\";\r\n    temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\";\r\n    //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n    temp.location = objValues.location ? \"\" : \"This field is required\";\r\n    temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\";\r\n    temp.adverseEffect = objValues.adverseEffect\r\n      ? \"\"\r\n      : \"This field is required\";\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    console.log(handleSubmit);\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts &&\r\n        contacts.length > 0 &&\r\n        contacts.map((x) => {\r\n          const contactInfo = {\r\n            address: {\r\n              line: [x.address],\r\n            },\r\n            contactPoint: {\r\n              type: \"phone\",\r\n              value: x.phone,\r\n            },\r\n            firstName: x.firstName,\r\n            fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n            relationshipId: x.relationshipId,\r\n            surname: x.lastName,\r\n            otherName: x.middleName,\r\n          };\r\n\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.address,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: \"\",\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: newConatctsInfo,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.sexId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n        const phone = {\r\n          type: \"phone\",\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: \"email\",\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: \"altphone\",\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        //patientForm.id = patientId;\r\n        patientDTO.person = patientForm;\r\n        patientDTO.vaccinationEnrollment = objValues;\r\n        const observationData = {\r\n          observation: {\r\n            data: {},\r\n            date: date.dateServiceOffered,\r\n            htsService: htsServices,\r\n            prepServices: prepServices,\r\n          },\r\n          commodityService: commodityService,\r\n          hivEducationProvided: hivEducationProvided,\r\n          bioMedicalServices: bioMedicalServices,\r\n          structuralServices: structuralServices,\r\n        };\r\n\r\n        const response = await axios.post(\r\n          `${baseUrl}/api/v1/kpprev`,\r\n          patientDTO,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        toast.success(\"Patient Register successfully\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n        setSaving(false);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          if (\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\" &&\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.subErrors[0].message !== \"\"\r\n          ) {\r\n            toast.error(\r\n              error.response.data.apierror.message +\r\n                \" : \" +\r\n                error.response.data.apierror.subErrors[0].field +\r\n                \" \" +\r\n                error.response.data.apierror.subErrors[0].message,\r\n              { position: toast.POSITION.BOTTOM_CENTER }\r\n            );\r\n          } else {\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const [date, setDate] = useState({\r\n    dateServiceOffered: \"\",\r\n  });\r\n\r\n  const [htsServices, setHtsServices] = useState({\r\n    offeredHts: \"\",\r\n    acceptedHts: \"\",\r\n    hivTestResult: \"\",\r\n    referredForArt: \"\",\r\n  });\r\n  const [prepServices, setPrepServices] = useState({\r\n    offeredPrep: \"\",\r\n    acceptedPrep: \"\",\r\n    refferedForPrep: \"\",\r\n  });\r\n  const [commodityService, setCommodityService] = useState({\r\n    condomDispensed: \"\",\r\n    lubricantsDispensed: \"\",\r\n    oralQuickDispensed: \"\",\r\n    newNeedleDispensed: \"\",\r\n    oldNeedleRetrived: \"\",\r\n    nalxoneProvided: \"\",\r\n  });\r\n  const [hivEducationProvided, setHivEducationProvided] = useState({\r\n    iecMaterial: \"\",\r\n    interPersonalCommunication: \"\",\r\n    peerGroupCommunication: \"\",\r\n  });\r\n  const [bioMedicalServices, setbioMedicalServices] = useState({\r\n    stiScreening: \"\",\r\n    stiSyndromicManagement: \"\",\r\n    stiTreatment: \"\",\r\n    screenedForTb: \"\",\r\n    providedWithTpt: \"\",\r\n    screenedForViralHepatits: \"\",\r\n    viralHepatitsScreenResult: \"\",\r\n    vaccinationForViralHepatits: \"\",\r\n    offeredFamilyPlanningServices: \"\",\r\n    referredForFamilyPlanningServices: \"\",\r\n    providedWithDrugRehab: \"\",\r\n    offeredMhpss: \"\",\r\n    onMedicalAssistedTherapy: \"\",\r\n    recivedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n  const [structuralServices, setstructuralServices] = useState({\r\n    providedOrRefferedForEmpowerment: \"\",\r\n    legalAidServiceType: \"\",\r\n    peerGroupCommunication: \"\",\r\n  });\r\n  const [facilityRefferedToo, setFacilityRefferedToo] = useState({\r\n    facilityRefferedToStiScreening: \"\",\r\n    facilityRefferedToScreenedTo: \"\",\r\n    facilityRefferedToScreenedForViralHepatits: \"\",\r\n    facilityRefferedToViralHepatitsScreenResult: \"\",\r\n    facilityRefferedToVaccinationForViralHepatits: \"\",\r\n    facilityRefferedToOfferedFamilyPlanningServices: \"\",\r\n    facilityRefferedToReferredForFamilyPlanningServices: \"\",\r\n    facilityRefeRredToProvidedWithDrugRehab: \"\",\r\n    facilityRefferedToOfferedMhpss: \"\",\r\n    facilityRefferedToOnMedicalAssistedTherapy: \"\",\r\n    facilityRefferedToRecievedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n\r\n  const handleInputChan4Date = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setDate({ ...date, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeReferred = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setFacilityRefferedToo({\r\n      ...facilityRefferedToo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeHtsService = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHtsServices({ ...htsServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangePrepServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setPrepServices({ ...prepServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCommodityServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setCommodityService({\r\n      ...commodityService,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangeHivEducationProvided = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHivEducationProvided({\r\n      ...hivEducationProvided,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangebioMedicalServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setbioMedicalServices({\r\n      ...bioMedicalServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangestructuralServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setstructuralServices({\r\n      ...structuralServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"location\" && objValues.location !== \"Facility\") {\r\n      objValues.vaccinationFacility = \"\";\r\n      setObjValues({ ...objValues, [\"vaccinationFacility\"]: \"\" });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setRelatives({ ...relatives, [inputName]: NumberValue });\r\n  };\r\n  // const checkPhoneNumberBasic=(e, inputName)=>{\r\n  //     const limit = 10;\r\n  //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});\r\n  // }\r\n  const checkNINLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n  const handleCheckBoxworkInHealthSector = (e) => {\r\n    if (e.target.checked) {\r\n      setObjValues({ ...objValues, [\"workInHealthSector\"]: e.target.checked });\r\n      //setOvcEnrolled(true)\r\n    } else {\r\n      setObjValues({ ...objValues, [\"workInHealthSector\"]: false });\r\n    }\r\n  };\r\n\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setBasicInfo({ ...basicInfo, [inputName]: NumberValue });\r\n  };\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  const handleCheckBoxknownMedicalCondition = (e) => {\r\n    if (e.target.checked) {\r\n      setObjValues({\r\n        ...objValues,\r\n        [\"knownMedicalCondition\"]: e.target.checked,\r\n      });\r\n      //setOvcEnrolled(true)\r\n    } else {\r\n      setObjValues({ ...objValues, [\"knownMedicalCondition\"]: false });\r\n    }\r\n  };\r\n  const onClickContactCard = () => {\r\n    setShowContactCard(!showContactCard);\r\n  };\r\n  const onClickRelativeCard = () => {\r\n    setShowRelative(!showRelative);\r\n  };\r\n  const handleCancel = () => {\r\n    history.push({ pathname: \"/\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Kp-Prev /</Link> Patient Registration\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/\",\r\n          state: \"users\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mr-10 pr-10\"\r\n          style={{\r\n            backgroundColor: \"#014d88\",\r\n            fontWeight: \"bolder\",\r\n            margingRight: \"-40px\",\r\n          }}\r\n          startIcon={<TiArrowBack />}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n            Back{\" \"}\r\n          </span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    {userDetail === null\r\n                      ? \"Basic Information\"\r\n                      : \"Edit User Information\"}\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            min=\"1983-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            value={basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.dateOfRegistration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            Hospital Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hospitalNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {\"Hospital number already exist\"}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"ninNumber\">\r\n                            National Identity Number (NIN){\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"ninNumber\"\r\n                            value={basicInfo.ninNumber}\r\n                            id=\"ninNumber\"\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">\r\n                            First Names <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.firstName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Last Name <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.lastName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Sex <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.id}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Date Of Birth{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dob\"\r\n                            min=\"1940-01-01\"\r\n                            id=\"dob\"\r\n                            max={\r\n                              basicInfo.dateOfRegistration === \"\"\r\n                                ? moment(new Date()).format(\"YYYY-MM-DD\")\r\n                                : basicInfo.dateOfRegistration\r\n                            }\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            className=\"form-control\"\r\n                            id=\"age\"\r\n                            min=\"5\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                        <p>\r\n                          <b style={{ color: \"red\" }}>\r\n                            {basicInfo.age !== \"\" && basicInfo.age < 5\r\n                              ? \"The minimum age is 5\"\r\n                              : \" \"}{\" \"}\r\n                          </b>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Employment Status </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Education Level </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Contact Details\r\n                  </h5>\r\n                  {showContactCard === false ? (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickContactCard}\r\n                      >\r\n                        <FaPlus />\r\n                      </span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickContactCard}\r\n                      >\r\n                        <FaAngleDown />\r\n                      </span>{\" \"}\r\n                    </>\r\n                  )}\r\n                </div>\r\n                {showContactCard && (\r\n                  <div className=\"card-body\">\r\n                    <div className={\"row\"}>\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Phone Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"phoneNumber\"\r\n                            id=\"phoneNumber\"\r\n                            onChange={(e) => {\r\n                              handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                            }}\r\n                            value={basicInfo.phoneNumber}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            required\r\n                          />\r\n                          {errors.phoneNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.phoneNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Alt. Phone Number</Label>\r\n                          {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"altPhonenumber\"\r\n                            id=\"altPhonenumber\"\r\n                            onChange={(e) => {\r\n                              handleInputChangePhoneNumber(e, \"altPhonenumber\");\r\n                            }}\r\n                            value={basicInfo.altPhonenumber}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            required\r\n                          />\r\n                          {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Email</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.email}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            required\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Country <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"countryId\"\r\n                            id=\"countryId\"\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            value={basicInfo.countryId}\r\n                            disabled\r\n                            onChange={getStates}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {countries.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.countryId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.countryId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            State <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"stateId\"\r\n                            id=\"stateId\"\r\n                            value={basicInfo.stateId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            onChange={getProvinces}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {states.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.stateId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.stateId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Province/District/LGA{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"district\"\r\n                            id=\"district\"\r\n                            value={basicInfo.district}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            onChange={handleInputChangeBasic}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {provinces.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.district !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.district}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Street Address{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            id=\"address\"\r\n                            value={basicInfo.address}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.address !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.address}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Landmark</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"landmark\"\r\n                            id=\"landmark\"\r\n                            value={basicInfo.landmark}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                  {showRelative === false ? (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickRelativeCard}\r\n                      >\r\n                        <FaPlus />\r\n                      </span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickRelativeCard}\r\n                      >\r\n                        <FaAngleDown />\r\n                      </span>{\" \"}\r\n                    </>\r\n                  )}\r\n                </div>\r\n                {showRelative && (\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      {contacts && contacts.length > 0 && (\r\n                        <div className=\"col-xl-12 col-lg-12\">\r\n                          <table style={{ width: \"100%\" }} className=\"mb-3\">\r\n                            <thead className=\"mb-3\">\r\n                              <tr>\r\n                                <th>Relationship Type</th>\r\n                                <th>Name</th>\r\n                                <th>Phone</th>\r\n                                <th>Address</th>\r\n                                <th>Actions</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"mb-3\">\r\n                              {contacts.map((item, index) => {\r\n                                return (\r\n                                  <tr key={item.index} className=\"mb-3\">\r\n                                    <td>\r\n                                      {getRelationship(item.relationshipId)}\r\n                                    </td>\r\n                                    <td>\r\n                                      {item.firstName +\r\n                                        \" \" +\r\n                                        item.middleName +\r\n                                        \" \" +\r\n                                        item.lastName}\r\n                                    </td>\r\n                                    <td>{item.phone}</td>\r\n                                    <td>{item.address}</td>\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                        onClick={() =>\r\n                                          handleEditRelative(item, index)\r\n                                        }\r\n                                      >\r\n                                        <FontAwesomeIcon icon=\"edit\" />\r\n                                      </button>\r\n                                      &nbsp;&nbsp;\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-danger btn-sm removeRow\"\r\n                                        onClick={(e) =>\r\n                                          handleDeleteRelative(index)\r\n                                        }\r\n                                      >\r\n                                        <FontAwesomeIcon icon=\"trash\" />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        {showRelative && (\r\n                          <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"relationshipType\">\r\n                                      Relationship Type{\" \"}\r\n                                      <span style={{ color: \"red\" }}> *</span>\r\n                                    </Label>\r\n                                    <select\r\n                                      className=\"form-control\"\r\n                                      name=\"relationshipId\"\r\n                                      id=\"relationshipId\"\r\n                                      value={relatives.relationshipId}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    >\r\n                                      <option value={\"\"}>Select</option>\r\n                                      {relationshipOptions.map(\r\n                                        (relative, index) => (\r\n                                          <option\r\n                                            key={relative.id}\r\n                                            value={relative.id}\r\n                                          >\r\n                                            {relative.display}\r\n                                          </option>\r\n                                        )\r\n                                      )}\r\n                                    </select>\r\n                                    {errors.relationshipId !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.relationshipId}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"cfirstName\">\r\n                                      First Name{\" \"}\r\n                                      <span style={{ color: \"red\" }}> *</span>\r\n                                    </Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"firstName\"\r\n                                      value={relatives.firstName}\r\n                                      id=\"firstName\"\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {errors.firstName !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.firstName}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label>Middle Name</Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"middleName\"\r\n                                      id=\"middleName\"\r\n                                      value={relatives.middleName}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label>\r\n                                      Last Name{\" \"}\r\n                                      <span style={{ color: \"red\" }}> *</span>\r\n                                    </Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"lastName\"\r\n                                      id=\"lastName\"\r\n                                      value={relatives.lastName}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {errors.lastName !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.lastName}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"contactPhoneNumber\">\r\n                                      Phone Number\r\n                                    </Label>\r\n                                    {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      name=\"phone\"\r\n                                      id=\"phone\"\r\n                                      onChange={(e) => {\r\n                                        checkPhoneNumber(e, \"phone\");\r\n                                      }}\r\n                                      value={relatives.phone}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      required\r\n                                    />\r\n                                    {errors.phone !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.phone}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"contactEmail\">Email</Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"email\"\r\n                                      name=\"email\"\r\n                                      id=\"email\"\r\n                                      value={relatives.email}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                      required\r\n                                    />\r\n                                    {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"contactAddress\">Address</Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"address\"\r\n                                      id=\"address\"\r\n                                      value={relatives.address}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                  </FormGroup>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"row\">\r\n                                <div className=\"col-1\">\r\n                                  <MatButton\r\n                                    type=\"button\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    onClick={handleSaveRelationship}\r\n                                  >\r\n                                    Add\r\n                                  </MatButton>\r\n                                </div>\r\n\r\n                                <div className=\"col-1\">\r\n                                  <MatButton\r\n                                    type=\"button\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.button}\r\n                                    onClick={handleCancelSaveRelationship}\r\n                                  >\r\n                                    Cancel\r\n                                  </MatButton>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\"></div>\r\n                    {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                    {/* </div> */}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/* Adding First DOSAGE FORM HERE */}\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Key Population Prevention{\" \"}\r\n                  </h5>\r\n                </div>\r\n\r\n                {/* <div className=\"card d-flex\"> */}\r\n\r\n                <div className=\"row d-flex\">\r\n                  <h2>Service Provider </h2>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>Date Of Service Provisions</Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"dateServiceOffered\"\r\n                        value={date.dateServiceOffered}\r\n                        onChange={handleInputChan4Date}\r\n                        id=\"dateServiceOffered\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                      {errors.dateServiceOffered !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateServiceOffered}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* <div className='card'> */}\r\n\r\n                  <div\r\n                    className=\"card-header\"\r\n                    style={{\r\n                      backgroundColor: \"teal\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bolder\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>HTS Services</h2>\r\n                  </div>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Offered HTS</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"offeredHts\"\r\n                        id=\"offeredHts\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.offeredHts}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Accepted HTS</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"acceptedHts\"\r\n                        id=\"acceptedHts\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.acceptedHts}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Hiv Test Result</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"hivTestResult\"\r\n                        id=\"hivTestResult\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.hivTestResult}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Reffered for ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"referredForArt\"\r\n                        id=\"referredForArt\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.referredForArt}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  {/* </div> */}\r\n\r\n                  <br />\r\n\r\n                  {/* <div className='card'> */}\r\n\r\n                  {/* <div className=\"row d-flex\"> */}\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"teal\"\r\n                    style={{ width: \"100%\", height: \"45px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>PreP Services</h2>\r\n                  </LabelSui>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Offered Prep</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"offeredPrep\"\r\n                        id=\"offeredPrep\"\r\n                        onChange={handleInputChangePrepServices}\r\n                        value={prepServices.offeredPrep}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Accepted PreP</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"acceptedPrep\"\r\n                        id=\"acceptedPrep\"\r\n                        onChange={handleInputChangePrepServices}\r\n                        value={prepServices.acceptedPrep}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Reffered for Prep</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"referredForPrep\"\r\n                        id=\"referredForPrep\"\r\n                        onChange={handleInputChangePrepServices}\r\n                        value={prepServices.referredForPrep}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* </div> */}\r\n\r\n                  {/* <div className='card'> */}\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"teal\"\r\n                    style={{ width: \"100%\", height: \"45px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Commodity Service</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Condom Dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"condomDispensed\"\r\n                        id=\"condomDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.condomDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Lubricants Dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"lubricantsDispensed\"\r\n                        id=\"lubricantsDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.lubricantsDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Oral Quick/ HIVST dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"oralQuickDispensed\"\r\n                        id=\"oralQuickDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oralQuickDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>New Needles/Syringe Dispesend</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"newNeedleDispensed\"\r\n                        id=\"newNeedleDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.newNeedleDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Old Needles/Syringe Retrived</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"oldNeedleRetrived\"\r\n                        id=\"oldNeedleRetrived\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oldNeedleRetrived}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Nalxone Provided</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"nalxoneProvided\"\r\n                        id=\"nalxoneProvided\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.nalxoneProvided}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* </div> */}\r\n                  <div className=\"row d-flex\">\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"blue\"\r\n                      style={{ width: \"106%\", height: \"45px\" }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}>HIV Educaton Provided</h2>\r\n                    </LabelSui>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>IEC material/Pamphelt</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"iecMaterial\"\r\n                          id=\"iecMaterial\"\r\n                          onChange={handleInputChangeHivEducationProvided}\r\n                          value={hivEducationProvided.iecMaterial}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>InterPersonal Communication</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"interPersonalCommunication\"\r\n                          id=\"interPersonalCommunication\"\r\n                          onChange={handleInputChangeHivEducationProvided}\r\n                          value={\r\n                            hivEducationProvided.interPersonalCommunication\r\n                          }\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>Peer Group Communication</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"peerGroupCommunication\"\r\n                          id=\"peerGroupCommunication\"\r\n                          onChange={handleInputChangeHivEducationProvided}\r\n                          value={hivEducationProvided.peerGroupCommunication}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                {/* <div className='card'> */}\r\n\r\n                <div className=\" row d-flex\">\r\n                  <div className=\"row d-flex\">\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"blue\"\r\n                      style={{ width: \"106%\", height: \"45px\" }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}>Biomedical Services</h2>\r\n                    </LabelSui>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Screening</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreening\"\r\n                            id=\"stiScreening\"\r\n                            value={bioMedicalServices.stiScreening}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.stiScreening === \"1\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreeningResponse\"\r\n                            id=\"stiScreeningResponse\"\r\n                            value={bioMedicalServices.stiScreeningResponse}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Syndromic Management</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiSyndromicManagement\"\r\n                            id=\"stiSyndromicManagement\"\r\n                            value={bioMedicalServices.stiSyndromicManagement}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.stiSyndromicManagement === \"1\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label>Facility Referred to</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityReferredTo\"\r\n                            id=\"facilityReferredTo\"\r\n                            value={bioMedicalServices.facilityReferredTo}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Treatment/ Referral</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiTreatment\"\r\n                            id=\"stiTreatment\"\r\n                            value={bioMedicalServices.stiTreatment}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"1\"> Yes </option>\r\n                            <option value=\"0\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.stiTreatment === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to Sti Screening </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToStiScreening\"\r\n                            id=\"facilityRefferedToStiScreening\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToStiScreening\r\n                            }\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Screened for TB</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"screenedForTb\"\r\n                            id=\"screenedForTb\"\r\n                            value={bioMedicalServices.screenedForTb}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.screenedForTb === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToScreenedTo\"\r\n                            id=\"facilityRefferedToScreenedTo\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToScreenedTo\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided with TPT</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithTpt\"\r\n                            id=\"providedWithTpt\"\r\n                            value={bioMedicalServices.providedWithTpt}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Screened For Viral Heaptits</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"screenedForViralHepatits\"\r\n                            id=\"screenedForViralHepatits\"\r\n                            value={bioMedicalServices.screenedForViralHepatits}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"1\"> Yes </option>\r\n                            <option value=\"0\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.screenedForViralHepatits ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToScreenedForViralHepatits\"\r\n                            id=\"facilityRefferedToScreenedFclientVerificationObjorViralHepatits\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToScreenedForViralHepatits\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Viral Hepatits Screen Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"viralHepatitsScreenResult\"\r\n                            id=\"viralHepatitsScreenResult\"\r\n                            value={bioMedicalServices.viralHepatitsScreenResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Positive\"> Positive </option>\r\n                            <option value=\"Negative\"> Negative</option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.viralHepatitsScreenResult ===\r\n                        \"Positive\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                            id=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToViralHepatitsScreenResult\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Vaccination For Viral Hepatits</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"vaccinationForViralHepatits\"\r\n                            id=\"vaccinationForViralHepatits\"\r\n                            value={\r\n                              bioMedicalServices.vaccinationForViralHepatits\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.vaccinationForViralHepatits ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                            id=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToVaccinationForViralHepatits\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredFamilyPlanningServices\"\r\n                            id=\"offeredFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.offeredFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.offeredFamilyPlanningServices ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                            id=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToOfferedFamilyPlanningServices\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Refferred For Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForFamilyPlanningServices\"\r\n                            id=\"referredForFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.referredForFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.referredForFamilyPlanningServices ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                            id=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToReferredForFamilyPlanningServices\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided With Drug Rehab</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithDrugRehab\"\r\n                            id=\"providedWithDrugRehab\"\r\n                            value={bioMedicalServices.providedWithDrugRehab}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.providedWithDrugRehab === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                            id=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefeRredToProvidedWithDrugRehab\r\n                            }\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered MHPSS</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredMhpss\"\r\n                            id=\"offeredMhpss\"\r\n                            value={bioMedicalServices.offeredMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.offeredMhpss === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label>Facility Refferred to </Label> Type of MHpss\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToOfferedMhpss\"\r\n                            id=\"facilityRefferedToOfferedMhpss\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToOfferedMhpss\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            On Medical Assisted Therapy (MAT) for atleast\r\n                          </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"onMedicalAssistedTherapy\"\r\n                            id=\"onMedicalAssistedTherapy\"\r\n                            value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.onMedicalAssistedTherapy ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                            id=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToOnMedicalAssistedTherapy\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Recived Nalxone for Overdose Treatment</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"recivedNalxoneForOverdoseTreatment\"\r\n                            id=\"recivedNalxoneForOverdoseTreatment\"\r\n                            value={\r\n                              bioMedicalServices.recivedNalxoneForOverdoseTreatment\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row d-flex\">\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"blue\"\r\n                      style={{ width: \"106%\", height: \"45px\" }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}> Structural Services </h2>\r\n                    </LabelSui>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Provided or Reffered for Empowerment</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"providedOrRefferedForEmpowerment\"\r\n                          id=\"providedOrRefferedForEmpowerment\"\r\n                          value={\r\n                            structuralServices.recivedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"1\"> Yes </option>\r\n                          <option value=\"0\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                      {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                            id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment\r\n                            }\r\n                            onChange={handleInputChangestructuralServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Legal Aid Service Type</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"legalAidServiceType\"\r\n                          id=\"legalAidServiceType\"\r\n                          value={structuralServices.legalAidServiceType}\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"1\"> Yes </option>\r\n                          <option value=\"0\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.legalAidServiceType !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.legalAidServiceType}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                      {structuralServices.legalAidServiceType === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedLegalAidServiceType\"\r\n                            id=\"facilityRefferedLegalAidServiceType\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedLegalAidServiceType\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {/* END OF First DOSAGE */}\r\n              {saving ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                onClick={handleSubmit}\r\n                disabled={disabledAgeBaseOnAge}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={handleCancel}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\UpdatePatientEnrollment.js",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\EnrollPatient.js",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\KpPrev\\ViewUpdate.js",["287","288","289","290","291","292","293","294","295","296","297","298","299","300"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport * as moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\n\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, selectedOptions, theme) {\r\n  return {\r\n    fontWeight:\r\n      selectedOptions.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nconst ViewUpdate = (props) => {\r\n  const theme = useTheme();\r\n  const patientObj = props.patientObj;\r\n  const location = useLocation();\r\n\r\n  const kpprevValues = location.state.patientObj;\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [htsCodeVal, setHtsCodeVal] = useState({});\r\n  const [prepCodeVal, setPrepCodeVal] = useState({});\r\n  let temp = { ...errors };\r\n  const classes = useStyles();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const [date, setDate] = useState({\r\n    dateServiceOffered: kpprevValues.dateServiceOffered,\r\n    service_provider: kpprevValues.serviceProvider,\r\n  });\r\n  const [htsServices, setHtsServices] = useState({\r\n    offeredHts: kpprevValues.htsServices.offered_hts,\r\n    acceptedHts: kpprevValues.htsServices.accepted_hts,\r\n    hivTestResult: kpprevValues.htsServices.hiv_test_result,\r\n    referredForArt: kpprevValues.htsServices.referred_for_art,\r\n  });\r\n  const [prepServices, setPrepServices] = useState({\r\n    offeredPrep: kpprevValues.prepServices.offered_prep,\r\n    acceptedPrep: kpprevValues.prepServices.accepted_prep,\r\n    referredForPrep: kpprevValues.prepServices.referred_for_prep,\r\n  });\r\n  const [commodityService, setCommodityService] = useState({\r\n    condomDispensed: kpprevValues.commodityServices.condoms_dispensed,\r\n    lubricantsDispensed: kpprevValues.commodityServices.lubricants_dispensed,\r\n    oralQuickDispensed: kpprevValues.commodityServices.hivst_kits_dispensed,\r\n    newNeedleDispensed: kpprevValues.commodityServices.new_needles_dispensed,\r\n    oldNeedleRetrived: kpprevValues.commodityServices.old_needles_dispensed,\r\n    nalxoneProvided: kpprevValues.commodityServices.naloxane_provided,\r\n    howmanycondomDispensed:\r\n      kpprevValues.commodityServices.how_many_condom_dispensed,\r\n    howmanylubricantsDispensed:\r\n      kpprevValues.commodityServices.how_many_lubricants_dispensed,\r\n    howmanyoralQuickDispensed:\r\n      kpprevValues.commodityServices.how_many_oral_quick_dispensed,\r\n    howmanynewNeedleDispensed:\r\n      kpprevValues.commodityServices.how_many_new_needle_dispensed,\r\n    howmanyoldNeedleRetrived:\r\n      kpprevValues.commodityServices.how_many_old_needle_retrived,\r\n    howmanynalxoneProvided:\r\n      kpprevValues.commodityServices.how_many_nalxone_provided,\r\n  });\r\n  const [hivEducationProvided, setHivEducationProvided] = useState({\r\n    iecMaterial: kpprevValues.hivEducationalServices?.iecMaterial,\r\n    interPersonalCommunication:\r\n      kpprevValues.hivEducationalServices?.interPersonalCommunication,\r\n    peerGroupCommunication:\r\n      kpprevValues.hivEducationalServices?.peerGroupCommunication,\r\n  });\r\n  const [bioMedicalServices, setbioMedicalServices] = useState({\r\n    stiScreening: kpprevValues.biomedicalServices?.sti_screening,\r\n    stiSyndromicManagement:\r\n      kpprevValues.biomedicalServices?.sti_syndromic_management,\r\n    stiTreatment: kpprevValues.biomedicalServices?.sti_treatment,\r\n    screenedForTb: kpprevValues.biomedicalServices?.screened_for_tb,\r\n    providedWithTpt: kpprevValues.biomedicalServices?.provided_with_tpt,\r\n    screenedForViralHepatits:\r\n      kpprevValues.biomedicalServices?.screened_for_viral_hepatitis,\r\n    viralHepatitsScreenResult:\r\n      kpprevValues.biomedicalServices?.viral_hepatitis_screen_result,\r\n    vaccinationForViralHepatits:\r\n      kpprevValues.biomedicalServices?.vaccination_for_viral_hepatitis,\r\n    offeredFamilyPlanningServices:\r\n      kpprevValues.biomedicalServices?.offered_family_planning_services,\r\n    referredForFamilyPlanningServices:\r\n      kpprevValues.biomedicalServices?.referred_for_family_planning_services,\r\n    providedWithDrugRehab:\r\n      kpprevValues.biomedicalServices?.provided_with_drug_rehab,\r\n    offeredMhpss: kpprevValues.biomedicalServices?.offered_mhpss,\r\n    onMedicalAssistedTherapy:\r\n      kpprevValues.biomedicalServices?.medical_assisted_therapy_for_six_months,\r\n    recivedNalxoneForOverdoseTreatment:\r\n      kpprevValues.biomedicalServices?.received_naloxone_for_overdose_treatment,\r\n    stiScreeningResult: kpprevValues.biomedicalServices?.sti_screening_result,\r\n    stifacilityReffered: kpprevValues.biomedicalServices?.sti_facility_referred,\r\n    tbfacilityReffered: kpprevValues.biomedicalServices?.tb_facility_reffered,\r\n    typeofMhpss: kpprevValues.biomedicalServices?.type_of_mhpss,\r\n    drugRehabfacilityReffered:\r\n      kpprevValues.biomedicalServices?.drug_rehab_facility_reffered,\r\n  });\r\n  const [structuralServices, setstructuralServices] = useState({\r\n    providedOrRefferedForEmpowerment:\r\n      kpprevValues.structuralServices.providedEmpowerment,\r\n    legalAidServiceType: kpprevValues.structuralServices.legalAidServices,\r\n    peerGroupCommunication: \"\",\r\n    typeempowermentprovided:\r\n      kpprevValues.structuralServices.type_empowerment_provided,\r\n    typelegalempowerment: kpprevValues.structuralServices.typelegalempowerment,\r\n    legalprogramreferred: kpprevValues.structuralServices.legalprogramreferred,\r\n  });\r\n  const [facilityRefferedToo, setFacilityRefferedToo] = useState({\r\n    facilityRefferedToStiScreening: \"\",\r\n    facilityRefferedToScreenedTo: \"\",\r\n    facilityRefferedToScreenedForViralHepatits: \"\",\r\n    facilityRefferedToViralHepatitsScreenResult: \"\",\r\n    facilityRefferedToVaccinationForViralHepatits: \"\",\r\n    facilityRefferedToOfferedFamilyPlanningServices: \"\",\r\n    facilityRefferedToReferredForFamilyPlanningServices: \"\",\r\n    facilityRefeRredToProvidedWithDrugRehab: \"\",\r\n    facilityRefferedToOfferedMhpss: \"\",\r\n    facilityRefferedToOnMedicalAssistedTherapy: \"\",\r\n    facilityRefferedToRecievedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setDate({ ...date, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeReferred = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setFacilityRefferedToo({\r\n      ...facilityRefferedToo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeHtsService = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHtsServices({ ...htsServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangePrepServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setPrepServices({ ...prepServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCommodityServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setCommodityService({\r\n      ...commodityService,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangeHivEducationProvided = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHivEducationProvided({\r\n      ...hivEducationProvided,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangebioMedicalServices = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"screenedForTb\" && e.target.value === \"yes\") {\r\n      bioMedicalServices.providedWithTpt = \"\";\r\n    } else if (e.target.name === \"screenedForTb\" && e.target.value === \"no\") {\r\n      bioMedicalServices.tbtreatmentrefferal = \"\";\r\n    }\r\n    setbioMedicalServices({\r\n      ...bioMedicalServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangestructuralServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setstructuralServices({\r\n      ...structuralServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //Validations of the forms\r\n  const validateAttempt = () => {\r\n    temp.dateServiceOffered = date.dateServiceOffered\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  /* Remove  function **/\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateAttempt()) {\r\n      const biomedicalServiceValue = {\r\n        medical_assisted_therapy_for_six_months:\r\n          bioMedicalServices.onMedicalAssistedTherapy,\r\n        offered_family_planning_services:\r\n          bioMedicalServices.offeredFamilyPlanningServices,\r\n        offered_mhpss: bioMedicalServices.offeredMhpss,\r\n        provided_with_drug_rehab: bioMedicalServices.providedWithDrugRehab,\r\n        provided_with_tpt: bioMedicalServices.providedWithTpt,\r\n        received_naloxone_for_overdose_treatment:\r\n          bioMedicalServices.recivedNalxoneForOverdoseTreatment,\r\n        referred_for_family_planning_services:\r\n          bioMedicalServices.referredForFamilyPlanningServices,\r\n        screened_for_tb: bioMedicalServices.screenedForTb,\r\n        screened_for_viral_hepatitis:\r\n          bioMedicalServices.screenedForViralHepatits,\r\n        sti_screening: bioMedicalServices.stiScreening,\r\n        sti_syndromic_management: bioMedicalServices.stiSyndromicManagement,\r\n        sti_treatment: bioMedicalServices.stiTreatment,\r\n        vaccination_for_viral_hepatitis:\r\n          bioMedicalServices.vaccinationForViralHepatits,\r\n        viral_hepatitis_screen_result:\r\n          bioMedicalServices.viralHepatitsScreenResult,\r\n        sti_screening_result: bioMedicalServices.stiScreeningResult,\r\n        sti_facility_referred: bioMedicalServices.stifacilityReffered,\r\n        tb_facility_reffered: bioMedicalServices.tbfacilityReffered,\r\n        type_of_mhpss: bioMedicalServices.typeofMhpss,\r\n        drug_rehab_facility_reffered:\r\n        bioMedicalServices.drugRehabfacilityReffered,\r\n        referred_facility_drug_rehab:\r\n        bioMedicalServices.refferedfacilitydrugrehab,\r\n      };\r\n\r\n      const commodityServicesValue = {\r\n        condoms_dispensed: commodityService.condomDispensed,\r\n        hivst_kits_dispensed: commodityService.oralQuickDispensed,\r\n        lubricants_dispensed: commodityService.lubricantsDispensed,\r\n        naloxane_provided: commodityService.nalxoneProvided,\r\n        new_needles_dispensed: commodityService.newNeedleDispensed,\r\n        old_needles_dispensed: commodityService.oldNeedleRetrived,\r\n        how_many_condom_dispensed: commodityService.howmanycondomDispensed,\r\n        how_many_lubricants_dispensed:\r\n          commodityService.howmanylubricantsDispensed,\r\n        how_many_oral_quick_dispensed:\r\n          commodityService.howmanyoralQuickDispensed,\r\n        how_many_new_needle_dispensed:\r\n          commodityService.howmanynewNeedleDispensed,\r\n        how_many_old_needle_retrived: commodityService.howmanyoldNeedleRetrived,\r\n        how_many_nalxone_provided: commodityService.howmanynalxoneProvided,\r\n      };\r\n\r\n      const htsServicesValue = {\r\n        accepted_hts: htsServices.acceptedHts,\r\n        hiv_test_result: htsServices.hivTestResult,\r\n        offered_hts: htsServices.offeredHts,\r\n        referred_for_art: htsServices.referredForArt,\r\n      };\r\n\r\n      const prepServicesValue = {\r\n        accepted_prep: prepServices.acceptedPrep,\r\n        offered_prep: prepServices.offeredPrep,\r\n        referred_for_prep: prepServices.referredForPrep,\r\n      };\r\n\r\n      const structuralServicesValue = {\r\n        legalAidServices: structuralServices.legalAidServiceType,\r\n        providedEmpowerment:\r\n          structuralServices.providedOrRefferedForEmpowerment,\r\n        type_empowerment_provided: structuralServices.typeempowermentprovided,\r\n        typelegalempowerment: structuralServices.typelegalempowerment,\r\n        legalprogramreferred: structuralServices.legalprogramreferred,\r\n      };\r\n\r\n      const data = {\r\n        htsCode: kpprevValues?.htsCode,\r\n        prepCode: kpprevValues?.prepCode,\r\n        prevCode: kpprevValues.prevCode,\r\n        patientId: kpprevValues.uuid,\r\n        serviceProvider: date.service_provider,\r\n        target_group: kpprevValues.target_group,\r\n        dateServiceOffered: date.dateServiceOffered,\r\n        htsServices: htsServicesValue,\r\n        prepServices: prepServicesValue,\r\n        entryPoint: {},\r\n        bioMedicalServices: biomedicalServiceValue,\r\n        structuralServices: structuralServicesValue,\r\n        commodityServices: commodityServicesValue,\r\n        hivEducationalServices: hivEducationProvided,\r\n      };\r\n      console.log(\"update\", data);\r\n      setSaving(true);\r\n      axios\r\n        .put(`${baseUrl}kpprev/${kpprevValues.id}`, data, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          setSaving(false);\r\n          toast.success(\"Record Updated successfully\");\r\n          setDate({\r\n            dateServiceOffered: \"\",\r\n            service_provider: \"\",\r\n          });\r\n          setHtsServices({\r\n            offeredHts: \"\",\r\n            acceptedHts: \"\",\r\n            hivTestResult: \"\",\r\n            referredForArt: \"\",\r\n          });\r\n          setPrepServices({\r\n            offeredPrep: \"\",\r\n            acceptedPrep: \"\",\r\n            referredForPrep: \"\",\r\n          });\r\n          setCommodityService({\r\n            condomDispensed: \"\",\r\n            lubricantsDispensed: \"\",\r\n            oralQuickDispensed: \"\",\r\n            newNeedleDispensed: \"\",\r\n            oldNeedleRetrived: \"\",\r\n            nalxoneProvided: \"\",\r\n            howmanycondomDispensed: \"\",\r\n            howmanylubricantsDispensed: \"\",\r\n            howmanyoralQuickDispensed: \"\",\r\n            howmanynewNeedleDispensed: \"\",\r\n            howmanyoldNeedleRetrived: \"\",\r\n            howmanynalxoneProvided: \"\",\r\n          });\r\n          setHivEducationProvided({\r\n            iecMaterial: \"\",\r\n            interPersonalCommunication: \"\",\r\n            peerGroupCommunication: \"\",\r\n          });\r\n          setbioMedicalServices({\r\n            stiScreening: \"\",\r\n            stiSyndromicManagement: \"\",\r\n            stiTreatment: \"\",\r\n            screenedForTb: \"\",\r\n            providedWithTpt: \"\",\r\n            screenedForViralHepatits: \"\",\r\n            viralHepatitsScreenResult: \"\",\r\n            vaccinationForViralHepatits: \"\",\r\n            offeredFamilyPlanningServices: \"\",\r\n            referredForFamilyPlanningServices: \"\",\r\n            providedWithDrugRehab: \"\",\r\n            offeredMhpss: \"\",\r\n            onMedicalAssistedTherapy: \"\",\r\n            recivedNalxoneForOverdoseTreatment: \"\",\r\n            stiScreeningResult: \"\",\r\n            stifacilityReffered: \"\",\r\n            tbfacilityReffered: \"\",\r\n            typeofMhpss: \"\",\r\n            drugRehabfacilityReffered: \"\",\r\n          });\r\n          setstructuralServices({\r\n            providedOrRefferedForEmpowerment: \"\",\r\n            legalAidServiceType: \"\",\r\n            peerGroupCommunication: \"\",\r\n            typeempowermentprovided: \"\",\r\n            typelegalempowerment: \"\",\r\n            legalprogramreferred: \"\",\r\n          });\r\n          history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <Row>\r\n            <Link to={\"/\"}>\r\n              <ButtonMui\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2 mr-2 mt-2\"\r\n                //startIcon={<FaUserPlus size=\"10\"/>}\r\n                startIcon={<TiArrowBack />}\r\n                style={{\r\n                  backgroundColor: \"rgb(153, 46, 98)\",\r\n                  color: \"#fff\",\r\n                  height: \"35px\",\r\n                }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n              </ButtonMui>\r\n            </Link>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <form>\r\n              {/* <div className=\"card d-flex\"> */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  KEY POPULATION PREVENTION FORM\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"row d-flex\">\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <br />\r\n                  <FormGroup>\r\n                    <Label>Date Of Service Provisions</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateServiceOffered\"\r\n                      value={date.dateServiceOffered}\r\n                      onChange={handleInputChange}\r\n                      id=\"dateServiceOffered\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    ></Input>\r\n                    {errors.dateServiceOffered !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateServiceOffered}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <br />\r\n                  <FormGroup>\r\n                    <Label>Hospital Number</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"hospitalNumber\"\r\n                      value={\r\n                        kpprevValues.htsCode !== null\r\n                          ? kpprevValues.htsCode\r\n                          : kpprevValues.prepCode\r\n                      }\r\n                      // onChange={handleInputChange}\r\n                      id=\"hospitalNumber\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      readonly\r\n                    ></Input>\r\n                    {errors.dateServiceOffered !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateServiceOffered}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <br />\r\n                  <FormGroup>\r\n                    <Label>Prevention Code</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"PrevCode\"\r\n                      value={kpprevValues.prevCode}\r\n                      // onChange={handleInputChange}\r\n                      id=\"PrevCode\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      readonly\r\n                    ></Input>\r\n                    {errors.dateServiceOffered !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateServiceOffered}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {/* HTS service */}\r\n\r\n                <LabelSui\r\n                  as=\"a\"\r\n                  color=\"teal\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"45px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                  ribbon\r\n                >\r\n                  <h2 style={{ color: \"#fff\" }}>HTS Services</h2>\r\n                </LabelSui>\r\n                <br />\r\n                <br />\r\n\r\n                <div className=\"form-group mb-10 col-xs-6 col-md-3 \">\r\n                  <FormGroup>\r\n                    <Label>Offered HTS</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"offeredHts\"\r\n                      id=\"offeredHts\"\r\n                      onChange={handleInputChangeHtsService}\r\n                      value={htsServices.offeredHts}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                  <FormGroup>\r\n                    <Label>Accepted HTS</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"acceptedHts\"\r\n                      id=\"acceptedHts\"\r\n                      onChange={handleInputChangeHtsService}\r\n                      value={htsServices.acceptedHts}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                {htsServices.acceptedHts === \"1\" ? (\r\n                  <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Hiv Test Result</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"hivTestResult\"\r\n                        id=\"hivTestResult\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.hivTestResult}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"positive\">Positive</option>\r\n                        <option value=\"negative\">Negative</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {htsServices.hivTestResult === \"positive\" ? (\r\n                  <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Reffered for ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"referredForArt\"\r\n                        id=\"referredForArt\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.referredForArt}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <LabelSui\r\n                  as=\"a\"\r\n                  color=\"teal\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"45px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                  ribbon\r\n                >\r\n                  <h2 style={{ color: \"#fff\" }}>PreP Services</h2>\r\n                </LabelSui>\r\n                <br />\r\n                <br />\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <FormGroup>\r\n                    <Label>Offered Prep</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"offeredPrep\"\r\n                      id=\"offeredPrep\"\r\n                      onChange={handleInputChangePrepServices}\r\n                      value={prepServices.offeredPrep}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <FormGroup>\r\n                    <Label>Accepted PreP</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"acceptedPrep\"\r\n                      id=\"acceptedPrep\"\r\n                      onChange={handleInputChangePrepServices}\r\n                      value={prepServices.acceptedPrep}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <FormGroup>\r\n                    <Label>Reffered for Prep</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"referredForPrep\"\r\n                      id=\"referredForPrep\"\r\n                      onChange={handleInputChangePrepServices}\r\n                      value={prepServices.referredForPrep}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Commodity Service</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Condom Dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"condomDispensed\"\r\n                        id=\"condomDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.condomDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.condomDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Condom Dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanycondomDispensed\"\r\n                          id=\"howmanycondomDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanycondomDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Lubricants Dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"lubricantsDispensed\"\r\n                        id=\"lubricantsDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.lubricantsDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.lubricantsDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>How Many Lubricants Dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanylubricantsDispensed\"\r\n                          id=\"howmanylubricantsDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanylubricantsDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Oral Quick/ HIVST dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"oralQuickDispensed\"\r\n                        id=\"oralQuickDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oralQuickDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.oralQuickDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Oral Quick/ HIVST dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanyoralQuickDispensed\"\r\n                          id=\"howmanyoralQuickDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanyoralQuickDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>New Needles/Syringe Dispesend</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"newNeedleDispensed\"\r\n                        id=\"newNeedleDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.newNeedleDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.newNeedleDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>How Many New Needles/Syringe Dispesend</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanynewNeedleDispensed\"\r\n                          id=\"howmanynewNeedleDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanynewNeedleDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Old Needles/Syringe Retrived</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"oldNeedleRetrived\"\r\n                        id=\"oldNeedleRetrived\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oldNeedleRetrived}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.oldNeedleRetrived === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>Old Needles/Syringe Retrived</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanyoldNeedleRetrived\"\r\n                          id=\"howmanyoldNeedleRetrived\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanyoldNeedleRetrived}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Nalxone Provided</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"nalxoneProvided\"\r\n                        id=\"nalxoneProvided\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.nalxoneProvided}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.nalxoneProvided === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Nalxone Provided</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanynalxoneProvided\"\r\n                          id=\"howmanynalxoneProvided\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanynalxoneProvided}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>HIV Educaton Provided</h2>\r\n                  </LabelSui>\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>IEC materials/pamphlets provided </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"iecMaterial\"\r\n                        id=\"iecMaterial\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.iecMaterial}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>InterPersonal Communication</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"interPersonalCommunication\"\r\n                        id=\"interPersonalCommunication\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.interPersonalCommunication}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>Peer Group Communication</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"peerGroupCommunication\"\r\n                        id=\"peerGroupCommunication\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.peerGroupCommunication}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              {/* <div className='card'> */}\r\n\r\n              <div className=\" row d-flex\">\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Biomedical Services</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Screening</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiScreening\"\r\n                          id=\"stiScreening\"\r\n                          value={bioMedicalServices.stiScreening}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"yes\">Yes</option>\r\n                          <option value=\"no\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.stiScreening === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Screening Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreeningResult\"\r\n                            id=\"stiScreeningResult\"\r\n                            value={bioMedicalServices.stiScreeningResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"positive\">Positive</option>\r\n                            <option value=\"negative\">Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.stiScreeningResult === \"positive\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Treatment/ Referral</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiTreatment\"\r\n                            id=\"stiTreatment\"\r\n                            value={bioMedicalServices.stiTreatment}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.stiTreatment === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"stifacilityReffered\"\r\n                          id=\"stifacilityReffered\"\r\n                          value={bioMedicalServices.stifacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Syndromic Management</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiSyndromicManagement\"\r\n                          id=\"stiSyndromicManagement\"\r\n                          value={bioMedicalServices.stiSyndromicManagement}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Screened for TB</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"screenedForTb\"\r\n                          id=\"screenedForTb\"\r\n                          value={bioMedicalServices.screenedForTb}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.screenedForTb === \"no\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided with TPT</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithTpt\"\r\n                            id=\"providedWithTpt\"\r\n                            value={bioMedicalServices.providedWithTpt}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.screenedForTb === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>TB treatment/referral </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"tbtreatmentrefferal\"\r\n                            id=\"tbtreatmentrefferal\"\r\n                            value={bioMedicalServices.tbtreatmentrefferal}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.tbtreatmentrefferal === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"tbfacilityReffered\"\r\n                          id=\"tbfacilityReffered\"\r\n                          value={bioMedicalServices.tbfacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Screened For Viral Heaptits</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"screenedForViralHepatits\"\r\n                          id=\"screenedForViralHepatits\"\r\n                          value={bioMedicalServices.screenedForViralHepatits}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.screenedForViralHepatits === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Viral Hepatits Screen Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"viralHepatitsScreenResult\"\r\n                            id=\"viralHepatitsScreenResult\"\r\n                            value={bioMedicalServices.viralHepatitsScreenResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"positive\"> Positive </option>\r\n                            <option value=\"negative\"> Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Vaccination For Viral Hepatits</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"vaccinationForViralHepatits\"\r\n                          id=\"vaccinationForViralHepatits\"\r\n                          value={bioMedicalServices.vaccinationForViralHepatits}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"Yes\"> Yes </option>\r\n                          <option value=\"No\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Offered Family Planning Services</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"offeredFamilyPlanningServices\"\r\n                          id=\"offeredFamilyPlanningServices\"\r\n                          value={\r\n                            bioMedicalServices.offeredFamilyPlanningServices\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.offeredFamilyPlanningServices ===\r\n                      \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Refferred For Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForFamilyPlanningServices\"\r\n                            id=\"referredForFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.referredForFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Provided With Drug Rehab</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"providedWithDrugRehab\"\r\n                          id=\"providedWithDrugRehab\"\r\n                          value={bioMedicalServices.providedWithDrugRehab}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered MHPSS</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredMhpss\"\r\n                            id=\"offeredMhpss\"\r\n                            value={bioMedicalServices.offeredMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.offeredMhpss === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Type of MHPSS Provided</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"typeofMhpss\"\r\n                            id=\"typeofMhpss\"\r\n                            value={bioMedicalServices.typeofMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Referred to facility for Drug Rehab </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"refferedfacilitydrugrehab\"\r\n                            id=\"refferedfacilitydrugrehab\"\r\n                            value={bioMedicalServices.refferedfacilitydrugrehab}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.refferedfacilitydrugrehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label>Drug Rehab Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"drugRehabfacilityReffered\"\r\n                          id=\"drugRehabfacilityReffered\"\r\n                          value={bioMedicalServices.drugRehabfacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          On Medical Assisted Therapy (MAT) for atleast 6 months\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"onMedicalAssistedTherapy\"\r\n                          id=\"onMedicalAssistedTherapy\"\r\n                          value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Recived Nalxone for Overdose Treatment</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"recivedNalxoneForOverdoseTreatment\"\r\n                          id=\"recivedNalxoneForOverdoseTreatment\"\r\n                          value={\r\n                            bioMedicalServices.recivedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}> Structural Services </h2>\r\n                  </LabelSui>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Provided or Reffered for Empowerment</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"providedOrRefferedForEmpowerment\"\r\n                        id=\"providedOrRefferedForEmpowerment\"\r\n                        value={\r\n                          structuralServices.providedOrRefferedForEmpowerment\r\n                        }\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                    {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                      \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Type of Empowerment Provided </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"typeempowermentprovided\"\r\n                          id=\"typeempowermentprovided\"\r\n                          value={structuralServices.typeempowermentprovided}\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Legal Aid Service Type</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"legalAidServiceType\"\r\n                        id=\"legalAidServiceType\"\r\n                        value={structuralServices.legalAidServiceType}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {structuralServices.legalAidServiceType === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Label> Type of Legal Empowerment Provided </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"typelegalempowerment\"\r\n                        id=\"typelegalempowerment\"\r\n                        value={structuralServices.typelegalempowerment}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {structuralServices.legalAidServiceType === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Label> Legal Program referred </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"legalprogramreferred\"\r\n                        id=\"legalprogramreferred\"\r\n                        value={structuralServices.legalprogramreferred}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}> Service Provider </h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Name of service provider</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"service_provider\"\r\n                        id=\"service_provider\"\r\n                        value={date.service_provider}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n\r\n                      {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                    </FormGroup>\r\n                    {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                      \"Yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                          id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                          value={\r\n                            facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* </div> */}\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                //hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n                onClick={handleSubmit}\r\n                style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n                //disabled={attemptList.length <= 0 && !saving ? true : false}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n              </MatButton>\r\n              {/* </div> */}\r\n            </form>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default ViewUpdate;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\KpPrev\\KpPrevEnrolled.js",["301","302","303","304","305","306","307"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { calculate_age } from \"../../../utils\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst KpPrevEnrolled = (props) => {\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Date Service Offered\",\r\n            field: \"dateServiceOffered\",\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n          { title: \"Prevention Code\", field: \"prevCode\", filtering: false },\r\n          // { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n          // { title: \"Kp Prev Status\", field: \"count\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        //isLoading={loading}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}kpprev?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data:\r\n                    result.data.records &&\r\n                    result.data.records !== null &&\r\n                    result.data.records.map((row) => ({\r\n                      dateServiceOffered: row.dateServiceOffered,\r\n                      hospital_number:\r\n                        row.htsCode !== null ? row.htsCode : row.prepCode,\r\n                      prevCode: row.prevCode,\r\n                      age: \"\",\r\n\r\n                      actions: (\r\n                        <div>\r\n                          <Link\r\n                            to={{\r\n                              pathname: \"/view-kp-prev\",\r\n                              state: { patientObj: row },\r\n                            }}\r\n                          >\r\n                            <ButtonGroup\r\n                              variant=\"contained\"\r\n                              aria-label=\"split button\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(153, 46, 98)\",\r\n                                height: \"30px\",\r\n                                width: \"215px\",\r\n                              }}\r\n                              size=\"large\"\r\n                            >\r\n                              <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                aria-label=\"select merge strategy\"\r\n                                aria-haspopup=\"menu\"\r\n                                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                              >\r\n                                <MdDashboard />\r\n                              </Button>\r\n                              <Button\r\n                                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                              >\r\n                                <span\r\n                                  style={{\r\n                                    fontSize: \"12px\",\r\n                                    color: \"#fff\",\r\n                                    fontWeight: \"bolder\",\r\n                                  }}\r\n                                >\r\n                                  View KP Prev\r\n                                </span>\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                          </Link>\r\n                        </div>\r\n                      ),\r\n                    })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KpPrevEnrolled;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["308","309","310","311","312","313","314","315","316","317"],"C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js",["318","319","320","321","322","323","324","325","326","327"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    // const loadVaccination = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    // }\r\n    // const loadIcu = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'icu'})\r\n    // }\r\n    // const loadAddmission = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    // }\r\n    // const onClickDischarge = (row) =>{        \r\n    //     props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    // }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadKpPrev = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:\"kp-prev\"})\r\n    }\r\n    // const loadPatientHistory = ()=>{\r\n    //     //setActiveItem('history')\r\n    //     props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    // }\r\n\r\n\r\n    return ( \r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>      \r\n                <Menu.Item onClick={() => loadKpPrev()} > Kp-Prev</Menu.Item>               \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\KpPrev\\index.js",["328","329","330","331","332","333","334","335","336","337","338","339","340"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport * as moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\n\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, selectedOptions, theme) {\r\n  return {\r\n    fontWeight:\r\n      selectedOptions.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nconst KpPrev = (props) => {\r\n  const theme = useTheme();\r\n  const patientObj = props.patientObj;\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [htsCodeVal, setHtsCodeVal] = useState({});\r\n  const [prepCodeVal, setPrepCodeVal] = useState({});\r\n  const [kpprevFormStatus, setKpprevFormStatus] = useState(true);\r\n  let temp = { ...errors };\r\n  const classes = useStyles();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const getHTScode = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${patientObj?.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(\"hts\", response);\r\n        setHtsCodeVal({\r\n          htsCode: response.data.clientCode,\r\n          hivStatus: response.data.hivPositive,\r\n          htsClientDtoList: response.data.htsClientDtoList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPrepCode = () => {\r\n    axios\r\n      .get(`${baseUrl}prep/persons/${patientObj?.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(\"prep\", response.data);\r\n        setPrepCodeVal({\r\n          prevCode: response.data.uniqueId,\r\n          prepStatus: response.data.prepStatus,\r\n          prepDtoList: response.data.prepDtoList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHTScode();\r\n    getPrepCode();\r\n  }, []);\r\n\r\n  const [date, setDate] = useState({\r\n    dateServiceOffered: \"\",\r\n    service_provider: \"\",\r\n  });\r\n  const [htsServices, setHtsServices] = useState({\r\n    offeredHts: \"\",\r\n    acceptedHts: \"\",\r\n    hivTestResult: \"\",\r\n    referredForArt: \"\",\r\n  });\r\n  const [prepServices, setPrepServices] = useState({\r\n    offeredPrep: \"\",\r\n    acceptedPrep: \"\",\r\n    referredForPrep: \"\",\r\n  });\r\n  const [commodityService, setCommodityService] = useState({\r\n    condomDispensed: \"\",\r\n    lubricantsDispensed: \"\",\r\n    oralQuickDispensed: \"\",\r\n    newNeedleDispensed: \"\",\r\n    oldNeedleRetrived: \"\",\r\n    nalxoneProvided: \"\",\r\n    howmanycondomDispensed: \"\",\r\n    howmanylubricantsDispensed: \"\",\r\n    howmanyoralQuickDispensed: \"\",\r\n    howmanynewNeedleDispensed: \"\",\r\n    howmanyoldNeedleRetrived: \"\",\r\n    howmanynalxoneProvided: \"\",\r\n  });\r\n  const [hivEducationProvided, setHivEducationProvided] = useState({\r\n    iecMaterial: \"\",\r\n    interPersonalCommunication: \"\",\r\n    peerGroupCommunication: \"\",\r\n  });\r\n  const [bioMedicalServices, setbioMedicalServices] = useState({\r\n    stiScreening: \"\",\r\n    stiSyndromicManagement: \"\",\r\n    stiTreatment: \"\",\r\n    screenedForTb: \"\",\r\n    providedWithTpt: \"\",\r\n    screenedForViralHepatits: \"\",\r\n    viralHepatitsScreenResult: \"\",\r\n    vaccinationForViralHepatits: \"\",\r\n    offeredFamilyPlanningServices: \"\",\r\n    referredForFamilyPlanningServices: \"\",\r\n    providedWithDrugRehab: \"\",\r\n    offeredMhpss: \"\",\r\n    onMedicalAssistedTherapy: \"\",\r\n    recivedNalxoneForOverdoseTreatment: \"\",\r\n    stiScreeningResult: \"\",\r\n    stifacilityReffered: \"\",\r\n    tbfacilityReffered: \"\",\r\n    typeofMhpss: \"\",\r\n    drugRehabfacilityReffered: \"\",\r\n    refferedfacilitydrugrehab: \"\",\r\n  });\r\n  const [structuralServices, setstructuralServices] = useState({\r\n    providedOrRefferedForEmpowerment: \"\",\r\n    legalAidServiceType: \"\",\r\n    peerGroupCommunication: \"\",\r\n    typeempowermentprovided: \"\",\r\n    typelegalempowerment: \"\",\r\n    legalprogramreferred: \"\",\r\n  });\r\n  const [facilityRefferedToo, setFacilityRefferedToo] = useState({\r\n    facilityRefferedToStiScreening: \"\",\r\n    facilityRefferedToScreenedTo: \"\",\r\n    facilityRefferedToScreenedForViralHepatits: \"\",\r\n    facilityRefferedToViralHepatitsScreenResult: \"\",\r\n    facilityRefferedToVaccinationForViralHepatits: \"\",\r\n    facilityRefferedToOfferedFamilyPlanningServices: \"\",\r\n    facilityRefferedToReferredForFamilyPlanningServices: \"\",\r\n    facilityRefeRredToProvidedWithDrugRehab: \"\",\r\n    facilityRefferedToOfferedMhpss: \"\",\r\n    facilityRefferedToOnMedicalAssistedTherapy: \"\",\r\n    facilityRefferedToRecievedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setDate({ ...date, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeReferred = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setFacilityRefferedToo({\r\n      ...facilityRefferedToo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeHtsService = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHtsServices({ ...htsServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangePrepServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setPrepServices({ ...prepServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCommodityServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setCommodityService({\r\n      ...commodityService,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangeHivEducationProvided = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHivEducationProvided({\r\n      ...hivEducationProvided,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangebioMedicalServices = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"screenedForTb\" && e.target.value === \"yes\") {\r\n      bioMedicalServices.providedWithTpt = \"\";\r\n    } else if (e.target.name === \"screenedForTb\" && e.target.value === \"no\") {\r\n      bioMedicalServices.tbtreatmentrefferal = \"\";\r\n    }\r\n    setbioMedicalServices({\r\n      ...bioMedicalServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangestructuralServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setstructuralServices({\r\n      ...structuralServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //Validations of the forms\r\n  const validateAttempt = () => {\r\n    temp.dateServiceOffered = date.dateServiceOffered\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  /* Remove  function **/\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateAttempt()) {\r\n      const generateRandomString = (length) => {\r\n        const characters =\r\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        let result = \"\";\r\n        for (let i = 0; i < length; i++) {\r\n          result += characters.charAt(\r\n            Math.floor(Math.random() * characters.length)\r\n          );\r\n        }\r\n        return result;\r\n      };\r\n      const biomedicalServiceValue = {\r\n        medical_assisted_therapy_for_six_months:\r\n          bioMedicalServices.onMedicalAssistedTherapy,\r\n        offered_family_planning_services:\r\n          bioMedicalServices.offeredFamilyPlanningServices,\r\n        offered_mhpss: bioMedicalServices.offeredMhpss,\r\n        provided_with_drug_rehab: bioMedicalServices.providedWithDrugRehab,\r\n        provided_with_tpt: bioMedicalServices.providedWithTpt,\r\n        received_naloxone_for_overdose_treatment:\r\n          bioMedicalServices.recivedNalxoneForOverdoseTreatment,\r\n        referred_for_family_planning_services:\r\n          bioMedicalServices.referredForFamilyPlanningServices,\r\n        screened_for_tb: bioMedicalServices.screenedForTb,\r\n        screened_for_viral_hepatitis:\r\n          bioMedicalServices.screenedForViralHepatits,\r\n        sti_screening: bioMedicalServices.stiScreening,\r\n        sti_syndromic_management: bioMedicalServices.stiSyndromicManagement,\r\n        sti_treatment: bioMedicalServices.stiTreatment,\r\n        vaccination_for_viral_hepatitis:\r\n          bioMedicalServices.vaccinationForViralHepatits,\r\n        viral_hepatitis_screen_result:\r\n          bioMedicalServices.viralHepatitsScreenResult,\r\n        sti_screening_result: bioMedicalServices.stiScreeningResult,\r\n        sti_facility_referred: bioMedicalServices.stifacilityReffered,\r\n        tb_facility_reffered: bioMedicalServices.tbfacilityReffered,\r\n        type_of_mhpss: bioMedicalServices.typeofMhpss,\r\n        drug_rehab_facility_reffered:\r\n          bioMedicalServices.drugRehabfacilityReffered,\r\n        referred_facility_drug_rehab:\r\n          bioMedicalServices.refferedfacilitydrugrehab,\r\n      };\r\n\r\n      const commodityServicesValue = {\r\n        condoms_dispensed: commodityService.condomDispensed,\r\n        hivst_kits_dispensed: commodityService.oralQuickDispensed,\r\n        lubricants_dispensed: commodityService.lubricantsDispensed,\r\n        naloxane_provided: commodityService.nalxoneProvided,\r\n        new_needles_dispensed: commodityService.newNeedleDispensed,\r\n        old_needles_dispensed: commodityService.oldNeedleRetrived,\r\n        how_many_condom_dispensed: commodityService.howmanycondomDispensed,\r\n        how_many_lubricants_dispensed:\r\n          commodityService.howmanylubricantsDispensed,\r\n        how_many_oral_quick_dispensed:\r\n          commodityService.howmanyoralQuickDispensed,\r\n        how_many_new_needle_dispensed:\r\n          commodityService.howmanynewNeedleDispensed,\r\n        how_many_old_needle_retrived: commodityService.howmanyoldNeedleRetrived,\r\n        how_many_nalxone_provided: commodityService.howmanynalxoneProvided,\r\n      };\r\n\r\n      const htsServicesValue = {\r\n        accepted_hts: htsServices.acceptedHts,\r\n        hiv_test_result: htsServices.hivTestResult,\r\n        offered_hts: htsServices.offeredHts,\r\n        referred_for_art: htsServices.referredForArt,\r\n      };\r\n\r\n      const prepServicesValue = {\r\n        accepted_prep: prepServices.acceptedPrep,\r\n        offered_prep: prepServices.offeredPrep,\r\n        referred_for_prep: prepServices.referredForPrep,\r\n      };\r\n\r\n      const structuralServicesValue = {\r\n        legalAidServices: structuralServices.legalAidServiceType,\r\n        providedEmpowerment:\r\n          structuralServices.providedOrRefferedForEmpowerment,\r\n        type_empowerment_provided: structuralServices.typeempowermentprovided,\r\n        typelegalempowerment: structuralServices.typelegalempowerment,\r\n        legalprogramreferred: structuralServices.legalprogramreferred,\r\n      };\r\n      const randomString = generateRandomString(10);\r\n      const data = {\r\n        htsCode: htsCodeVal?.htsCode,\r\n        prepCode: prepCodeVal?.prevCode,\r\n        prevCode: `kp_kprev-${randomString}`,\r\n        patientId: patientObj.uuid,\r\n        serviceProvider: date.service_provider,\r\n        target_group:\r\n          htsCodeVal?.htsClientDtoList?.length > 0\r\n            ? htsCodeVal?.htsClientDtoList[0]?.targetGroup\r\n            : prepCodeVal?.prepDtoList[0]?.targetGroup,\r\n        dateServiceOffered: date.dateServiceOffered,\r\n        htsServices: htsServicesValue,\r\n        prepServices: prepServicesValue,\r\n        entryPoint: {},\r\n        bioMedicalServices: biomedicalServiceValue,\r\n        structuralServices: structuralServicesValue,\r\n        commodityServices: commodityServicesValue,\r\n        hivEducationalServices: hivEducationProvided,\r\n      };\r\n      //console.log(data);\r\n\r\n      if (data.htsCode === null && data.prepCode === null) {\r\n        toast.error(\"Client is not registered on HTS or Prep\");\r\n        setSaving(false);\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}kpprev`, data, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            setSaving(false);\r\n            toast.success(\"Record save successfully\");\r\n            setDate({\r\n              dateServiceOffered: \"\",\r\n              service_provider: \"\",\r\n            });\r\n            setHtsServices({\r\n              offeredHts: \"\",\r\n              acceptedHts: \"\",\r\n              hivTestResult: \"\",\r\n              referredForArt: \"\",\r\n            });\r\n            setPrepServices({\r\n              offeredPrep: \"\",\r\n              acceptedPrep: \"\",\r\n              referredForPrep: \"\",\r\n            });\r\n            setCommodityService({\r\n              condomDispensed: \"\",\r\n              lubricantsDispensed: \"\",\r\n              oralQuickDispensed: \"\",\r\n              newNeedleDispensed: \"\",\r\n              oldNeedleRetrived: \"\",\r\n              nalxoneProvided: \"\",\r\n              howmanycondomDispensed: \"\",\r\n              howmanylubricantsDispensed: \"\",\r\n              howmanyoralQuickDispensed: \"\",\r\n              howmanynewNeedleDispensed: \"\",\r\n              howmanyoldNeedleRetrived: \"\",\r\n              howmanynalxoneProvided: \"\",\r\n            });\r\n            setHivEducationProvided({\r\n              iecMaterial: \"\",\r\n              interPersonalCommunication: \"\",\r\n              peerGroupCommunication: \"\",\r\n            });\r\n            setbioMedicalServices({\r\n              stiScreening: \"\",\r\n              stiSyndromicManagement: \"\",\r\n              stiTreatment: \"\",\r\n              screenedForTb: \"\",\r\n              providedWithTpt: \"\",\r\n              screenedForViralHepatits: \"\",\r\n              viralHepatitsScreenResult: \"\",\r\n              vaccinationForViralHepatits: \"\",\r\n              offeredFamilyPlanningServices: \"\",\r\n              referredForFamilyPlanningServices: \"\",\r\n              providedWithDrugRehab: \"\",\r\n              offeredMhpss: \"\",\r\n              onMedicalAssistedTherapy: \"\",\r\n              recivedNalxoneForOverdoseTreatment: \"\",\r\n              stiScreeningResult: \"\",\r\n              stifacilityReffered: \"\",\r\n              tbfacilityReffered: \"\",\r\n              typeofMhpss: \"\",\r\n              drugRehabfacilityReffered: \"\",\r\n            });\r\n            setstructuralServices({\r\n              providedOrRefferedForEmpowerment: \"\",\r\n              legalAidServiceType: \"\",\r\n              peerGroupCommunication: \"\",\r\n              typeempowermentprovided: \"\",\r\n              typelegalempowerment: \"\",\r\n              legalprogramreferred: \"\",\r\n            });\r\n            history.push(\"/\");\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n          });\r\n      }\r\n      //setSaving(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          {kpprevFormStatus ? (\r\n            <form>\r\n              {/* <div className=\"card d-flex\"> */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  KEY POPULATION PREVENTION FORM\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"row d-flex\">\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <br />\r\n                  <FormGroup>\r\n                    <Label>Date Of Service Provisions</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateServiceOffered\"\r\n                      value={date.dateServiceOffered}\r\n                      onChange={handleInputChange}\r\n                      id=\"dateServiceOffered\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    ></Input>\r\n                    {errors.dateServiceOffered !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateServiceOffered}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {/* HTS service */}\r\n                {htsCodeVal.htsClientDtoList?.length > 0 && (\r\n                  <>\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"teal\"\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"45px\",\r\n                        marginBottom: \"10px\",\r\n                      }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}>HTS Services</h2>\r\n                    </LabelSui>\r\n                    <br />\r\n                    <br />\r\n\r\n                    <div className=\"form-group mb-10 col-xs-6 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>Offered HTS</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"offeredHts\"\r\n                          id=\"offeredHts\"\r\n                          onChange={handleInputChangeHtsService}\r\n                          value={htsServices.offeredHts}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>Accepted HTS</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"acceptedHts\"\r\n                          id=\"acceptedHts\"\r\n                          onChange={handleInputChangeHtsService}\r\n                          value={htsServices.acceptedHts}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {htsServices.acceptedHts === \"1\" ? (\r\n                      <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                        <FormGroup>\r\n                          <Label>Hiv Test Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"hivTestResult\"\r\n                            id=\"hivTestResult\"\r\n                            onChange={handleInputChangeHtsService}\r\n                            value={htsServices.hivTestResult}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"positive\">Positive</option>\r\n                            <option value=\"negative\">Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {htsServices.hivTestResult === \"positive\" ? (\r\n                      <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                        <FormGroup>\r\n                          <Label>Reffered for ART</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForArt\"\r\n                            id=\"referredForArt\"\r\n                            onChange={handleInputChangeHtsService}\r\n                            value={htsServices.referredForArt}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {prepCodeVal.prepDtoList?.length > 0 ||\r\n                  (htsServices.hivTestResult === \"negative\" && (\r\n                    <>\r\n                      <LabelSui\r\n                        as=\"a\"\r\n                        color=\"teal\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: \"45px\",\r\n                          marginBottom: \"10px\",\r\n                        }}\r\n                        ribbon\r\n                      >\r\n                        <h2 style={{ color: \"#fff\" }}>PreP Services</h2>\r\n                      </LabelSui>\r\n                      <br />\r\n                      <br />\r\n                      <div className=\"form-group mb-3 col-md-4 \">\r\n                        <FormGroup>\r\n                          <Label>Offered Prep</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredPrep\"\r\n                            id=\"offeredPrep\"\r\n                            onChange={handleInputChangePrepServices}\r\n                            value={prepServices.offeredPrep}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4 \">\r\n                        <FormGroup>\r\n                          <Label>Accepted PreP</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"acceptedPrep\"\r\n                            id=\"acceptedPrep\"\r\n                            onChange={handleInputChangePrepServices}\r\n                            value={prepServices.acceptedPrep}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4 \">\r\n                        <FormGroup>\r\n                          <Label>Reffered for Prep</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForPrep\"\r\n                            id=\"referredForPrep\"\r\n                            onChange={handleInputChangePrepServices}\r\n                            value={prepServices.referredForPrep}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    </>\r\n                  ))}\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Commodity Service</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Condom Dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"condomDispensed\"\r\n                        id=\"condomDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.condomDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.condomDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Condom Dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanycondomDispensed\"\r\n                          id=\"howmanycondomDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanycondomDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Lubricants Dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"lubricantsDispensed\"\r\n                        id=\"lubricantsDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.lubricantsDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.lubricantsDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>How Many Lubricants Dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanylubricantsDispensed\"\r\n                          id=\"howmanylubricantsDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanylubricantsDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Oral Quick/ HIVST dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"oralQuickDispensed\"\r\n                        id=\"oralQuickDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oralQuickDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.oralQuickDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Oral Quick/ HIVST dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanyoralQuickDispensed\"\r\n                          id=\"howmanyoralQuickDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanyoralQuickDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>New Needles/Syringe Dispesend</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"newNeedleDispensed\"\r\n                        id=\"newNeedleDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.newNeedleDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.newNeedleDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>How Many New Needles/Syringe Dispesend</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanynewNeedleDispensed\"\r\n                          id=\"howmanynewNeedleDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanynewNeedleDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Old Needles/Syringe Retrived</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"oldNeedleRetrived\"\r\n                        id=\"oldNeedleRetrived\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oldNeedleRetrived}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.oldNeedleRetrived === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>Old Needles/Syringe Retrived</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanyoldNeedleRetrived\"\r\n                          id=\"howmanyoldNeedleRetrived\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanyoldNeedleRetrived}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Nalxone Provided</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"nalxoneProvided\"\r\n                        id=\"nalxoneProvided\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.nalxoneProvided}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.nalxoneProvided === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Nalxone Provided</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanynalxoneProvided\"\r\n                          id=\"howmanynalxoneProvided\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanynalxoneProvided}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>HIV Educaton Provided</h2>\r\n                  </LabelSui>\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>IEC materials/pamphlets provided </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"iecMaterial\"\r\n                        id=\"iecMaterial\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.iecMaterial}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>InterPersonal Communication</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"interPersonalCommunication\"\r\n                        id=\"interPersonalCommunication\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.interPersonalCommunication}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>Peer Group Communication</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"peerGroupCommunication\"\r\n                        id=\"peerGroupCommunication\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.peerGroupCommunication}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              {/* <div className='card'> */}\r\n\r\n              <div className=\" row d-flex\">\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Biomedical Services</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Screening</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiScreening\"\r\n                          id=\"stiScreening\"\r\n                          value={bioMedicalServices.stiScreening}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"yes\">Yes</option>\r\n                          <option value=\"no\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.stiScreening === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Screening Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreeningResult\"\r\n                            id=\"stiScreeningResult\"\r\n                            value={bioMedicalServices.stiScreeningResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"positive\">Positive</option>\r\n                            <option value=\"negative\">Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.stiScreeningResult === \"positive\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Treatment/ Referral</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiTreatment\"\r\n                            id=\"stiTreatment\"\r\n                            value={bioMedicalServices.stiTreatment}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.stiTreatment === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"stifacilityReffered\"\r\n                          id=\"stifacilityReffered\"\r\n                          value={bioMedicalServices.stifacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Syndromic Management</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiSyndromicManagement\"\r\n                          id=\"stiSyndromicManagement\"\r\n                          value={bioMedicalServices.stiSyndromicManagement}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Screened for TB</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"screenedForTb\"\r\n                          id=\"screenedForTb\"\r\n                          value={bioMedicalServices.screenedForTb}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.screenedForTb === \"no\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided with TPT</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithTpt\"\r\n                            id=\"providedWithTpt\"\r\n                            value={bioMedicalServices.providedWithTpt}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.screenedForTb === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>TB treatment/referral </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"tbtreatmentrefferal\"\r\n                            id=\"tbtreatmentrefferal\"\r\n                            value={bioMedicalServices.tbtreatmentrefferal}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.tbtreatmentrefferal === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"tbfacilityReffered\"\r\n                          id=\"tbfacilityReffered\"\r\n                          value={bioMedicalServices.tbfacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Screened For Viral Heaptits</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"screenedForViralHepatits\"\r\n                          id=\"screenedForViralHepatits\"\r\n                          value={bioMedicalServices.screenedForViralHepatits}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.screenedForViralHepatits === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Viral Hepatits Screen Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"viralHepatitsScreenResult\"\r\n                            id=\"viralHepatitsScreenResult\"\r\n                            value={bioMedicalServices.viralHepatitsScreenResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"positive\"> Positive </option>\r\n                            <option value=\"negative\"> Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Vaccination For Viral Hepatits</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"vaccinationForViralHepatits\"\r\n                          id=\"vaccinationForViralHepatits\"\r\n                          value={bioMedicalServices.vaccinationForViralHepatits}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"Yes\"> Yes </option>\r\n                          <option value=\"No\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Offered Family Planning Services</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"offeredFamilyPlanningServices\"\r\n                          id=\"offeredFamilyPlanningServices\"\r\n                          value={\r\n                            bioMedicalServices.offeredFamilyPlanningServices\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.offeredFamilyPlanningServices ===\r\n                      \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Refferred For Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForFamilyPlanningServices\"\r\n                            id=\"referredForFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.referredForFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Provided With Drug Rehab</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"providedWithDrugRehab\"\r\n                          id=\"providedWithDrugRehab\"\r\n                          value={bioMedicalServices.providedWithDrugRehab}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered MHPSS</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredMhpss\"\r\n                            id=\"offeredMhpss\"\r\n                            value={bioMedicalServices.offeredMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.offeredMhpss === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Type of MHPSS Provided</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"typeofMhpss\"\r\n                            id=\"typeofMhpss\"\r\n                            value={bioMedicalServices.typeofMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Referred to facility for Drug Rehab </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"refferedfacilitydrugrehab\"\r\n                            id=\"refferedfacilitydrugrehab\"\r\n                            value={bioMedicalServices.refferedfacilitydrugrehab}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.refferedfacilitydrugrehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label>Drug Rehab Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"drugRehabfacilityReffered\"\r\n                          id=\"drugRehabfacilityReffered\"\r\n                          value={bioMedicalServices.drugRehabfacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          On Medical Assisted Therapy (MAT) for atleast 6 months\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"onMedicalAssistedTherapy\"\r\n                          id=\"onMedicalAssistedTherapy\"\r\n                          value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Recived Nalxone for Overdose Treatment</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"recivedNalxoneForOverdoseTreatment\"\r\n                          id=\"recivedNalxoneForOverdoseTreatment\"\r\n                          value={\r\n                            bioMedicalServices.recivedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}> Structural Services </h2>\r\n                  </LabelSui>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Provided or Reffered for Empowerment</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"providedOrRefferedForEmpowerment\"\r\n                        id=\"providedOrRefferedForEmpowerment\"\r\n                        value={\r\n                          structuralServices.providedOrRefferedForEmpowerment\r\n                        }\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                    {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                      \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Type of Empowerment Provided </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"typeempowermentprovided\"\r\n                          id=\"typeempowermentprovided\"\r\n                          value={structuralServices.typeempowermentprovided}\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Legal Aid Service Type</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"legalAidServiceType\"\r\n                        id=\"legalAidServiceType\"\r\n                        value={structuralServices.legalAidServiceType}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {structuralServices.legalAidServiceType === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Label> Type of Legal Empowerment Provided </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"typelegalempowerment\"\r\n                        id=\"typelegalempowerment\"\r\n                        value={structuralServices.typelegalempowerment}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {structuralServices.legalAidServiceType === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Label> Legal Program referred </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"legalprogramreferred\"\r\n                        id=\"legalprogramreferred\"\r\n                        value={structuralServices.legalprogramreferred}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}> Service Provider </h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Name of service provider</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"service_provider\"\r\n                        id=\"service_provider\"\r\n                        value={date.service_provider}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n\r\n                      {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                    </FormGroup>\r\n                    {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                      \"Yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                          id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                          value={\r\n                            facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* </div> */}\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                //hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n                onClick={handleSubmit}\r\n                style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n                //disabled={attemptList.length <= 0 && !saving ? true : false}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>\r\n                    {\" \"}\r\n                    {props.activeContent.actionType === \"update\"\r\n                      ? \"Update\"\r\n                      : \"Save\"}\r\n                  </span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>\r\n                    {props.activeContent.actionType === \"update\"\r\n                      ? \"Update...\"\r\n                      : \"Save...\"}\r\n                  </span>\r\n                )}\r\n              </MatButton>\r\n              {/* </div> */}\r\n            </form>\r\n          ) : (\r\n            <div>Client not Eligible for Kp Prev</div>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default KpPrev;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["341","342","343","344","345","346","347","348","349","350","351","352","353","354"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { calculate_age } from \"../../../utils\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CaptureBiometric from \"./CaptureBiometric\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj;\r\n\r\n  //console.log(\"in\", patientObj);\r\n\r\n  useEffect(() => {}, [props.patientObj]);\r\n\r\n  const get_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  // const calculate_age = dob => {\r\n  //   var today = new Date();\r\n  //   var dateParts = dob.split(\"-\");\r\n  //   var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n  //   var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n  //   var age_now = today.getFullYear() - birthDate.getFullYear();\r\n  //   var m = today.getMonth() - birthDate.getMonth();\r\n  //       if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n  //               age_now--;\r\n  //           }\r\n  //       if (age_now === 0) {\r\n  //               return m + \" month(s)\";\r\n  //           }\r\n  //           return age_now + \" year(s)\";\r\n  // };\r\n  const getPhoneNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers.contactPoint.find(\r\n      (obj) => obj.type === \"phone\"\r\n    );\r\n    return phoneNumber ? phoneNumber.value : \"\";\r\n  };\r\n  const getAddress = (identifier) => {\r\n    const identifiers = identifier;\r\n    const address = identifiers.address.find((obj) => obj.city);\r\n    const houseAddress =\r\n      address && address.line[0] !== null ? address.line[0] : \"\";\r\n    const landMark =\r\n      address && address.city && address.city !== null ? address.city : \"\";\r\n    return address ? houseAddress + \" \" + landMark : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    {patientObj.firstName + \" \" + patientObj.lastName}\r\n                  </b>\r\n                  <Link to={\"/\"}>\r\n                    <ButtonMui\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-end ms-2 mr-2 mt-2\"\r\n                      //startIcon={<FaUserPlus size=\"10\"/>}\r\n                      startIcon={<TiArrowBack />}\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                        color: \"#fff\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                    </ButtonMui>\r\n                  </Link>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Patient ID :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>{patientObj.id}</b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>{patientObj.dateOfBirth}</b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {calculate_age(patientObj.dateOfBirth)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Gender :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj.gender !== null\r\n                        ? patientObj.gender.display\r\n                        : \"\"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getPhoneNumber(patientObj.contactPoint)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getAddress(patientObj.address)}{\" \"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\Biometric.js",["355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["386","387","388","389","390"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='kp-prev'){\r\n            props.setActiveContent({...props.activeContent, route:'kp-prevention', id:row.id, actionType:action})\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        } else if(row.path==='kp-prev'){\r\n            //props.setActiveContent({...props.activeContent, route:'kp-prev-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}api/v1/kpprev/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\AddmissionHome.js",["391","392","393","394","395","396"],"import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Vaccination\\VaccinationHistory.js",["397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from \"semantic-ui-react\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Vaccination from \"./../Vaccination/AddViccination\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n  const [vacinationList, setVaccinationtList] = useState([]);\r\n  const patientObj = props && props.patientObj ? props.patientObj : [];\r\n  const [modal, setModal] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [openDeleteModal, setOpenDeleteModal] = React.useState(false);\r\n  const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n  const [record, setRecord] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients Vaccinations\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setVaccinationtList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const loadVaccinationModal = (row) => {\r\n    setModal(!modal);\r\n  };\r\n  const LoadEditModal = (row) => {\r\n    setRecord(row);\r\n    toggle();\r\n  };\r\n  const LoadDeleteModal = (row) => {\r\n    toggleDeleteModal();\r\n    setRecord(row);\r\n  };\r\n\r\n  const dummyData = [\r\n    {\r\n      dateOfServicesProvided: \"2023-10-15\", // Dummy date for the first column\r\n      action: \"Sample Action\", // Dummy data for the second column\r\n    },\r\n    {\r\n      dateOfServicesProvided: \"2023-11-20\", // Another dummy date\r\n      action: \"Another Action\", // Another dummy action\r\n    },\r\n    // Add more objects for additional rows as needed\r\n  ];\r\n  const handleAction = (rowData) => {\r\n    // Define your action handling logic here\r\n    console.log(\"Action clicked for:\", rowData);\r\n  };\r\n\r\n  const LoadVie43wPage = (row, action) => {\r\n    // Placeholder function\r\n    console.log(\"View page loaded for:\", row);\r\n  };\r\n\r\n  //console.log(record)\r\n  const LoadDeletePage = () => {\r\n    setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}covid/vaccinations/${record.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        patients();\r\n        toggleDeleteModal();\r\n        setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <MaterialTable\r\n            icons={tableIcons}\r\n            title=\"Patient Historys \"\r\n            columns={[\r\n              {\r\n                title: \"Date Of Services Provided\",\r\n                field: \"dateOfServicesProvided\",\r\n              },\r\n              {\r\n                title: \"Action\",\r\n                field: \"action\",\r\n                filtering: false,\r\n                render: (rowData) => (\r\n                  <div>\r\n                    <Menu.Menu position=\"right\">\r\n                      <Menu.Item>\r\n                        <Button\r\n                          style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                          primary\r\n                        >\r\n                          <Dropdown\r\n                            item\r\n                            text=\"Action\"\r\n                            style={{ color: \"white\" }}\r\n                          >\r\n                            <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                              <Dropdown.Item\r\n                              //onClick={() => LoadViewPage(rowData, \"view\")}\r\n                              >\r\n                                {\" \"}\r\n                                <Icon name=\"eye\" />\r\n                                View{\" \"}\r\n                              </Dropdown.Item>\r\n\r\n                              <Dropdown.Item\r\n                              // onClick={() => LoadViewPage(rowData, \"update\")}\r\n                              >\r\n                                <Icon name=\"edit\" />\r\n                                Edit\r\n                              </Dropdown.Item>\r\n\r\n                              <Dropdown.Item\r\n                              //onClick={() => LoadModal(rowData, \"delete\")}\r\n                              >\r\n                                {\" \"}\r\n                                <Icon name=\"trash\" /> Delete\r\n                              </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                          </Dropdown>\r\n                        </Button>\r\n                      </Menu.Item>\r\n                    </Menu.Menu>\r\n                  </div>\r\n                ),\r\n              },\r\n\r\n              // { title: \"Dose Number\", field: \"doseNumber\", filtering: false },\r\n              // { title: \"Location\", field: \"location\", filtering: false },\r\n              // { title: \"Batch Number\", field: \"batchNumber\", filtering: false },\r\n              // { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n              // { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false },\r\n              // { title: \"Actions\", field: \"actions\", filtering: false },\r\n            ]}\r\n            //   data={ vacinationList.map((row) => ({\r\n\r\n            //         //dateOfServicesProvided: row\r\n            //        // vaccine: row.vaccineName,\r\n            //         //vaccineDate: row.vaccineDate,\r\n            //         //batchNumber: row.batchNumber,\r\n            //         //doseNumber: row.doseNumber,\r\n            //        // location: row.location,\r\n            //         //vaccinationFacility: row.vaccinationFacility,\r\n            //         //adverseEffect: row.adverseEffect,\r\n            //         actions:\r\n\r\n            //         <div>\r\n            //             <Menu.Menu position='right'  >\r\n            //             <Menu.Item >\r\n            //                 <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n            //                 <Dropdown item text='Action'>\r\n\r\n            //                 <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n            //                     <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n            //                     <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n            //                 </Dropdown.Menu>\r\n            //             </Dropdown>\r\n            //                 </Button>\r\n            //             </Menu.Item>\r\n            //             </Menu.Menu>\r\n            //         </div>\r\n\r\n            //       }))}\r\n            data={dummyData}\r\n            //columns={columns}\r\n\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n              },\r\n              searchFieldStyle: {\r\n                width: \"200%\",\r\n                margingLeft: \"250px\",\r\n              },\r\n              filtering: false,\r\n              exportButton: false,\r\n              searchFieldAlignment: \"left\",\r\n              pageSizeOptions: [10, 20, 100],\r\n              pageSize: 10,\r\n              debounceInterval: 400,\r\n            }}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <Vaccination\r\n        toggle={toggle}\r\n        showModal={modal}\r\n        patientObj={props.patientObj}\r\n        loadPatients={patients}\r\n        records={record}\r\n      />\r\n      <Modal\r\n        show={openDeleteModal}\r\n        toggle={toggleDeleteModal}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete -{\" \"}\r\n            <b>{record && record.batchNumber}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? \"Yes\" : \"Deleting...\"}\r\n          </Button>\r\n          <Button\r\n            onClick={toggleDeleteModal}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientVaccinationHistory;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js",["417","418","419","420","421"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport VaccinationHistory from \"./../Vaccination/VaccinationHistory\";\r\nimport KpPrevHistory from \"./../KpPrev/KpPrevHistory\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\nconst RecentHistory = (props) => {\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [loadingRecent, setLoadingRecent] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (props.patientObj && props.patientObj !== null) {\r\n      RecentActivities();\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  // const RecentActivities = () => {\r\n  //   axios\r\n  //   .put('/api/v1/kpprev', data, {\r\n  //     headers: { Authorization: `Bearer ${token}` },\r\n  //   })\r\n  //     .then((response) => {\r\n  //       setLoadingRecent(false);\r\n  //       setRecentActivities(response.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       setLoadingRecent(false);\r\n  //       //console.log(error);\r\n  //     });\r\n  // };\r\n  //Get list of LaboratoryHistory\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}api/v1/kpprev/retrieve ${props.patientObj.id}/activities?full=false`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoadingRecent(false);\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setLoadingRecent(false);\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === \"\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"kp-prevention\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row\">\r\n        <KpPrevHistory patientObj={props.patientObj} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\api.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Patient\\CaptureBiometric.js",["422","423","424","425","426","427","428","429","430","431","432","433","434","435","436"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\KpPrev\\KpPrevHistory.js",["437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from \"semantic-ui-react\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Vaccination from \"./../Vaccination/AddViccination\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst KpPrevHistory = (props) => {\r\n  const [vacinationList, setVaccinationtList] = useState([]);\r\n  const patientObj = props && props.patientObj ? props.patientObj : [];\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [openDeleteModal, setOpenDeleteModal] = React.useState(false);\r\n  const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n  const [record, setRecord] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients Vaccinations\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}kpprev/${patientObj.uuid}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setVaccinationtList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const loadVaccinationModal = (row) => {\r\n    setModal(!modal);\r\n  };\r\n  const LoadEditModal = (row) => {\r\n    setRecord(row);\r\n    toggle();\r\n  };\r\n  const LoadDeleteModal = (row) => {\r\n    toggleDeleteModal();\r\n    setRecord(row);\r\n  };\r\n\r\n  const dummyData = [\r\n    {\r\n      dateOfServicesProvided: \"2023-10-15\", // Dummy date for the first column\r\n      action: \"Sample Action\", // Dummy data for the second column\r\n    },\r\n    {\r\n      dateOfServicesProvided: \"2023-11-20\", // Another dummy date\r\n      action: \"Another Action\", // Another dummy action\r\n    },\r\n    // Add more objects for additional rows as needed\r\n  ];\r\n  const handleAction = (rowData) => {\r\n    // Define your action handling logic here\r\n    console.log(\"Action clicked for:\", rowData);\r\n  };\r\n\r\n  const LoadVie43wPage = (row, action) => {\r\n    // Placeholder function\r\n    console.log(\"View page loaded for:\", row);\r\n  };\r\n\r\n  //console.log(record)\r\n  const LoadDeletePage = () => {\r\n    setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}kpprev/${record.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        patients();\r\n        toggleDeleteModal();\r\n        setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <MaterialTable\r\n            icons={tableIcons}\r\n            title=\"Patient Kp-Prev History \"\r\n            columns={[\r\n              {\r\n                title: \"Date Of Services Provided\",\r\n                field: \"dateOfServicesProvided\",\r\n              },\r\n              {\r\n                title: \"Prevention Code\",\r\n                field: \"preventioncode\",\r\n                filtering: false,\r\n              },\r\n              { title: \"HTS Services\", field: \"htsServices\", filtering: false },\r\n              {\r\n                title: \"Prep Services\",\r\n                field: \"prepServices\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"Commodity Services\",\r\n                field: \"commodityServices\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"HIV Educational Services\",\r\n                field: \"hivEducationalServices\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"Biomedical Services\",\r\n                field: \"biomedicalServices\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"Structural Services\",\r\n                field: \"structuralServices\",\r\n                filtering: false,\r\n              },\r\n              // {\r\n              //   title: \"Action\",\r\n              //   field: \"action\",\r\n              //   filtering: false,\r\n              // },\r\n\r\n              // { title: \"Actions\", field: \"biomedicalServices\", filtering: false },\r\n            ]}\r\n            data={vacinationList.map((row) => ({\r\n              dateOfServicesProvided: row.dateServiceOffered,\r\n              preventioncode: row.prevCode,\r\n              htsServices: row.htsServices?.offered_hts !== \"\" ? \"✅\" : \"❌\",\r\n              prepServices: row.prepServices?.offered_prep !== \"\" ? \"✅\" : \"❌\",\r\n              commodityServices:\r\n                row.commodityServices?.condoms_dispensed !== \"\" ? \"✅\" : \"❌\",\r\n              hivEducationalServices:\r\n                row.hivEducationalServices?.iecMaterial !== \"\" ? \"✅\" : \"❌\",\r\n              biomedicalServices:\r\n                row.biomedicalServices?.sti_screening !== \"\" ? \"✅\" : \"❌\",\r\n              structuralServices:\r\n                row.structuralServices?.legalAidServices !== \"\" ? \"✅\" : \"❌\",\r\n              // action: (\r\n              //   <div>\r\n              //     <Menu.Menu position=\"right\">\r\n              //       <Menu.Item>\r\n              //         <Button\r\n              //           style={{\r\n              //             backgroundColor: \"rgb(153,46,98)\",\r\n              //             color: \"#fff\",\r\n              //           }}\r\n              //           primary\r\n              //         >\r\n              //           <Dropdown item text=\"Action\">\r\n              //             <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n              //               <Dropdown.Item onClick={() => LoadEditModal(row)}>\r\n              //                 <IconMenu name=\"edit\" />\r\n              //                 Edit\r\n              //               </Dropdown.Item>\r\n              //               <Dropdown.Item onClick={() => LoadDeleteModal(row)}>\r\n              //                 {\" \"}\r\n              //                 <IconMenu name=\"trash\" /> Delete\r\n              //               </Dropdown.Item>\r\n              //             </Dropdown.Menu>\r\n              //           </Dropdown>\r\n              //         </Button>\r\n              //       </Menu.Item>\r\n              //     </Menu.Menu>\r\n              //   </div>\r\n              // ),\r\n            }))}\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n              },\r\n              searchFieldStyle: {\r\n                width: \"200%\",\r\n                margingLeft: \"250px\",\r\n              },\r\n              filtering: false,\r\n              exportButton: false,\r\n              searchFieldAlignment: \"left\",\r\n              pageSizeOptions: [10, 20, 100],\r\n              pageSize: 10,\r\n              debounceInterval: 400,\r\n            }}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <Vaccination\r\n        toggle={toggle}\r\n        showModal={modal}\r\n        patientObj={props.patientObj}\r\n        loadPatients={patients}\r\n        records={record}\r\n      />\r\n      <Modal\r\n        show={openDeleteModal}\r\n        toggle={toggleDeleteModal}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete -{\" \"}\r\n            <b>{record && record.batchNumber}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? \"Yes\" : \"Deleting...\"}\r\n          </Button>\r\n          <Button\r\n            onClick={toggleDeleteModal}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KpPrevHistory;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Vaccination\\AddViccination.js",["456","457","458","459"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\SupportiveCare.js",["460","461","462","463"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\SignsSymptons.js",["464","465","466","467"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\Medication.js",["468","469","470","471"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\ChronicMedication.js",["472","473","474","475"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\VitalSign.js",["476","477","478","479"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\ReInfection.js",["480","481","482","483"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\InclusionCriteria.js",["484","485","486","487"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\Demograhic.js",["488","489","490","491"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\Comorbitie.js",["492","493","494","495"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\jsx\\components\\Admission\\Vaccination.js",["496","497","498","499"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","C:\\Users\\victor.ajor\\Lamisplus_public\\KP-Prev-Module\\src\\main\\webapp\\utils\\index.js",["500","501"],"export const calculate_age = (dob) => {\r\n  if (dob !== null && dob != \"\") {\r\n    //Check if the DOB is not null or empty\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob);\r\n\r\n    // get the day, month and year of today\r\n    let todayMonth = today.getMonth();\r\n    let todayYear = today.getFullYear();\r\n    let todayDate = today.getDate();\r\n\r\n    // get the day, month and year from date of birth\r\n    let birthDateMonth = birthDate.getMonth();\r\n    let birthDateYear = birthDate.getFullYear();\r\n    let birthdateDate = birthDate.getDate();\r\n\r\n    // substract birthdate year from today year  ie todayYear - birthdateYear which  will give  \"AssumedAge\" is the age  we assume the patient will clock this year\r\n\r\n    let assumedAge = todayYear - birthDateYear;\r\n    if (assumedAge > 0) {\r\n      //Checking the month to confirm if the age has been cloocked\r\n\r\n      let monthGap = todayMonth - birthDateMonth;\r\n\r\n      // If 'monthGap'> 0, the age has been clocked, 'monthGap'< 0, the age has not been clocked, 'monthGap'= 0, we are in the month then check date to confirm clocked age\r\n\r\n      if (monthGap > 0) {\r\n        return assumedAge + \" year(s)\";\r\n      } else if (monthGap < 0) {\r\n        let confirmedAge = assumedAge - 1;\r\n        return confirmedAge + \" year(s)\";\r\n      } else if (monthGap === 0) {\r\n        let dateGap = todayDate - birthdateDate;\r\n\r\n        if (dateGap > 0) {\r\n          return assumedAge + \" year(s)\";\r\n        } else if (dateGap < 0) {\r\n          let confirmedAge = assumedAge - 1;\r\n          return confirmedAge + \" year(s)\";\r\n        }\r\n      }\r\n    } else {\r\n      let monthGap = todayMonth - birthDateMonth;\r\n      let dateGap = todayDate - birthdateDate;\r\n\r\n      let monthOld = monthGap > 0 ? monthGap : 0;\r\n      let DayOld = dateGap > 0 ? dateGap : 0;\r\n\r\n      let result = monthOld ? monthOld + \"month(s)\" : DayOld + \"day(s)\";\r\n      return result;\r\n    }\r\n  }\r\n};\r\n",{"ruleId":"502","severity":1,"message":"503","line":4,"column":41,"nodeType":"504","messageId":"505","endLine":4,"endColumn":47},{"ruleId":"502","severity":1,"message":"506","line":6,"column":10,"nodeType":"504","messageId":"505","endLine":6,"endColumn":14},{"ruleId":"502","severity":1,"message":"507","line":7,"column":8,"nodeType":"504","messageId":"505","endLine":7,"endColumn":14},{"ruleId":"502","severity":1,"message":"508","line":8,"column":10,"nodeType":"504","messageId":"505","endLine":8,"endColumn":20},{"ruleId":"502","severity":1,"message":"509","line":12,"column":8,"nodeType":"504","messageId":"505","endLine":12,"endColumn":22},{"ruleId":"502","severity":1,"message":"510","line":13,"column":8,"nodeType":"504","messageId":"505","endLine":13,"endColumn":18},{"ruleId":"502","severity":1,"message":"511","line":14,"column":8,"nodeType":"504","messageId":"505","endLine":14,"endColumn":22},{"ruleId":"502","severity":1,"message":"512","line":15,"column":8,"nodeType":"504","messageId":"505","endLine":15,"endColumn":33},{"ruleId":"513","severity":1,"message":"514","line":64,"column":9,"nodeType":"515","endLine":67,"endColumn":11},{"ruleId":"502","severity":1,"message":"516","line":68,"column":9,"nodeType":"504","messageId":"505","endLine":68,"endColumn":15},{"ruleId":"502","severity":1,"message":"517","line":5,"column":50,"nodeType":"504","messageId":"505","endLine":5,"endColumn":60},{"ruleId":"502","severity":1,"message":"518","line":18,"column":8,"nodeType":"504","messageId":"505","endLine":18,"endColumn":15},{"ruleId":"502","severity":1,"message":"519","line":27,"column":8,"nodeType":"504","messageId":"505","endLine":27,"endColumn":18},{"ruleId":"502","severity":1,"message":"520","line":32,"column":10,"nodeType":"504","messageId":"505","endLine":32,"endColumn":24},{"ruleId":"502","severity":1,"message":"521","line":33,"column":10,"nodeType":"504","messageId":"505","endLine":33,"endColumn":14},{"ruleId":"502","severity":1,"message":"522","line":33,"column":16,"nodeType":"504","messageId":"505","endLine":33,"endColumn":20},{"ruleId":"502","severity":1,"message":"523","line":146,"column":32,"nodeType":"504","messageId":"505","endLine":146,"endColumn":55},{"ruleId":"502","severity":1,"message":"524","line":157,"column":10,"nodeType":"504","messageId":"505","endLine":157,"endColumn":21},{"ruleId":"502","severity":1,"message":"525","line":161,"column":22,"nodeType":"504","messageId":"505","endLine":161,"endColumn":35},{"ruleId":"502","severity":1,"message":"526","line":172,"column":10,"nodeType":"504","messageId":"505","endLine":172,"endColumn":17},{"ruleId":"527","severity":1,"message":"528","line":188,"column":5,"nodeType":"529","messageId":"530","endLine":188,"endColumn":14},{"ruleId":"502","severity":1,"message":"531","line":195,"column":10,"nodeType":"504","messageId":"505","endLine":195,"endColumn":28},{"ruleId":"502","severity":1,"message":"532","line":200,"column":3,"nodeType":"504","messageId":"505","endLine":200,"endColumn":12},{"ruleId":"513","severity":1,"message":"533","line":216,"column":6,"nodeType":"534","endLine":216,"endColumn":36,"suggestions":"535"},{"ruleId":"502","severity":1,"message":"536","line":435,"column":9,"nodeType":"504","messageId":"505","endLine":435,"endColumn":26},{"ruleId":"537","severity":1,"message":"538","line":480,"column":23,"nodeType":"539","messageId":"530","endLine":480,"endColumn":25},{"ruleId":"537","severity":1,"message":"538","line":519,"column":47,"nodeType":"539","messageId":"530","endLine":519,"endColumn":49},{"ruleId":"502","severity":1,"message":"540","line":528,"column":13,"nodeType":"504","messageId":"505","endLine":528,"endColumn":27},{"ruleId":"541","severity":1,"message":"542","line":531,"column":26,"nodeType":"543","messageId":"544","endLine":531,"endColumn":28},{"ruleId":"537","severity":1,"message":"538","line":585,"column":35,"nodeType":"539","messageId":"530","endLine":585,"endColumn":37},{"ruleId":"502","severity":1,"message":"545","line":610,"column":15,"nodeType":"504","messageId":"505","endLine":610,"endColumn":30},{"ruleId":"502","severity":1,"message":"546","line":623,"column":15,"nodeType":"504","messageId":"505","endLine":623,"endColumn":23},{"ruleId":"502","severity":1,"message":"547","line":793,"column":9,"nodeType":"504","messageId":"505","endLine":793,"endColumn":26},{"ruleId":"548","severity":1,"message":"549","line":798,"column":36,"nodeType":"550","messageId":"551","endLine":798,"endColumn":63,"fix":"552"},{"ruleId":"502","severity":1,"message":"553","line":816,"column":9,"nodeType":"504","messageId":"505","endLine":816,"endColumn":41},{"ruleId":"548","severity":1,"message":"554","line":818,"column":36,"nodeType":"550","messageId":"551","endLine":818,"endColumn":76,"fix":"555"},{"ruleId":"548","severity":1,"message":"554","line":821,"column":36,"nodeType":"550","messageId":"551","endLine":821,"endColumn":65,"fix":"556"},{"ruleId":"502","severity":1,"message":"557","line":826,"column":11,"nodeType":"504","messageId":"505","endLine":826,"endColumn":16},{"ruleId":"502","severity":1,"message":"558","line":835,"column":9,"nodeType":"504","messageId":"505","endLine":835,"endColumn":44},{"ruleId":"548","severity":1,"message":"559","line":839,"column":9,"nodeType":"550","messageId":"551","endLine":839,"endColumn":52,"fix":"560"},{"ruleId":"548","severity":1,"message":"559","line":843,"column":36,"nodeType":"550","messageId":"551","endLine":843,"endColumn":68,"fix":"561"},{"ruleId":"502","severity":1,"message":"562","line":3,"column":9,"nodeType":"504","messageId":"505","endLine":3,"endColumn":15},{"ruleId":"502","severity":1,"message":"563","line":10,"column":9,"nodeType":"504","messageId":"505","endLine":10,"endColumn":20},{"ruleId":"502","severity":1,"message":"564","line":11,"column":13,"nodeType":"504","messageId":"505","endLine":11,"endColumn":16},{"ruleId":"502","severity":1,"message":"565","line":23,"column":9,"nodeType":"504","messageId":"505","endLine":23,"endColumn":16},{"ruleId":"502","severity":1,"message":"566","line":27,"column":10,"nodeType":"504","messageId":"505","endLine":27,"endColumn":18},{"ruleId":"502","severity":1,"message":"567","line":121,"column":19,"nodeType":"504","messageId":"505","endLine":121,"endColumn":27},{"ruleId":"502","severity":1,"message":"568","line":123,"column":20,"nodeType":"504","messageId":"505","endLine":123,"endColumn":29},{"ruleId":"502","severity":1,"message":"569","line":126,"column":12,"nodeType":"504","messageId":"505","endLine":126,"endColumn":24},{"ruleId":"502","severity":1,"message":"570","line":126,"column":26,"nodeType":"504","messageId":"505","endLine":126,"endColumn":41},{"ruleId":"502","severity":1,"message":"571","line":136,"column":12,"nodeType":"504","messageId":"505","endLine":136,"endColumn":38},{"ruleId":"502","severity":1,"message":"525","line":137,"column":24,"nodeType":"504","messageId":"505","endLine":137,"endColumn":37},{"ruleId":"502","severity":1,"message":"572","line":138,"column":11,"nodeType":"504","messageId":"505","endLine":138,"endColumn":21},{"ruleId":"502","severity":1,"message":"573","line":161,"column":30,"nodeType":"504","messageId":"505","endLine":161,"endColumn":48},{"ruleId":"502","severity":1,"message":"540","line":192,"column":19,"nodeType":"504","messageId":"505","endLine":192,"endColumn":33},{"ruleId":"541","severity":1,"message":"542","line":192,"column":107,"nodeType":"543","messageId":"544","endLine":192,"endColumn":109},{"ruleId":"537","severity":1,"message":"538","line":209,"column":80,"nodeType":"539","messageId":"530","endLine":209,"endColumn":82},{"ruleId":"537","severity":1,"message":"538","line":210,"column":74,"nodeType":"539","messageId":"530","endLine":210,"endColumn":76},{"ruleId":"537","severity":1,"message":"538","line":211,"column":74,"nodeType":"539","messageId":"530","endLine":211,"endColumn":76},{"ruleId":"537","severity":1,"message":"538","line":212,"column":77,"nodeType":"539","messageId":"530","endLine":212,"endColumn":79},{"ruleId":"513","severity":1,"message":"574","line":247,"column":8,"nodeType":"534","endLine":247,"endColumn":61,"suggestions":"575"},{"ruleId":"502","severity":1,"message":"576","line":291,"column":11,"nodeType":"504","messageId":"505","endLine":291,"endColumn":42},{"ruleId":"537","severity":1,"message":"538","line":392,"column":28,"nodeType":"539","messageId":"530","endLine":392,"endColumn":30},{"ruleId":"537","severity":1,"message":"538","line":394,"column":35,"nodeType":"539","messageId":"530","endLine":394,"endColumn":37},{"ruleId":"537","severity":1,"message":"538","line":469,"column":49,"nodeType":"539","messageId":"530","endLine":469,"endColumn":51},{"ruleId":"537","severity":1,"message":"538","line":488,"column":69,"nodeType":"539","messageId":"530","endLine":488,"endColumn":71},{"ruleId":"537","severity":1,"message":"538","line":522,"column":49,"nodeType":"539","messageId":"530","endLine":522,"endColumn":51},{"ruleId":"502","severity":1,"message":"540","line":532,"column":19,"nodeType":"504","messageId":"505","endLine":532,"endColumn":33},{"ruleId":"541","severity":1,"message":"542","line":532,"column":83,"nodeType":"543","messageId":"544","endLine":532,"endColumn":85},{"ruleId":"537","severity":1,"message":"538","line":590,"column":67,"nodeType":"539","messageId":"530","endLine":590,"endColumn":69},{"ruleId":"502","severity":1,"message":"546","line":615,"column":23,"nodeType":"504","messageId":"505","endLine":615,"endColumn":31},{"ruleId":"502","severity":1,"message":"562","line":3,"column":9,"nodeType":"504","messageId":"505","endLine":3,"endColumn":15},{"ruleId":"502","severity":1,"message":"563","line":10,"column":9,"nodeType":"504","messageId":"505","endLine":10,"endColumn":20},{"ruleId":"502","severity":1,"message":"564","line":11,"column":13,"nodeType":"504","messageId":"505","endLine":11,"endColumn":16},{"ruleId":"502","severity":1,"message":"565","line":23,"column":9,"nodeType":"504","messageId":"505","endLine":23,"endColumn":16},{"ruleId":"502","severity":1,"message":"566","line":27,"column":10,"nodeType":"504","messageId":"505","endLine":27,"endColumn":18},{"ruleId":"502","severity":1,"message":"577","line":145,"column":12,"nodeType":"504","messageId":"505","endLine":145,"endColumn":17},{"ruleId":"502","severity":1,"message":"567","line":145,"column":19,"nodeType":"504","messageId":"505","endLine":145,"endColumn":27},{"ruleId":"502","severity":1,"message":"568","line":147,"column":20,"nodeType":"504","messageId":"505","endLine":147,"endColumn":29},{"ruleId":"502","severity":1,"message":"569","line":151,"column":12,"nodeType":"504","messageId":"505","endLine":151,"endColumn":24},{"ruleId":"502","severity":1,"message":"570","line":151,"column":26,"nodeType":"504","messageId":"505","endLine":151,"endColumn":41},{"ruleId":"502","severity":1,"message":"571","line":161,"column":12,"nodeType":"504","messageId":"505","endLine":161,"endColumn":38},{"ruleId":"502","severity":1,"message":"578","line":162,"column":12,"nodeType":"504","messageId":"505","endLine":162,"endColumn":22},{"ruleId":"502","severity":1,"message":"525","line":162,"column":24,"nodeType":"504","messageId":"505","endLine":162,"endColumn":37},{"ruleId":"502","severity":1,"message":"579","line":168,"column":13,"nodeType":"504","messageId":"505","endLine":168,"endColumn":25},{"ruleId":"502","severity":1,"message":"580","line":184,"column":13,"nodeType":"504","messageId":"505","endLine":184,"endColumn":27},{"ruleId":"502","severity":1,"message":"581","line":186,"column":13,"nodeType":"504","messageId":"505","endLine":186,"endColumn":26},{"ruleId":"502","severity":1,"message":"582","line":187,"column":13,"nodeType":"504","messageId":"505","endLine":187,"endColumn":21},{"ruleId":"502","severity":1,"message":"583","line":188,"column":13,"nodeType":"504","messageId":"505","endLine":188,"endColumn":15},{"ruleId":"502","severity":1,"message":"584","line":189,"column":13,"nodeType":"504","messageId":"505","endLine":189,"endColumn":19},{"ruleId":"502","severity":1,"message":"585","line":189,"column":21,"nodeType":"504","messageId":"505","endLine":189,"endColumn":30},{"ruleId":"502","severity":1,"message":"586","line":190,"column":13,"nodeType":"504","messageId":"505","endLine":190,"endColumn":28},{"ruleId":"502","severity":1,"message":"587","line":192,"column":13,"nodeType":"504","messageId":"505","endLine":192,"endColumn":23},{"ruleId":"502","severity":1,"message":"588","line":192,"column":25,"nodeType":"504","messageId":"505","endLine":192,"endColumn":38},{"ruleId":"502","severity":1,"message":"589","line":194,"column":13,"nodeType":"504","messageId":"505","endLine":194,"endColumn":24},{"ruleId":"502","severity":1,"message":"590","line":196,"column":13,"nodeType":"504","messageId":"505","endLine":196,"endColumn":28},{"ruleId":"502","severity":1,"message":"573","line":196,"column":30,"nodeType":"504","messageId":"505","endLine":196,"endColumn":48},{"ruleId":"502","severity":1,"message":"540","line":227,"column":19,"nodeType":"504","messageId":"505","endLine":227,"endColumn":33},{"ruleId":"541","severity":1,"message":"542","line":227,"column":107,"nodeType":"543","messageId":"544","endLine":227,"endColumn":109},{"ruleId":"513","severity":1,"message":"591","line":287,"column":8,"nodeType":"534","endLine":287,"endColumn":61,"suggestions":"592"},{"ruleId":"502","severity":1,"message":"576","line":345,"column":11,"nodeType":"504","messageId":"505","endLine":345,"endColumn":42},{"ruleId":"537","severity":1,"message":"538","line":454,"column":28,"nodeType":"539","messageId":"530","endLine":454,"endColumn":30},{"ruleId":"537","severity":1,"message":"538","line":456,"column":35,"nodeType":"539","messageId":"530","endLine":456,"endColumn":37},{"ruleId":"537","severity":1,"message":"538","line":508,"column":49,"nodeType":"539","messageId":"530","endLine":508,"endColumn":51},{"ruleId":"537","severity":1,"message":"538","line":558,"column":49,"nodeType":"539","messageId":"530","endLine":558,"endColumn":51},{"ruleId":"537","severity":1,"message":"538","line":577,"column":69,"nodeType":"539","messageId":"530","endLine":577,"endColumn":71},{"ruleId":"502","severity":1,"message":"593","line":701,"column":11,"nodeType":"504","messageId":"505","endLine":701,"endColumn":25},{"ruleId":"502","severity":1,"message":"540","line":718,"column":19,"nodeType":"504","messageId":"505","endLine":718,"endColumn":33},{"ruleId":"541","severity":1,"message":"542","line":718,"column":83,"nodeType":"543","messageId":"544","endLine":718,"endColumn":85},{"ruleId":"537","severity":1,"message":"538","line":778,"column":67,"nodeType":"539","messageId":"530","endLine":778,"endColumn":69},{"ruleId":"502","severity":1,"message":"546","line":803,"column":23,"nodeType":"504","messageId":"505","endLine":803,"endColumn":31},{"ruleId":"502","severity":1,"message":"594","line":5,"column":3,"nodeType":"504","messageId":"505","endLine":5,"endColumn":7},{"ruleId":"502","severity":1,"message":"507","line":9,"column":3,"nodeType":"504","messageId":"505","endLine":9,"endColumn":9},{"ruleId":"595","severity":1,"message":"596","line":21,"column":10,"nodeType":"597","messageId":"598","endLine":21,"endColumn":24,"fix":"599"},{"ruleId":"502","severity":1,"message":"521","line":25,"column":10,"nodeType":"504","messageId":"505","endLine":25,"endColumn":14},{"ruleId":"502","severity":1,"message":"522","line":25,"column":16,"nodeType":"504","messageId":"505","endLine":25,"endColumn":20},{"ruleId":"502","severity":1,"message":"600","line":96,"column":7,"nodeType":"504","messageId":"505","endLine":96,"endColumn":16},{"ruleId":"502","severity":1,"message":"601","line":105,"column":10,"nodeType":"504","messageId":"505","endLine":105,"endColumn":19},{"ruleId":"502","severity":1,"message":"602","line":115,"column":9,"nodeType":"504","messageId":"505","endLine":115,"endColumn":14},{"ruleId":"502","severity":1,"message":"603","line":116,"column":9,"nodeType":"504","messageId":"505","endLine":116,"endColumn":19},{"ruleId":"502","severity":1,"message":"604","line":122,"column":10,"nodeType":"504","messageId":"505","endLine":122,"endColumn":20},{"ruleId":"502","severity":1,"message":"605","line":122,"column":22,"nodeType":"504","messageId":"505","endLine":122,"endColumn":35},{"ruleId":"502","severity":1,"message":"606","line":123,"column":10,"nodeType":"504","messageId":"505","endLine":123,"endColumn":21},{"ruleId":"502","severity":1,"message":"607","line":123,"column":23,"nodeType":"504","messageId":"505","endLine":123,"endColumn":37},{"ruleId":"502","severity":1,"message":"608","line":233,"column":9,"nodeType":"504","messageId":"505","endLine":233,"endColumn":34},{"ruleId":"502","severity":1,"message":"609","line":1,"column":17,"nodeType":"504","messageId":"505","endLine":1,"endColumn":26},{"ruleId":"502","severity":1,"message":"610","line":1,"column":28,"nodeType":"504","messageId":"505","endLine":1,"endColumn":36},{"ruleId":"595","severity":1,"message":"596","line":5,"column":10,"nodeType":"597","messageId":"598","endLine":5,"endColumn":24,"fix":"611"},{"ruleId":"502","severity":1,"message":"612","line":31,"column":10,"nodeType":"504","messageId":"505","endLine":31,"endColumn":15},{"ruleId":"502","severity":1,"message":"613","line":34,"column":8,"nodeType":"504","messageId":"505","endLine":34,"endColumn":14},{"ruleId":"502","severity":1,"message":"614","line":35,"column":10,"nodeType":"504","messageId":"505","endLine":35,"endColumn":23},{"ruleId":"502","severity":1,"message":"615","line":65,"column":7,"nodeType":"504","messageId":"505","endLine":65,"endColumn":16},{"ruleId":"502","severity":1,"message":"609","line":1,"column":17,"nodeType":"504","messageId":"505","endLine":1,"endColumn":26},{"ruleId":"502","severity":1,"message":"610","line":1,"column":28,"nodeType":"504","messageId":"505","endLine":1,"endColumn":36},{"ruleId":"595","severity":1,"message":"596","line":5,"column":10,"nodeType":"597","messageId":"598","endLine":5,"endColumn":24,"fix":"616"},{"ruleId":"502","severity":1,"message":"612","line":31,"column":10,"nodeType":"504","messageId":"505","endLine":31,"endColumn":15},{"ruleId":"502","severity":1,"message":"613","line":34,"column":8,"nodeType":"504","messageId":"505","endLine":34,"endColumn":14},{"ruleId":"502","severity":1,"message":"508","line":35,"column":10,"nodeType":"504","messageId":"505","endLine":35,"endColumn":20},{"ruleId":"502","severity":1,"message":"617","line":36,"column":10,"nodeType":"504","messageId":"505","endLine":36,"endColumn":24},{"ruleId":"502","severity":1,"message":"615","line":66,"column":7,"nodeType":"504","messageId":"505","endLine":66,"endColumn":16},{"ruleId":"502","severity":1,"message":"618","line":129,"column":11,"nodeType":"504","messageId":"505","endLine":129,"endColumn":20},{"ruleId":"537","severity":1,"message":"538","line":144,"column":25,"nodeType":"539","messageId":"530","endLine":144,"endColumn":27},{"ruleId":"502","severity":1,"message":"619","line":3,"column":9,"nodeType":"504","messageId":"505","endLine":3,"endColumn":17},{"ruleId":"502","severity":1,"message":"620","line":15,"column":11,"nodeType":"504","messageId":"505","endLine":15,"endColumn":18},{"ruleId":"502","severity":1,"message":"621","line":16,"column":9,"nodeType":"504","messageId":"505","endLine":16,"endColumn":15},{"ruleId":"502","severity":1,"message":"603","line":19,"column":12,"nodeType":"504","messageId":"505","endLine":19,"endColumn":22},{"ruleId":"502","severity":1,"message":"622","line":19,"column":24,"nodeType":"504","messageId":"505","endLine":19,"endColumn":37},{"ruleId":"502","severity":1,"message":"623","line":20,"column":12,"nodeType":"504","messageId":"505","endLine":20,"endColumn":22},{"ruleId":"502","severity":1,"message":"624","line":20,"column":24,"nodeType":"504","messageId":"505","endLine":20,"endColumn":37},{"ruleId":"513","severity":1,"message":"625","line":24,"column":8,"nodeType":"534","endLine":24,"endColumn":26,"suggestions":"626"},{"ruleId":"502","severity":1,"message":"627","line":33,"column":23,"nodeType":"504","messageId":"505","endLine":33,"endColumn":29},{"ruleId":"502","severity":1,"message":"628","line":34,"column":23,"nodeType":"504","messageId":"505","endLine":34,"endColumn":33},{"ruleId":"502","severity":1,"message":"594","line":5,"column":3,"nodeType":"504","messageId":"505","endLine":5,"endColumn":7},{"ruleId":"502","severity":1,"message":"507","line":9,"column":3,"nodeType":"504","messageId":"505","endLine":9,"endColumn":9},{"ruleId":"502","severity":1,"message":"506","line":11,"column":10,"nodeType":"504","messageId":"505","endLine":11,"endColumn":14},{"ruleId":"502","severity":1,"message":"629","line":11,"column":28,"nodeType":"504","messageId":"505","endLine":11,"endColumn":39},{"ruleId":"595","severity":1,"message":"596","line":18,"column":10,"nodeType":"597","messageId":"598","endLine":18,"endColumn":24,"fix":"630"},{"ruleId":"502","severity":1,"message":"521","line":22,"column":10,"nodeType":"504","messageId":"505","endLine":22,"endColumn":14},{"ruleId":"502","severity":1,"message":"522","line":22,"column":16,"nodeType":"504","messageId":"505","endLine":22,"endColumn":20},{"ruleId":"502","severity":1,"message":"600","line":92,"column":7,"nodeType":"504","messageId":"505","endLine":92,"endColumn":16},{"ruleId":"502","severity":1,"message":"601","line":101,"column":10,"nodeType":"504","messageId":"505","endLine":101,"endColumn":19},{"ruleId":"502","severity":1,"message":"602","line":111,"column":9,"nodeType":"504","messageId":"505","endLine":111,"endColumn":14},{"ruleId":"502","severity":1,"message":"631","line":117,"column":28,"nodeType":"504","messageId":"505","endLine":117,"endColumn":47},{"ruleId":"513","severity":1,"message":"632","line":162,"column":6,"nodeType":"534","endLine":162,"endColumn":8,"suggestions":"633"},{"ruleId":"502","severity":1,"message":"608","line":247,"column":9,"nodeType":"504","messageId":"505","endLine":247,"endColumn":34},{"ruleId":"502","severity":1,"message":"610","line":1,"column":17,"nodeType":"504","messageId":"505","endLine":1,"endColumn":25},{"ruleId":"502","severity":1,"message":"634","line":4,"column":8,"nodeType":"504","messageId":"505","endLine":4,"endColumn":18},{"ruleId":"502","severity":1,"message":"635","line":6,"column":8,"nodeType":"504","messageId":"505","endLine":6,"endColumn":29},{"ruleId":"502","severity":1,"message":"636","line":8,"column":8,"nodeType":"504","messageId":"505","endLine":8,"endColumn":29},{"ruleId":"502","severity":1,"message":"637","line":9,"column":8,"nodeType":"504","messageId":"505","endLine":9,"endColumn":22},{"ruleId":"502","severity":1,"message":"507","line":15,"column":10,"nodeType":"504","messageId":"505","endLine":15,"endColumn":16},{"ruleId":"502","severity":1,"message":"612","line":16,"column":10,"nodeType":"504","messageId":"505","endLine":16,"endColumn":15},{"ruleId":"502","severity":1,"message":"613","line":21,"column":8,"nodeType":"504","messageId":"505","endLine":21,"endColumn":14},{"ruleId":"502","severity":1,"message":"638","line":23,"column":8,"nodeType":"504","messageId":"505","endLine":23,"endColumn":13},{"ruleId":"502","severity":1,"message":"639","line":24,"column":17,"nodeType":"504","messageId":"505","endLine":24,"endColumn":24},{"ruleId":"502","severity":1,"message":"640","line":24,"column":26,"nodeType":"504","messageId":"505","endLine":24,"endColumn":31},{"ruleId":"502","severity":1,"message":"641","line":25,"column":8,"nodeType":"504","messageId":"505","endLine":25,"endColumn":18},{"ruleId":"502","severity":1,"message":"642","line":26,"column":8,"nodeType":"504","messageId":"505","endLine":26,"endColumn":24},{"ruleId":"502","severity":1,"message":"643","line":75,"column":9,"nodeType":"504","messageId":"505","endLine":75,"endColumn":16},{"ruleId":"502","severity":1,"message":"644","line":1,"column":38,"nodeType":"504","messageId":"505","endLine":1,"endColumn":44},{"ruleId":"502","severity":1,"message":"645","line":2,"column":9,"nodeType":"504","messageId":"505","endLine":2,"endColumn":14},{"ruleId":"502","severity":1,"message":"646","line":2,"column":15,"nodeType":"504","messageId":"505","endLine":2,"endColumn":26},{"ruleId":"502","severity":1,"message":"647","line":2,"column":28,"nodeType":"504","messageId":"505","endLine":2,"endColumn":37},{"ruleId":"502","severity":1,"message":"594","line":2,"column":38,"nodeType":"504","messageId":"505","endLine":2,"endColumn":42},{"ruleId":"502","severity":1,"message":"648","line":3,"column":15,"nodeType":"504","messageId":"505","endLine":3,"endColumn":19},{"ruleId":"502","severity":1,"message":"649","line":3,"column":20,"nodeType":"504","messageId":"505","endLine":3,"endColumn":28},{"ruleId":"502","severity":1,"message":"650","line":3,"column":44,"nodeType":"504","messageId":"505","endLine":3,"endColumn":54},{"ruleId":"502","severity":1,"message":"651","line":7,"column":8,"nodeType":"504","messageId":"505","endLine":7,"endColumn":14},{"ruleId":"502","severity":1,"message":"652","line":13,"column":10,"nodeType":"504","messageId":"505","endLine":13,"endColumn":17},{"ruleId":"502","severity":1,"message":"653","line":15,"column":8,"nodeType":"504","messageId":"505","endLine":15,"endColumn":19},{"ruleId":"502","severity":1,"message":"654","line":19,"column":17,"nodeType":"504","messageId":"505","endLine":19,"endColumn":20},{"ruleId":"502","severity":1,"message":"655","line":20,"column":10,"nodeType":"504","messageId":"505","endLine":20,"endColumn":16},{"ruleId":"502","severity":1,"message":"656","line":20,"column":18,"nodeType":"504","messageId":"505","endLine":20,"endColumn":24},{"ruleId":"502","severity":1,"message":"657","line":20,"column":26,"nodeType":"504","messageId":"505","endLine":20,"endColumn":31},{"ruleId":"502","severity":1,"message":"658","line":20,"column":33,"nodeType":"504","messageId":"505","endLine":20,"endColumn":40},{"ruleId":"502","severity":1,"message":"659","line":22,"column":8,"nodeType":"504","messageId":"505","endLine":22,"endColumn":11},{"ruleId":"502","severity":1,"message":"660","line":23,"column":8,"nodeType":"504","messageId":"505","endLine":23,"endColumn":24},{"ruleId":"502","severity":1,"message":"507","line":24,"column":8,"nodeType":"504","messageId":"505","endLine":24,"endColumn":14},{"ruleId":"502","severity":1,"message":"661","line":25,"column":8,"nodeType":"504","messageId":"505","endLine":25,"endColumn":11},{"ruleId":"502","severity":1,"message":"662","line":26,"column":8,"nodeType":"504","messageId":"505","endLine":26,"endColumn":17},{"ruleId":"502","severity":1,"message":"641","line":29,"column":8,"nodeType":"504","messageId":"505","endLine":29,"endColumn":18},{"ruleId":"502","severity":1,"message":"663","line":38,"column":8,"nodeType":"504","messageId":"505","endLine":38,"endColumn":19},{"ruleId":"502","severity":1,"message":"664","line":115,"column":11,"nodeType":"504","messageId":"505","endLine":115,"endColumn":22},{"ruleId":"502","severity":1,"message":"665","line":119,"column":12,"nodeType":"504","messageId":"505","endLine":119,"endColumn":19},{"ruleId":"502","severity":1,"message":"666","line":120,"column":12,"nodeType":"504","messageId":"505","endLine":120,"endColumn":19},{"ruleId":"502","severity":1,"message":"667","line":123,"column":12,"nodeType":"504","messageId":"505","endLine":123,"endColumn":20},{"ruleId":"502","severity":1,"message":"668","line":129,"column":12,"nodeType":"504","messageId":"505","endLine":129,"endColumn":27},{"ruleId":"502","severity":1,"message":"669","line":131,"column":11,"nodeType":"504","messageId":"505","endLine":131,"endColumn":19},{"ruleId":"513","severity":1,"message":"670","line":191,"column":8,"nodeType":"534","endLine":191,"endColumn":10,"suggestions":"671"},{"ruleId":"502","severity":1,"message":"672","line":222,"column":11,"nodeType":"504","messageId":"505","endLine":222,"endColumn":27},{"ruleId":"595","severity":1,"message":"596","line":5,"column":10,"nodeType":"597","messageId":"598","endLine":5,"endColumn":24,"fix":"673"},{"ruleId":"502","severity":1,"message":"615","line":55,"column":7,"nodeType":"504","messageId":"505","endLine":55,"endColumn":16},{"ruleId":"502","severity":1,"message":"674","line":103,"column":9,"nodeType":"504","messageId":"505","endLine":103,"endColumn":16},{"ruleId":"502","severity":1,"message":"675","line":104,"column":9,"nodeType":"504","messageId":"505","endLine":104,"endColumn":29},{"ruleId":"513","severity":1,"message":"676","line":107,"column":10,"nodeType":"534","endLine":107,"endColumn":31,"suggestions":"677"},{"ruleId":"595","severity":1,"message":"596","line":10,"column":10,"nodeType":"597","messageId":"598","endLine":10,"endColumn":24,"fix":"678"},{"ruleId":"502","severity":1,"message":"507","line":11,"column":45,"nodeType":"504","messageId":"505","endLine":11,"endColumn":51},{"ruleId":"502","severity":1,"message":"657","line":11,"column":53,"nodeType":"504","messageId":"505","endLine":11,"endColumn":58},{"ruleId":"502","severity":1,"message":"679","line":62,"column":5,"nodeType":"504","messageId":"505","endLine":62,"endColumn":15},{"ruleId":"502","severity":1,"message":"622","line":68,"column":24,"nodeType":"504","messageId":"505","endLine":68,"endColumn":37},{"ruleId":"513","severity":1,"message":"680","line":141,"column":7,"nodeType":"534","endLine":141,"endColumn":9,"suggestions":"681"},{"ruleId":"502","severity":1,"message":"682","line":1,"column":17,"nodeType":"504","messageId":"505","endLine":1,"endColumn":25},{"ruleId":"595","severity":1,"message":"596","line":5,"column":10,"nodeType":"597","messageId":"598","endLine":5,"endColumn":24,"fix":"683"},{"ruleId":"502","severity":1,"message":"506","line":9,"column":10,"nodeType":"504","messageId":"505","endLine":9,"endColumn":14},{"ruleId":"502","severity":1,"message":"508","line":32,"column":10,"nodeType":"504","messageId":"505","endLine":32,"endColumn":20},{"ruleId":"502","severity":1,"message":"684","line":33,"column":10,"nodeType":"504","messageId":"505","endLine":33,"endColumn":17},{"ruleId":"502","severity":1,"message":"685","line":34,"column":34,"nodeType":"504","messageId":"505","endLine":34,"endColumn":42},{"ruleId":"502","severity":1,"message":"686","line":40,"column":8,"nodeType":"504","messageId":"505","endLine":40,"endColumn":24},{"ruleId":"502","severity":1,"message":"615","line":70,"column":7,"nodeType":"504","messageId":"505","endLine":70,"endColumn":16},{"ruleId":"502","severity":1,"message":"687","line":114,"column":10,"nodeType":"504","messageId":"505","endLine":114,"endColumn":24},{"ruleId":"502","severity":1,"message":"688","line":117,"column":10,"nodeType":"504","messageId":"505","endLine":117,"endColumn":14},{"ruleId":"502","severity":1,"message":"689","line":117,"column":16,"nodeType":"504","messageId":"505","endLine":117,"endColumn":23},{"ruleId":"502","severity":1,"message":"690","line":123,"column":10,"nodeType":"504","messageId":"505","endLine":123,"endColumn":37},{"ruleId":"502","severity":1,"message":"691","line":123,"column":39,"nodeType":"504","messageId":"505","endLine":123,"endColumn":69},{"ruleId":"502","severity":1,"message":"692","line":125,"column":9,"nodeType":"504","messageId":"505","endLine":125,"endColumn":18},{"ruleId":"513","severity":1,"message":"693","line":132,"column":6,"nodeType":"534","endLine":132,"endColumn":8,"suggestions":"694"},{"ruleId":"502","severity":1,"message":"695","line":144,"column":9,"nodeType":"504","messageId":"505","endLine":144,"endColumn":29},{"ruleId":"502","severity":1,"message":"696","line":147,"column":9,"nodeType":"504","messageId":"505","endLine":147,"endColumn":22},{"ruleId":"502","severity":1,"message":"697","line":151,"column":9,"nodeType":"504","messageId":"505","endLine":151,"endColumn":24},{"ruleId":"502","severity":1,"message":"698","line":167,"column":9,"nodeType":"504","messageId":"505","endLine":167,"endColumn":21},{"ruleId":"502","severity":1,"message":"699","line":172,"column":9,"nodeType":"504","messageId":"505","endLine":172,"endColumn":23},{"ruleId":"502","severity":1,"message":"700","line":3,"column":8,"nodeType":"504","messageId":"505","endLine":3,"endColumn":26},{"ruleId":"502","severity":1,"message":"701","line":8,"column":10,"nodeType":"504","messageId":"505","endLine":8,"endColumn":26},{"ruleId":"502","severity":1,"message":"702","line":9,"column":10,"nodeType":"504","messageId":"505","endLine":9,"endColumn":23},{"ruleId":"513","severity":1,"message":"703","line":15,"column":6,"nodeType":"534","endLine":15,"endColumn":24,"suggestions":"704"},{"ruleId":"502","severity":1,"message":"705","line":47,"column":9,"nodeType":"504","messageId":"505","endLine":47,"endColumn":21},{"ruleId":"502","severity":1,"message":"644","line":1,"column":38,"nodeType":"504","messageId":"505","endLine":1,"endColumn":44},{"ruleId":"502","severity":1,"message":"650","line":3,"column":48,"nodeType":"504","messageId":"505","endLine":3,"endColumn":58},{"ruleId":"502","severity":1,"message":"651","line":7,"column":8,"nodeType":"504","messageId":"505","endLine":7,"endColumn":14},{"ruleId":"502","severity":1,"message":"652","line":13,"column":10,"nodeType":"504","messageId":"505","endLine":13,"endColumn":17},{"ruleId":"502","severity":1,"message":"521","line":13,"column":19,"nodeType":"504","messageId":"505","endLine":13,"endColumn":23},{"ruleId":"502","severity":1,"message":"653","line":15,"column":8,"nodeType":"504","messageId":"505","endLine":15,"endColumn":19},{"ruleId":"502","severity":1,"message":"655","line":20,"column":10,"nodeType":"504","messageId":"505","endLine":20,"endColumn":16},{"ruleId":"502","severity":1,"message":"656","line":20,"column":18,"nodeType":"504","messageId":"505","endLine":20,"endColumn":24},{"ruleId":"502","severity":1,"message":"657","line":20,"column":26,"nodeType":"504","messageId":"505","endLine":20,"endColumn":31},{"ruleId":"502","severity":1,"message":"658","line":20,"column":33,"nodeType":"504","messageId":"505","endLine":20,"endColumn":40},{"ruleId":"502","severity":1,"message":"507","line":24,"column":8,"nodeType":"504","messageId":"505","endLine":24,"endColumn":14},{"ruleId":"502","severity":1,"message":"665","line":80,"column":12,"nodeType":"504","messageId":"505","endLine":80,"endColumn":19},{"ruleId":"502","severity":1,"message":"706","line":80,"column":21,"nodeType":"504","messageId":"505","endLine":80,"endColumn":31},{"ruleId":"513","severity":1,"message":"707","line":105,"column":10,"nodeType":"534","endLine":105,"endColumn":12,"suggestions":"708"},{"ruleId":"537","severity":1,"message":"538","line":155,"column":49,"nodeType":"539","messageId":"530","endLine":155,"endColumn":51},{"ruleId":"502","severity":1,"message":"682","line":1,"column":17,"nodeType":"504","messageId":"505","endLine":1,"endColumn":25},{"ruleId":"595","severity":1,"message":"596","line":5,"column":10,"nodeType":"597","messageId":"598","endLine":5,"endColumn":24,"fix":"709"},{"ruleId":"502","severity":1,"message":"521","line":8,"column":10,"nodeType":"504","messageId":"505","endLine":8,"endColumn":14},{"ruleId":"502","severity":1,"message":"506","line":9,"column":10,"nodeType":"504","messageId":"505","endLine":9,"endColumn":14},{"ruleId":"502","severity":1,"message":"508","line":32,"column":10,"nodeType":"504","messageId":"505","endLine":32,"endColumn":20},{"ruleId":"502","severity":1,"message":"684","line":33,"column":10,"nodeType":"504","messageId":"505","endLine":33,"endColumn":17},{"ruleId":"502","severity":1,"message":"619","line":34,"column":10,"nodeType":"504","messageId":"505","endLine":34,"endColumn":18},{"ruleId":"502","severity":1,"message":"710","line":34,"column":20,"nodeType":"504","messageId":"505","endLine":34,"endColumn":24},{"ruleId":"502","severity":1,"message":"685","line":34,"column":34,"nodeType":"504","messageId":"505","endLine":34,"endColumn":42},{"ruleId":"502","severity":1,"message":"686","line":40,"column":8,"nodeType":"504","messageId":"505","endLine":40,"endColumn":24},{"ruleId":"502","severity":1,"message":"615","line":70,"column":7,"nodeType":"504","messageId":"505","endLine":70,"endColumn":16},{"ruleId":"502","severity":1,"message":"692","line":123,"column":9,"nodeType":"504","messageId":"505","endLine":123,"endColumn":18},{"ruleId":"513","severity":1,"message":"693","line":130,"column":6,"nodeType":"534","endLine":130,"endColumn":8,"suggestions":"711"},{"ruleId":"502","severity":1,"message":"695","line":142,"column":9,"nodeType":"504","messageId":"505","endLine":142,"endColumn":29},{"ruleId":"502","severity":1,"message":"696","line":145,"column":9,"nodeType":"504","messageId":"505","endLine":145,"endColumn":22},{"ruleId":"502","severity":1,"message":"697","line":149,"column":9,"nodeType":"504","messageId":"505","endLine":149,"endColumn":24},{"ruleId":"502","severity":1,"message":"712","line":154,"column":9,"nodeType":"504","messageId":"505","endLine":154,"endColumn":18},{"ruleId":"502","severity":1,"message":"698","line":165,"column":9,"nodeType":"504","messageId":"505","endLine":165,"endColumn":21},{"ruleId":"502","severity":1,"message":"699","line":170,"column":9,"nodeType":"504","messageId":"505","endLine":170,"endColumn":23},{"ruleId":"502","severity":1,"message":"713","line":3,"column":5,"nodeType":"504","messageId":"505","endLine":3,"endColumn":8},{"ruleId":"595","severity":1,"message":"596","line":13,"column":10,"nodeType":"597","messageId":"598","endLine":13,"endColumn":24,"fix":"714"},{"ruleId":"548","severity":1,"message":"715","line":118,"column":43,"nodeType":"550","messageId":"551","endLine":118,"endColumn":70,"fix":"716"},{"ruleId":"537","severity":1,"message":"538","line":149,"column":49,"nodeType":"539","messageId":"530","endLine":149,"endColumn":51},{"ruleId":"595","severity":1,"message":"596","line":12,"column":10,"nodeType":"597","messageId":"598","endLine":12,"endColumn":24,"fix":"717"},{"ruleId":"502","severity":1,"message":"674","line":55,"column":9,"nodeType":"504","messageId":"505","endLine":55,"endColumn":16},{"ruleId":"502","severity":1,"message":"718","line":59,"column":23,"nodeType":"504","messageId":"505","endLine":59,"endColumn":35},{"ruleId":"502","severity":1,"message":"719","line":60,"column":12,"nodeType":"504","messageId":"505","endLine":60,"endColumn":18},{"ruleId":"595","severity":1,"message":"596","line":12,"column":10,"nodeType":"597","messageId":"598","endLine":12,"endColumn":24,"fix":"720"},{"ruleId":"502","severity":1,"message":"674","line":55,"column":9,"nodeType":"504","messageId":"505","endLine":55,"endColumn":16},{"ruleId":"502","severity":1,"message":"718","line":59,"column":23,"nodeType":"504","messageId":"505","endLine":59,"endColumn":35},{"ruleId":"502","severity":1,"message":"719","line":60,"column":12,"nodeType":"504","messageId":"505","endLine":60,"endColumn":18},{"ruleId":"595","severity":1,"message":"596","line":12,"column":10,"nodeType":"597","messageId":"598","endLine":12,"endColumn":24,"fix":"721"},{"ruleId":"502","severity":1,"message":"674","line":55,"column":9,"nodeType":"504","messageId":"505","endLine":55,"endColumn":16},{"ruleId":"502","severity":1,"message":"718","line":59,"column":23,"nodeType":"504","messageId":"505","endLine":59,"endColumn":35},{"ruleId":"502","severity":1,"message":"719","line":60,"column":12,"nodeType":"504","messageId":"505","endLine":60,"endColumn":18},{"ruleId":"595","severity":1,"message":"596","line":12,"column":10,"nodeType":"597","messageId":"598","endLine":12,"endColumn":24,"fix":"722"},{"ruleId":"502","severity":1,"message":"674","line":55,"column":9,"nodeType":"504","messageId":"505","endLine":55,"endColumn":16},{"ruleId":"502","severity":1,"message":"718","line":59,"column":23,"nodeType":"504","messageId":"505","endLine":59,"endColumn":35},{"ruleId":"502","severity":1,"message":"719","line":60,"column":12,"nodeType":"504","messageId":"505","endLine":60,"endColumn":18},{"ruleId":"595","severity":1,"message":"596","line":12,"column":10,"nodeType":"597","messageId":"598","endLine":12,"endColumn":24,"fix":"723"},{"ruleId":"502","severity":1,"message":"674","line":55,"column":9,"nodeType":"504","messageId":"505","endLine":55,"endColumn":16},{"ruleId":"502","severity":1,"message":"718","line":59,"column":23,"nodeType":"504","messageId":"505","endLine":59,"endColumn":35},{"ruleId":"502","severity":1,"message":"719","line":60,"column":12,"nodeType":"504","messageId":"505","endLine":60,"endColumn":18},{"ruleId":"595","severity":1,"message":"596","line":12,"column":10,"nodeType":"597","messageId":"598","endLine":12,"endColumn":24,"fix":"724"},{"ruleId":"502","severity":1,"message":"674","line":55,"column":9,"nodeType":"504","messageId":"505","endLine":55,"endColumn":16},{"ruleId":"502","severity":1,"message":"718","line":59,"column":23,"nodeType":"504","messageId":"505","endLine":59,"endColumn":35},{"ruleId":"502","severity":1,"message":"719","line":60,"column":12,"nodeType":"504","messageId":"505","endLine":60,"endColumn":18},{"ruleId":"595","severity":1,"message":"596","line":12,"column":10,"nodeType":"597","messageId":"598","endLine":12,"endColumn":24,"fix":"725"},{"ruleId":"502","severity":1,"message":"674","line":55,"column":9,"nodeType":"504","messageId":"505","endLine":55,"endColumn":16},{"ruleId":"502","severity":1,"message":"718","line":59,"column":23,"nodeType":"504","messageId":"505","endLine":59,"endColumn":35},{"ruleId":"502","severity":1,"message":"719","line":60,"column":12,"nodeType":"504","messageId":"505","endLine":60,"endColumn":18},{"ruleId":"595","severity":1,"message":"596","line":12,"column":10,"nodeType":"597","messageId":"598","endLine":12,"endColumn":24,"fix":"726"},{"ruleId":"502","severity":1,"message":"674","line":55,"column":9,"nodeType":"504","messageId":"505","endLine":55,"endColumn":16},{"ruleId":"502","severity":1,"message":"718","line":59,"column":23,"nodeType":"504","messageId":"505","endLine":59,"endColumn":35},{"ruleId":"502","severity":1,"message":"719","line":60,"column":12,"nodeType":"504","messageId":"505","endLine":60,"endColumn":18},{"ruleId":"595","severity":1,"message":"596","line":12,"column":10,"nodeType":"597","messageId":"598","endLine":12,"endColumn":24,"fix":"727"},{"ruleId":"502","severity":1,"message":"674","line":55,"column":9,"nodeType":"504","messageId":"505","endLine":55,"endColumn":16},{"ruleId":"502","severity":1,"message":"718","line":59,"column":23,"nodeType":"504","messageId":"505","endLine":59,"endColumn":35},{"ruleId":"502","severity":1,"message":"719","line":60,"column":12,"nodeType":"504","messageId":"505","endLine":60,"endColumn":18},{"ruleId":"595","severity":1,"message":"596","line":12,"column":10,"nodeType":"597","messageId":"598","endLine":12,"endColumn":24,"fix":"728"},{"ruleId":"502","severity":1,"message":"674","line":55,"column":9,"nodeType":"504","messageId":"505","endLine":55,"endColumn":16},{"ruleId":"502","severity":1,"message":"718","line":59,"column":23,"nodeType":"504","messageId":"505","endLine":59,"endColumn":35},{"ruleId":"502","severity":1,"message":"719","line":60,"column":12,"nodeType":"504","messageId":"505","endLine":60,"endColumn":18},{"ruleId":"537","severity":1,"message":"729","line":2,"column":27,"nodeType":"539","messageId":"530","endLine":2,"endColumn":29},{"ruleId":"502","severity":1,"message":"618","line":5,"column":11,"nodeType":"504","messageId":"505","endLine":5,"endColumn":20},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Button' is defined but never used.","'FaUserPlus' is defined but never used.","'PatientHistory' is defined but never used.","'Biometrics' is defined but never used.","'AddmissionHome' is defined but never used.","'PatientVaccinationHistory' is defined but never used.","react-hooks/exhaustive-deps","The 'patientObj' conditional could make the dependencies of useEffect Hook (at line 73) change on every render. To fix this, wrap the initialization of 'patientObj' in its own useMemo() Hook.","VariableDeclarator","'prepId' is assigned a value but never used.","'InputGroup' is defined but never used.","'AddIcon' is defined but never used.","'PhoneInput' is defined but never used.","'DateTimePicker' is defined but never used.","'Icon' is defined but never used.","'List' is defined but never used.","'setDisabledAgeBaseOnAge' is assigned a value but never used.","'covidEffect' is assigned a value but never used.","'setPatientDTO' is assigned a value but never used.","'vaccine' is assigned a value but never used.","no-dupe-keys","Duplicate key 'patientId'.","ObjectExpression","unexpected","'hospitalNumStatus2' is assigned a value but never used.","'patientId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'basicInfo.dob', 'loadEducation', 'loadGenders', 'loadMaritalStatus', 'loadOccupation', and 'loadRelationships'. Either include them or remove the dependency array.","ArrayExpression",["730"],"'handleAddRelative' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'actualcontacts' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'observationData' is assigned a value but never used.","'response' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"vaccinationFacility\"] found.","Property","unnecessarilyComputedProperty",{"range":"731","text":"732"},"'handleCheckBoxworkInHealthSector' is assigned a value but never used.","Unnecessarily computed property [\"workInHealthSector\"] found.",{"range":"733","text":"734"},{"range":"735","text":"734"},"'limit' is assigned a value but never used.","'handleCheckBoxknownMedicalCondition' is assigned a value but never used.","Unnecessarily computed property [\"knownMedicalCondition\"] found.",{"range":"736","text":"737"},{"range":"738","text":"737"},"'format' is defined but never used.","'yupResolver' is defined but never used.","'yup' is defined but never used.","'useForm' is defined but never used.","'getValue' is defined but never used.","'setToday' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'editRelative' is assigned a value but never used.","'setEditRelative' is assigned a value but never used.","'topLevelUnitCountryOptions' is assigned a value but never used.","'userDetail' is assigned a value but never used.","'setHideTargetGroup' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'basicInfo', 'loadEducation', 'loadGenders', 'loadMaritalStatus', 'loadOccupation', 'loadRelationships', and 'loadTopLevelCountry'. Either include them or remove the dependency array.",["739"],"'loadOrganisationUnitsByParentId' is assigned a value but never used.","'today' is assigned a value but never used.","'patientDTO' is assigned a value but never used.","'femaleStatus' is assigned a value but never used.","'sourceReferral' is assigned a value but never used.","'enrollSetting' is assigned a value but never used.","'tbStatus' is assigned a value but never used.","'kP' is assigned a value but never used.","'newSex' is assigned a value but never used.","'setNewSex' is assigned a value but never used.","'pregnancyStatus' is assigned a value but never used.","'transferIn' is assigned a value but never used.","'setTransferIn' is assigned a value but never used.","'ovcEnrolled' is assigned a value but never used.","'hideTargetGroup' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'basicInfo', 'getSex', 'loadEducation', 'loadGenders', 'loadMaritalStatus', 'loadOccupation', 'loadRelationships', 'loadTopLevelCountry', and 'objValues'. Either include them or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.",["740"],"'handleCheckBox' is assigned a value but never used.","'Form' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"741","text":"742"},"'MenuProps' is assigned a value but never used.","'getStyles' is defined but never used.","'theme' is assigned a value but never used.","'patientObj' is assigned a value but never used.","'htsCodeVal' is assigned a value but never used.","'setHtsCodeVal' is assigned a value but never used.","'prepCodeVal' is assigned a value but never used.","'setPrepCodeVal' is assigned a value but never used.","'handleInputChangeReferred' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.",{"range":"743","text":"742"},"'Label' is defined but never used.","'moment' is defined but never used.","'calculate_age' is defined but never used.","'useStyles' is assigned a value but never used.",{"range":"744","text":"742"},"'TiArrowForward' is defined but never used.","'dateParts' is assigned a value but never used.","'Dropdown' is defined but never used.","'classes' is assigned a value but never used.","'gender' is assigned a value but never used.","'setpatientObj' is assigned a value but never used.","'genderType' is assigned a value but never used.","'setGenderType' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Observation'. Either include it or remove the dependency array.",["745"],"'mental' is assigned a value but never used.","'evaluation' is assigned a value but never used.","'useLocation' is defined but never used.",{"range":"746","text":"742"},"'setKpprevFormStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getHTScode' and 'getPrepCode'. Either include them or remove the dependency array.",["747"],"'classNames' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'ExpansionPanelActions' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'axios' is defined but never used.","'baseUrl' is defined but never used.","'token' is defined but never used.","'Typography' is defined but never used.","'CaptureBiometric' is defined but never used.","'get_age' is assigned a value but never used.","'useRef' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardHeader' is defined but never used.","'Select' is defined but never used.","'Button2' is defined but never used.","'ThumbUpIcon' is defined but never used.","'red' is defined but never used.","'Dimmer' is defined but never used.","'Loader' is defined but never used.","'Image' is defined but never used.","'Segment' is defined but never used.","'Box' is defined but never used.","'CircularProgress' is defined but never used.","'Fab' is defined but never used.","'CheckIcon' is defined but never used.","'UpgradeIcon' is defined but never used.","'permissions' is assigned a value but never used.","'devices' is assigned a value but never used.","'loading' is assigned a value but never used.","'tryAgain' is assigned a value but never used.","'selectedFingers' is assigned a value but never used.","'buttonSx' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clear_storelist' and 'getPersonBiometrics'. Either include them or remove the dependency array.",["748"],"'biometricFingers' is assigned a value but never used.",{"range":"749","text":"742"},"'history' is assigned a value but never used.","'patientHistoryObject' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PatientHistory'. Either include it or remove the dependency array.",["750"],{"range":"751","text":"742"},"'resultData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getChronicMedicationHistory', 'getComobitieHistory', 'getDemographicHistory', 'getInclusionHistory', 'getMedicationHistory', 'getReinfectionHistory', 'getSignsSymptomsHistory', 'getSupportiveCareHistory', 'getVaccinationHistory', and 'getVitalsHistory'. Either include them or remove the dependency array.",["752"],"'Fragment' is defined but never used.",{"range":"753","text":"742"},"'FaShare' is defined but never used.","'IconMenu' is defined but never used.","'PerfectScrollbar' is defined but never used.","'vacinationList' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'activeAccordionHeaderShadow' is assigned a value but never used.","'setActiveAccordionHeaderShadow' is assigned a value but never used.","'LoadModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patients'. Either include it or remove the dependency array.",["754"],"'loadVaccinationModal' is assigned a value but never used.","'LoadEditModal' is assigned a value but never used.","'LoadDeleteModal' is assigned a value but never used.","'handleAction' is assigned a value but never used.","'LoadVie43wPage' is assigned a value but never used.","'VaccinationHistory' is defined but never used.","'recentActivities' is assigned a value but never used.","'loadingRecent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'RecentActivities'. Either include it or remove the dependency array.",["755"],"'LoadViewPage' is assigned a value but never used.","'setDevices' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'objValues.device'. Either include it or remove the dependency array.",["756"],{"range":"757","text":"742"},"'Menu' is defined but never used.",["758"],"'dummyData' is assigned a value but never used.","'Col' is defined but never used.",{"range":"759","text":"742"},"Unnecessarily computed property ['vaccinationFacility'] found.",{"range":"760","text":"761"},{"range":"762","text":"742"},"'setObjValues' is assigned a value but never used.","'saving' is assigned a value but never used.",{"range":"763","text":"742"},{"range":"764","text":"742"},{"range":"765","text":"742"},{"range":"766","text":"742"},{"range":"767","text":"742"},{"range":"768","text":"742"},{"range":"769","text":"742"},{"range":"770","text":"742"},{"range":"771","text":"742"},"Expected '!==' and instead saw '!='.",{"desc":"772","fix":"773"},[26968,26991],"\"vaccinationFacility\"",[27787,27809],"\"workInHealthSector\"",[27912,27934],[28471,28496],"\"knownMedicalCondition\"",[28607,28632],{"desc":"774","fix":"775"},{"desc":"776","fix":"777"},[643,657],"token",[137,151],[137,151],{"desc":"778","fix":"779"},[510,524],{"desc":"780","fix":"781"},{"desc":"782","fix":"783"},[184,198],{"desc":"784","fix":"785"},[374,388],{"desc":"786","fix":"787"},[195,209],{"desc":"788","fix":"789"},{"desc":"790","fix":"791"},{"desc":"792","fix":"793"},[195,209],{"desc":"788","fix":"794"},[591,605],[3538,3561],"'vaccinationFacility'",[544,558],[544,558],[542,556],[544,558],[544,558],[544,558],[544,558],[544,558],[544,558],[544,558],"Update the dependencies array to be: [basicInfo.dateOfRegistration, basicInfo.dob, loadEducation, loadGenders, loadMaritalStatus, loadOccupation, loadRelationships]",{"range":"795","text":"796"},"Update the dependencies array to be: [patientObj, patientId, basicInfo.dateOfRegistration, loadGenders, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, basicInfo]",{"range":"797","text":"798"},"Update the dependencies array to be: [patientObj, patientId, basicInfo.dateOfRegistration, loadGenders, getSex, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, basicInfo, objValues]",{"range":"799","text":"800"},"Update the dependencies array to be: [Observation, props.patientObj]",{"range":"801","text":"802"},"Update the dependencies array to be: [getHTScode, getPrepCode]",{"range":"803","text":"804"},"Update the dependencies array to be: [clear_storelist, getPersonBiometrics]",{"range":"805","text":"806"},"Update the dependencies array to be: [PatientHistory, props.patientObj.id]",{"range":"807","text":"808"},"Update the dependencies array to be: [getChronicMedicationHistory, getComobitieHistory, getDemographicHistory, getInclusionHistory, getMedicationHistory, getReinfectionHistory, getSignsSymptomsHistory, getSupportiveCareHistory, getVaccinationHistory, getVitalsHistory]",{"range":"809","text":"810"},"Update the dependencies array to be: [patients]",{"range":"811","text":"812"},"Update the dependencies array to be: [RecentActivities, props.patientObj]",{"range":"813","text":"814"},"Update the dependencies array to be: [objValues.device]",{"range":"815","text":"816"},{"range":"817","text":"812"},[6532,6562],"[basicInfo.dateOfRegistration, basicInfo.dob, loadEducation, loadGenders, loadMaritalStatus, loadOccupation, loadRelationships]",[10577,10630],"[patientObj, patientId, basicInfo.dateOfRegistration, loadGenders, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, basicInfo]",[11880,11933],"[patientObj, patientId, basicInfo.dateOfRegistration, loadGenders, getSex, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, basicInfo, objValues]",[833,851],"[Observation, props.patientObj]",[4048,4050],"[getHTScode, getPrepCode]",[6965,6967],"[clear_storelist, getPersonBiometrics]",[3918,3939],"[PatientHistory, props.patientObj.id]",[5693,5695],"[getChronicMedicationHistory, getComobitieHistory, getDemographicHistory, getInclusionHistory, getMedicationHistory, getReinfectionHistory, getSignsSymptomsHistory, getSupportiveCareHistory, getVaccinationHistory, getVitalsHistory]",[4899,4901],"[patients]",[557,575],"[RecentActivities, props.patientObj]",[3449,3451],"[objValues.device]",[4748,4750]]