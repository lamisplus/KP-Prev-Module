{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/utils/index.js","main/webapp/jsx/components/KpPrev/KpPrevEnrolled.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/KpPrev/KpPrevHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/KpPrev/index.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","main/webapp/jsx/components/KpPrev/ViewUpdate.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","calculate_age","dob","today","Date","birthDate","split","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","get","concat","baseUrl","pageSize","page","search","headers","then","response","result","records","map","row","name","firstName","lastName","hospital_number","gender","age","dateOfBirth","undefined","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","size","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","todayMonth","todayYear","todayDate","birthDateMonth","birthDateYear","birthdateDate","assumedAge","monthGap","dateGap","monthOld","KpPrevEnrolled","Authorization","dateServiceOffered","htsCode","prepCode","prevCode","divStyle","borderRadius","Home","_useState","useState","_useState2","_slicedToArray","key","setKey","Fragment","className","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","classes","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","startIcon","TiArrowBack","textTransform","phoneNumber","contactPoint","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","useStyles","navItemText","SubMenu","patientObjs","_useState3","_useState4","Observation","observation","filter","x","catch","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","getAge","Vaccination","errors","setErrors","temp","covidEffect","setCovidEffect","_useState5","_useState6","vaccine","setVaccine","_useState7","adverseEffect","batchNumber","doseNumber","location","patientId","vaccinationFacility","vaccineDate","_useState8","objValues","setObjValues","_useState9","_useState10","saving","setSaving","VACCINE","COVID_ADVERSE_EFFECT","handleInputChange","e","_defineProperty","target","dateParts","dateObject","moment","format","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","CardBody","_Fragment","FormGroup","Label","Input","onChange","InputGroup","max","MatButton","SaveIcon","preventDefault","Object","values","every","post","toast","loadPatients","disabled","CancelIcon","KpPrevHistory","vacinationList","setVaccinationtList","modal","setModal","_React$useState","React","_React$useState2","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","patients","_patients","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","uuid","stop","_row$htsServices","_row$prepServices","_row$commodityService","_row$hivEducationalSe","_row$biomedicalServic","_row$structuralServic","dateOfServicesProvided","preventioncode","htsServices","offered_hts","prepServices","offered_prep","commodityServices","condoms_dispensed","hivEducationalServices","iecMaterial","biomedicalServices","sti_screening","structuralServices","legalAidServices","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","setRecentActivities","setLoadingRecent","RecentActivities","fontFamily","border","marginLeft","lineHeight","Biometrics","InclusionCriteria","useHistory","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","for","datatype","required","responses","_ref3","_ref4","entries","_ref","_ref2","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","history","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","_useState11","_useState12","vitalSignModal","setVitalSignModal","_useState13","_useState14","reInfectionModal","setReinfectionModal","_useState15","_useState16","signsSymptomsModal","setSignsSymptomsModal","_useState17","_useState18","medicationModal","setMedicationModal","_useState19","_useState20","chronicMedicationModal","setChronicMedicationModal","_useState21","_useState22","supportiveCareModal","setSupportiveCareModal","_useState23","_useState24","vaccinationHistory","setVaccinationHistory","_useState25","_useState26","inclusionHistory","setInclusionHistory","_useState27","_useState28","demograhicHistory","setDemographicHistory","_useState29","_useState30","vitalHistory","setVitalHistory","_useState31","_useState32","comobitieHistory","setComobitieHistory","_useState33","_useState34","reinfectionHistory","setReinfectionHistory","_useState35","_useState36","signsSymptomsHistory","setSignsSymptomsHistory","_useState37","_useState38","chronicMedicationHistory","setChronicMedicationHistory","_useState39","_useState40","medicationHistory","setMedicationHistory","_useState41","_useState42","supportiveCarenHistory","setSupportiveCareHistory","CardContent","Grid","padded","Column","Segment","raised","as","ribbon","Icon","cursor","List","divided","Content","floated","Demographic","VitalSign","Comorbitie","SignsSymptoms","flexGrow","KpPrev","useTheme","_htsCodeVal$htsClient3","_prepCodeVal$prepDtoL2","htsCodeVal","setHtsCodeVal","prepCodeVal","setPrepCodeVal","kpprevFormStatus","clientCode","hivStatus","hivPositive","htsClientDtoList","uniqueId","prepStatus","prepDtoList","service_provider","date","setDate","offeredHts","acceptedHts","hivTestResult","referredForArt","setHtsServices","offeredPrep","acceptedPrep","referredForPrep","setPrepServices","condomDispensed","lubricantsDispensed","oralQuickDispensed","newNeedleDispensed","oldNeedleRetrived","nalxoneProvided","howmanycondomDispensed","howmanylubricantsDispensed","howmanyoralQuickDispensed","howmanynewNeedleDispensed","howmanyoldNeedleRetrived","howmanynalxoneProvided","commodityService","setCommodityService","interPersonalCommunication","peerGroupCommunication","hivEducationProvided","setHivEducationProvided","stiScreening","stiSyndromicManagement","stiTreatment","screenedForTb","providedWithTpt","screenedForViralHepatits","viralHepatitsScreenResult","vaccinationForViralHepatits","offeredFamilyPlanningServices","referredForFamilyPlanningServices","providedWithDrugRehab","offeredMhpss","onMedicalAssistedTherapy","recivedNalxoneForOverdoseTreatment","stiScreeningResult","stifacilityReffered","tbfacilityReffered","typeofMhpss","drugRehabfacilityReffered","refferedfacilitydrugrehab","bioMedicalServices","setbioMedicalServices","providedOrRefferedForEmpowerment","legalAidServiceType","typeempowermentprovided","typelegalempowerment","legalprogramreferred","setstructuralServices","facilityRefferedToStiScreening","facilityRefferedToScreenedTo","facilityRefferedToScreenedForViralHepatits","facilityRefferedToViralHepatitsScreenResult","facilityRefferedToVaccinationForViralHepatits","facilityRefferedToOfferedFamilyPlanningServices","facilityRefferedToReferredForFamilyPlanningServices","facilityRefeRredToProvidedWithDrugRehab","facilityRefferedToOfferedMhpss","facilityRefferedToOnMedicalAssistedTherapy","facilityRefferedToRecievedNalxoneForOverdoseTreatment","facilityRefferedToo","handleInputChangeHtsService","handleInputChangePrepServices","handleInputChangeCommodityServices","handleInputChangeHivEducationProvided","handleInputChangebioMedicalServices","tbtreatmentrefferal","handleInputChangestructuralServices","length","LabelSui","Spinner","_htsCodeVal$htsClient","_htsCodeVal$htsClient2","_prepCodeVal$prepDtoL","biomedicalServiceValue","medical_assisted_therapy_for_six_months","offered_family_planning_services","offered_mhpss","provided_with_drug_rehab","provided_with_tpt","received_naloxone_for_overdose_treatment","referred_for_family_planning_services","screened_for_tb","screened_for_viral_hepatitis","sti_syndromic_management","sti_treatment","vaccination_for_viral_hepatitis","viral_hepatitis_screen_result","sti_screening_result","sti_facility_referred","tb_facility_reffered","type_of_mhpss","drug_rehab_facility_reffered","referred_facility_drug_rehab","commodityServicesValue","hivst_kits_dispensed","lubricants_dispensed","naloxane_provided","new_needles_dispensed","old_needles_dispensed","how_many_condom_dispensed","how_many_lubricants_dispensed","how_many_oral_quick_dispensed","how_many_new_needle_dispensed","how_many_old_needle_retrived","how_many_nalxone_provided","htsServicesValue","accepted_hts","hiv_test_result","referred_for_art","prepServicesValue","accepted_prep","referred_for_prep","structuralServicesValue","providedEmpowerment","type_empowerment_provided","randomString","characters","i","charAt","Math","floor","random","generateRandomString","serviceProvider","target_group","targetGroup","entryPoint","console","log","push","actionType","art","setArt","activeTab","prepId","PatientCardDetail","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","_useState43","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","middleName","relatives","setRelatives","contacts","setContacts","disabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","person","vaccinationEnrollment","patientDTO","userDetail","user","useLocation","showContactCard","setShowContactCard","knownMedicalCondition","medicalCondition","occupation","vaccineId","visitDate","_useState44","_useState45","hospitalNumStatus","setHospitalNumStatus","_useState46","_useState47","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","GetCountry","setStateByCountryId","useCallback","sent","t0","_callee2","_context2","_callee3","_context3","_callee4","_context4","_callee5","_context5","sort","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","_ref6","_callee6","hosiptalNumber","_context6","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","_ref7","_callee7","newConatctsInfo","patientForm","_context7","contactInfo","fullName","surname","landmark","organisationUnitId","postalCode","assignerId","htsService","position","POSITION","BOTTOM_CENTER","subErrors","_x","_useState48","_useState49","_useState50","_useState51","_useState52","refferedForPrep","_useState53","_useState54","_useState55","_useState56","_useState57","_useState58","_useState59","_useState60","_useState61","_useState62","_useState63","setFacilityRefferedToo","handleInputChangeReferred","replace","slice","handleInputChangePhoneNumber","inputName","NumberValue","checkNumberLimit","onClickContactCard","onClickRelativeCard","ToastContainer","autoClose","hideProgressBar","margingRight","min","index","defaultChecked","ageNumber","currentDate","setMonth","dobNew","toISOString","abs","maritalStatusOption","occupationOption","educationOption","FaPlus","FaAngleDown","getCountryId","item","relative","splice","handleEditRelative","FontAwesomeIcon","_toConsumableArray","handleDeleteRelative","checkPhoneNumber","validateRelatives","stiScreeningResponse","facilityReferredTo","facilityRefferedLegalAidServiceType","substr","setDisabledAgeBaseOnAge","settopLevelUnitCountryOptions","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","personId","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","setSourceReferral","setHivStatus","setEnrollSetting","setTbStatus","setKP","setPregnancyStatus","_useState64","setOvcEnrolled","_useState65","_useState66","getSex","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","identifiers","altphone","country","maritalStatus","employmentStatus","education","getStateId","patientAge","sex","alert","getSexId","validate","dateOfRegistration1","checkPhoneNumberBasic","_ref8","_callee8","_context8","TOP_RIGHT","_x2","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","AddIcon","code","maxWidth","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","enrollment","getCharacters","_ref9","_callee9","_context9","hivEnrollment","put","handleCheckBox","checked","htmlFor","ViewUpdate","_kpprevValues$hivEduc","_kpprevValues$hivEduc2","_kpprevValues$hivEduc3","_kpprevValues$biomedi","_kpprevValues$biomedi2","_kpprevValues$biomedi3","_kpprevValues$biomedi4","_kpprevValues$biomedi5","_kpprevValues$biomedi6","_kpprevValues$biomedi7","_kpprevValues$biomedi8","_kpprevValues$biomedi9","_kpprevValues$biomedi10","_kpprevValues$biomedi11","_kpprevValues$biomedi12","_kpprevValues$biomedi13","_kpprevValues$biomedi14","_kpprevValues$biomedi15","_kpprevValues$biomedi16","_kpprevValues$biomedi17","_kpprevValues$biomedi18","_kpprevValues$biomedi19","kpprevValues","readonly","App","Router","Switch","Route","path","PatientDetail","RegisterPatientPage","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","window","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.020a2670.chunk.js","sourcesContent":["//export const token = new URLSearchParams(window.location.search).get(\"jwt\");\r\n//export const url = \"/api/v1/\";\r\n\r\nexport const url = \"http://localhost:8383/api/v1/\";\r\nexport const token =\r\n\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzEwMjA5NDYxfQ.3QXY2pIGPYumo9yYpQr8xvuwZuS04rMQ6RIA2qk8xZTeIYqkr8QHcqMG9CX1yTkL4kXz83cT9uqfKt_dj3DbFw\";\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    // const calculate_age = (dob) => {\r\n    //     const today = new Date();\r\n    //     //const dateParts = dob.split(\"-\");\r\n    //     const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    //     let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    //     const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    //     // if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n    //     //     age_now--;\r\n    //     // }\r\n\r\n    //     // if (age_now === 0) {\r\n    //     //     return m + \" month(s)\";\r\n    //     // }\r\n    //     return age_now + \" year(s)\";\r\n    // };\r\n\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Status\", field: \"v_status\", filtering: false },\r\n            //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}patient?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: getHospitalNumber(row.identifier),\r\n                                   \r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                   age: (row.dateOfBirth === 0 ||\r\n                                    row.dateOfBirth === undefined ||\r\n                                    row.dateOfBirth === null ||\r\n                                    row.dateOfBirth === \"\" )\r\n                                    ? 0\r\n                                    : calculate_age(row.dateOfBirth),\r\n                                    \r\n                                    //count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}> Patient Dashboard </span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","export const calculate_age = (dob) => {\r\n  if (dob !== null && dob != \"\") {\r\n    //Check if the DOB is not null or empty\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob);\r\n\r\n    // get the day, month and year of today\r\n    let todayMonth = today.getMonth();\r\n    let todayYear = today.getFullYear();\r\n    let todayDate = today.getDate();\r\n\r\n    // get the day, month and year from date of birth\r\n    let birthDateMonth = birthDate.getMonth();\r\n    let birthDateYear = birthDate.getFullYear();\r\n    let birthdateDate = birthDate.getDate();\r\n\r\n    // substract birthdate year from today year  ie todayYear - birthdateYear which  will give  \"AssumedAge\" is the age  we assume the patient will clock this year\r\n\r\n    let assumedAge = todayYear - birthDateYear;\r\n    if (assumedAge > 0) {\r\n      //Checking the month to confirm if the age has been cloocked\r\n\r\n      let monthGap = todayMonth - birthDateMonth;\r\n\r\n      // If 'monthGap'> 0, the age has been clocked, 'monthGap'< 0, the age has not been clocked, 'monthGap'= 0, we are in the month then check date to confirm clocked age\r\n\r\n      if (monthGap > 0) {\r\n        return assumedAge + \" year(s)\";\r\n      } else if (monthGap < 0) {\r\n        let confirmedAge = assumedAge - 1;\r\n        return confirmedAge + \" year(s)\";\r\n      } else if (monthGap === 0) {\r\n        let dateGap = todayDate - birthdateDate;\r\n\r\n        if (dateGap > 0) {\r\n          return assumedAge + \" year(s)\";\r\n        } else if (dateGap < 0) {\r\n          let confirmedAge = assumedAge - 1;\r\n          return confirmedAge + \" year(s)\";\r\n        }\r\n      }\r\n    } else {\r\n      let monthGap = todayMonth - birthDateMonth;\r\n      let dateGap = todayDate - birthdateDate;\r\n\r\n      let monthOld = monthGap > 0 ? monthGap : 0;\r\n      let DayOld = dateGap > 0 ? dateGap : 0;\r\n\r\n      let result = monthOld ? monthOld + \"month(s)\" : DayOld + \"day(s)\";\r\n      return result;\r\n    }\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { calculate_age } from \"../../../utils\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst KpPrevEnrolled = (props) => {\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Date Service Offered\",\r\n            field: \"dateServiceOffered\",\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n          { title: \"Prevention Code\", field: \"prevCode\", filtering: false },\r\n          // { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n          // { title: \"Kp Prev Status\", field: \"count\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        //isLoading={loading}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}kpprev?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data:\r\n                    result.data.records &&\r\n                    result.data.records !== null &&\r\n                    result.data.records.map((row) => ({\r\n                      dateServiceOffered: row.dateServiceOffered,\r\n                      hospital_number:\r\n                        row.htsCode !== null ? row.htsCode : row.prepCode,\r\n                      prevCode: row.prevCode,\r\n                      age: \"\",\r\n\r\n                      actions: (\r\n                        <div>\r\n                          <Link\r\n                            to={{\r\n                              pathname: \"/view-kp-prev\",\r\n                              state: { patientObj: row },\r\n                            }}\r\n                          >\r\n                            <ButtonGroup\r\n                              variant=\"contained\"\r\n                              aria-label=\"split button\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(153, 46, 98)\",\r\n                                height: \"30px\",\r\n                                width: \"215px\",\r\n                              }}\r\n                              size=\"large\"\r\n                            >\r\n                              <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                aria-label=\"select merge strategy\"\r\n                                aria-haspopup=\"menu\"\r\n                                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                              >\r\n                                <MdDashboard />\r\n                              </Button>\r\n                              <Button\r\n                                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                              >\r\n                                <span\r\n                                  style={{\r\n                                    fontSize: \"12px\",\r\n                                    color: \"#fff\",\r\n                                    fontWeight: \"bolder\",\r\n                                  }}\r\n                                >\r\n                                  View KP Prev\r\n                                </span>\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                          </Link>\r\n                        </div>\r\n                      ),\r\n                    })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KpPrevEnrolled;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport PatientList from \"./Patient/PatientList\";\r\n//import PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport KpPrevEnrolled from \"./KpPrev/KpPrevEnrolled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState(\"home\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>KP-PREV</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      {/* <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link> */}\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n\r\n                  <Tab eventKey=\"kpprev\" title=\"KP_PrEV Patients\">\r\n                    <KpPrevEnrolled />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { calculate_age } from \"../../../utils\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CaptureBiometric from \"./CaptureBiometric\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj;\r\n\r\n  //console.log(\"in\", patientObj);\r\n\r\n  useEffect(() => {}, [props.patientObj]);\r\n\r\n  const get_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  // const calculate_age = dob => {\r\n  //   var today = new Date();\r\n  //   var dateParts = dob.split(\"-\");\r\n  //   var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n  //   var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n  //   var age_now = today.getFullYear() - birthDate.getFullYear();\r\n  //   var m = today.getMonth() - birthDate.getMonth();\r\n  //       if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n  //               age_now--;\r\n  //           }\r\n  //       if (age_now === 0) {\r\n  //               return m + \" month(s)\";\r\n  //           }\r\n  //           return age_now + \" year(s)\";\r\n  // };\r\n  const getPhoneNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers.contactPoint.find(\r\n      (obj) => obj.type === \"phone\"\r\n    );\r\n    return phoneNumber ? phoneNumber.value : \"\";\r\n  };\r\n  const getAddress = (identifier) => {\r\n    const identifiers = identifier;\r\n    const address = identifiers.address.find((obj) => obj.city);\r\n    const houseAddress =\r\n      address && address.line[0] !== null ? address.line[0] : \"\";\r\n    const landMark =\r\n      address && address.city && address.city !== null ? address.city : \"\";\r\n    return address ? houseAddress + \" \" + landMark : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    {patientObj.firstName + \" \" + patientObj.lastName}\r\n                  </b>\r\n                  <Link to={\"/\"}>\r\n                    <ButtonMui\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-end ms-2 mr-2 mt-2\"\r\n                      //startIcon={<FaUserPlus size=\"10\"/>}\r\n                      startIcon={<TiArrowBack />}\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                        color: \"#fff\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                    </ButtonMui>\r\n                  </Link>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Patient ID :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>{patientObj.id}</b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>{patientObj.dateOfBirth}</b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {calculate_age(patientObj.dateOfBirth)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Gender :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj.gender !== null\r\n                        ? patientObj.gender.display\r\n                        : \"\"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getPhoneNumber(patientObj.contactPoint)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getAddress(patientObj.address)}{\" \"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    // const loadVaccination = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    // }\r\n    // const loadIcu = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'icu'})\r\n    // }\r\n    // const loadAddmission = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    // }\r\n    // const onClickDischarge = (row) =>{        \r\n    //     props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    // }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadKpPrev = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:\"kp-prev\"})\r\n    }\r\n    // const loadPatientHistory = ()=>{\r\n    //     //setActiveItem('history')\r\n    //     props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    // }\r\n\r\n\r\n    return ( \r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>      \r\n                <Menu.Item onClick={() => loadKpPrev()} > Kp-Prev</Menu.Item>               \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from \"semantic-ui-react\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Vaccination from \"./../Vaccination/AddViccination\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n  const [vacinationList, setVaccinationtList] = useState([]);\r\n  const patientObj = props && props.patientObj ? props.patientObj : [];\r\n  const [modal, setModal] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [openDeleteModal, setOpenDeleteModal] = React.useState(false);\r\n  const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n  const [record, setRecord] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients Vaccinations\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setVaccinationtList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const loadVaccinationModal = (row) => {\r\n    setModal(!modal);\r\n  };\r\n  const LoadEditModal = (row) => {\r\n    setRecord(row);\r\n    toggle();\r\n  };\r\n  const LoadDeleteModal = (row) => {\r\n    toggleDeleteModal();\r\n    setRecord(row);\r\n  };\r\n\r\n  const dummyData = [\r\n    {\r\n      dateOfServicesProvided: \"2023-10-15\", // Dummy date for the first column\r\n      action: \"Sample Action\", // Dummy data for the second column\r\n    },\r\n    {\r\n      dateOfServicesProvided: \"2023-11-20\", // Another dummy date\r\n      action: \"Another Action\", // Another dummy action\r\n    },\r\n    // Add more objects for additional rows as needed\r\n  ];\r\n  const handleAction = (rowData) => {\r\n    // Define your action handling logic here\r\n    console.log(\"Action clicked for:\", rowData);\r\n  };\r\n\r\n  const LoadVie43wPage = (row, action) => {\r\n    // Placeholder function\r\n    console.log(\"View page loaded for:\", row);\r\n  };\r\n\r\n  //console.log(record)\r\n  const LoadDeletePage = () => {\r\n    setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}covid/vaccinations/${record.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        patients();\r\n        toggleDeleteModal();\r\n        setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <MaterialTable\r\n            icons={tableIcons}\r\n            title=\"Patient Historys \"\r\n            columns={[\r\n              {\r\n                title: \"Date Of Services Provided\",\r\n                field: \"dateOfServicesProvided\",\r\n              },\r\n              {\r\n                title: \"Action\",\r\n                field: \"action\",\r\n                filtering: false,\r\n                render: (rowData) => (\r\n                  <div>\r\n                    <Menu.Menu position=\"right\">\r\n                      <Menu.Item>\r\n                        <Button\r\n                          style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                          primary\r\n                        >\r\n                          <Dropdown\r\n                            item\r\n                            text=\"Action\"\r\n                            style={{ color: \"white\" }}\r\n                          >\r\n                            <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                              <Dropdown.Item\r\n                              //onClick={() => LoadViewPage(rowData, \"view\")}\r\n                              >\r\n                                {\" \"}\r\n                                <Icon name=\"eye\" />\r\n                                View{\" \"}\r\n                              </Dropdown.Item>\r\n\r\n                              <Dropdown.Item\r\n                              // onClick={() => LoadViewPage(rowData, \"update\")}\r\n                              >\r\n                                <Icon name=\"edit\" />\r\n                                Edit\r\n                              </Dropdown.Item>\r\n\r\n                              <Dropdown.Item\r\n                              //onClick={() => LoadModal(rowData, \"delete\")}\r\n                              >\r\n                                {\" \"}\r\n                                <Icon name=\"trash\" /> Delete\r\n                              </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                          </Dropdown>\r\n                        </Button>\r\n                      </Menu.Item>\r\n                    </Menu.Menu>\r\n                  </div>\r\n                ),\r\n              },\r\n\r\n              // { title: \"Dose Number\", field: \"doseNumber\", filtering: false },\r\n              // { title: \"Location\", field: \"location\", filtering: false },\r\n              // { title: \"Batch Number\", field: \"batchNumber\", filtering: false },\r\n              // { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n              // { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false },\r\n              // { title: \"Actions\", field: \"actions\", filtering: false },\r\n            ]}\r\n            //   data={ vacinationList.map((row) => ({\r\n\r\n            //         //dateOfServicesProvided: row\r\n            //        // vaccine: row.vaccineName,\r\n            //         //vaccineDate: row.vaccineDate,\r\n            //         //batchNumber: row.batchNumber,\r\n            //         //doseNumber: row.doseNumber,\r\n            //        // location: row.location,\r\n            //         //vaccinationFacility: row.vaccinationFacility,\r\n            //         //adverseEffect: row.adverseEffect,\r\n            //         actions:\r\n\r\n            //         <div>\r\n            //             <Menu.Menu position='right'  >\r\n            //             <Menu.Item >\r\n            //                 <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n            //                 <Dropdown item text='Action'>\r\n\r\n            //                 <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n            //                     <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n            //                     <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n            //                 </Dropdown.Menu>\r\n            //             </Dropdown>\r\n            //                 </Button>\r\n            //             </Menu.Item>\r\n            //             </Menu.Menu>\r\n            //         </div>\r\n\r\n            //       }))}\r\n            data={dummyData}\r\n            //columns={columns}\r\n\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n              },\r\n              searchFieldStyle: {\r\n                width: \"200%\",\r\n                margingLeft: \"250px\",\r\n              },\r\n              filtering: false,\r\n              exportButton: false,\r\n              searchFieldAlignment: \"left\",\r\n              pageSizeOptions: [10, 20, 100],\r\n              pageSize: 10,\r\n              debounceInterval: 400,\r\n            }}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <Vaccination\r\n        toggle={toggle}\r\n        showModal={modal}\r\n        patientObj={props.patientObj}\r\n        loadPatients={patients}\r\n        records={record}\r\n      />\r\n      <Modal\r\n        show={openDeleteModal}\r\n        toggle={toggleDeleteModal}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete -{\" \"}\r\n            <b>{record && record.batchNumber}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? \"Yes\" : \"Deleting...\"}\r\n          </Button>\r\n          <Button\r\n            onClick={toggleDeleteModal}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientVaccinationHistory;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from \"semantic-ui-react\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Vaccination from \"./../Vaccination/AddViccination\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst KpPrevHistory = (props) => {\r\n  const [vacinationList, setVaccinationtList] = useState([]);\r\n  const patientObj = props && props.patientObj ? props.patientObj : [];\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [openDeleteModal, setOpenDeleteModal] = React.useState(false);\r\n  const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n  const [record, setRecord] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients Vaccinations\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}kpprev/${patientObj.uuid}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setVaccinationtList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const loadVaccinationModal = (row) => {\r\n    setModal(!modal);\r\n  };\r\n  const LoadEditModal = (row) => {\r\n    setRecord(row);\r\n    toggle();\r\n  };\r\n  const LoadDeleteModal = (row) => {\r\n    toggleDeleteModal();\r\n    setRecord(row);\r\n  };\r\n\r\n  const dummyData = [\r\n    {\r\n      dateOfServicesProvided: \"2023-10-15\", // Dummy date for the first column\r\n      action: \"Sample Action\", // Dummy data for the second column\r\n    },\r\n    {\r\n      dateOfServicesProvided: \"2023-11-20\", // Another dummy date\r\n      action: \"Another Action\", // Another dummy action\r\n    },\r\n    // Add more objects for additional rows as needed\r\n  ];\r\n  const handleAction = (rowData) => {\r\n    // Define your action handling logic here\r\n    console.log(\"Action clicked for:\", rowData);\r\n  };\r\n\r\n  const LoadVie43wPage = (row, action) => {\r\n    // Placeholder function\r\n    console.log(\"View page loaded for:\", row);\r\n  };\r\n\r\n  //console.log(record)\r\n  const LoadDeletePage = () => {\r\n    setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}kpprev/${record.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        patients();\r\n        toggleDeleteModal();\r\n        setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <MaterialTable\r\n            icons={tableIcons}\r\n            title=\"Patient Kp-Prev History \"\r\n            columns={[\r\n              {\r\n                title: \"Date Of Services Provided\",\r\n                field: \"dateOfServicesProvided\",\r\n              },\r\n              {\r\n                title: \"Prevention Code\",\r\n                field: \"preventioncode\",\r\n                filtering: false,\r\n              },\r\n              { title: \"HTS Services\", field: \"htsServices\", filtering: false },\r\n              {\r\n                title: \"Prep Services\",\r\n                field: \"prepServices\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"Commodity Services\",\r\n                field: \"commodityServices\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"HIV Educational Services\",\r\n                field: \"hivEducationalServices\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"Biomedical Services\",\r\n                field: \"biomedicalServices\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"Structural Services\",\r\n                field: \"structuralServices\",\r\n                filtering: false,\r\n              },\r\n              // {\r\n              //   title: \"Action\",\r\n              //   field: \"action\",\r\n              //   filtering: false,\r\n              // },\r\n\r\n              // { title: \"Actions\", field: \"biomedicalServices\", filtering: false },\r\n            ]}\r\n            data={vacinationList.map((row) => ({\r\n              dateOfServicesProvided: row.dateServiceOffered,\r\n              preventioncode: row.prevCode,\r\n              htsServices: row.htsServices?.offered_hts !== \"\" ? \"✅\" : \"❌\",\r\n              prepServices: row.prepServices?.offered_prep !== \"\" ? \"✅\" : \"❌\",\r\n              commodityServices:\r\n                row.commodityServices?.condoms_dispensed !== \"\" ? \"✅\" : \"❌\",\r\n              hivEducationalServices:\r\n                row.hivEducationalServices?.iecMaterial !== \"\" ? \"✅\" : \"❌\",\r\n              biomedicalServices:\r\n                row.biomedicalServices?.sti_screening !== \"\" ? \"✅\" : \"❌\",\r\n              structuralServices:\r\n                row.structuralServices?.legalAidServices !== \"\" ? \"✅\" : \"❌\",\r\n              // action: (\r\n              //   <div>\r\n              //     <Menu.Menu position=\"right\">\r\n              //       <Menu.Item>\r\n              //         <Button\r\n              //           style={{\r\n              //             backgroundColor: \"rgb(153,46,98)\",\r\n              //             color: \"#fff\",\r\n              //           }}\r\n              //           primary\r\n              //         >\r\n              //           <Dropdown item text=\"Action\">\r\n              //             <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n              //               <Dropdown.Item onClick={() => LoadEditModal(row)}>\r\n              //                 <IconMenu name=\"edit\" />\r\n              //                 Edit\r\n              //               </Dropdown.Item>\r\n              //               <Dropdown.Item onClick={() => LoadDeleteModal(row)}>\r\n              //                 {\" \"}\r\n              //                 <IconMenu name=\"trash\" /> Delete\r\n              //               </Dropdown.Item>\r\n              //             </Dropdown.Menu>\r\n              //           </Dropdown>\r\n              //         </Button>\r\n              //       </Menu.Item>\r\n              //     </Menu.Menu>\r\n              //   </div>\r\n              // ),\r\n            }))}\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n              },\r\n              searchFieldStyle: {\r\n                width: \"200%\",\r\n                margingLeft: \"250px\",\r\n              },\r\n              filtering: false,\r\n              exportButton: false,\r\n              searchFieldAlignment: \"left\",\r\n              pageSizeOptions: [10, 20, 100],\r\n              pageSize: 10,\r\n              debounceInterval: 400,\r\n            }}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <Vaccination\r\n        toggle={toggle}\r\n        showModal={modal}\r\n        patientObj={props.patientObj}\r\n        loadPatients={patients}\r\n        records={record}\r\n      />\r\n      <Modal\r\n        show={openDeleteModal}\r\n        toggle={toggleDeleteModal}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete -{\" \"}\r\n            <b>{record && record.batchNumber}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? \"Yes\" : \"Deleting...\"}\r\n          </Button>\r\n          <Button\r\n            onClick={toggleDeleteModal}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KpPrevHistory;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport VaccinationHistory from \"./../Vaccination/VaccinationHistory\";\r\nimport KpPrevHistory from \"./../KpPrev/KpPrevHistory\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\nconst RecentHistory = (props) => {\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [loadingRecent, setLoadingRecent] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (props.patientObj && props.patientObj !== null) {\r\n      RecentActivities();\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  // const RecentActivities = () => {\r\n  //   axios\r\n  //   .put('/api/v1/kpprev', data, {\r\n  //     headers: { Authorization: `Bearer ${token}` },\r\n  //   })\r\n  //     .then((response) => {\r\n  //       setLoadingRecent(false);\r\n  //       setRecentActivities(response.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       setLoadingRecent(false);\r\n  //       //console.log(error);\r\n  //     });\r\n  // };\r\n  //Get list of LaboratoryHistory\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}api/v1/kpprev/retrieve ${props.patientObj.id}/activities?full=false`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoadingRecent(false);\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setLoadingRecent(false);\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === \"\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"kp-prevention\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row\">\r\n        <KpPrevHistory patientObj={props.patientObj} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='kp-prev'){\r\n            props.setActiveContent({...props.activeContent, route:'kp-prevention', id:row.id, actionType:action})\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        } else if(row.path==='kp-prev'){\r\n            //props.setActiveContent({...props.activeContent, route:'kp-prev-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}api/v1/kpprev/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport * as moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\n\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, selectedOptions, theme) {\r\n  return {\r\n    fontWeight:\r\n      selectedOptions.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nconst KpPrev = (props) => {\r\n  const theme = useTheme();\r\n  const patientObj = props.patientObj;\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [htsCodeVal, setHtsCodeVal] = useState({});\r\n  const [prepCodeVal, setPrepCodeVal] = useState({});\r\n  const [kpprevFormStatus, setKpprevFormStatus] = useState(true);\r\n  let temp = { ...errors };\r\n  const classes = useStyles();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const getHTScode = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${patientObj?.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(\"hts\", response);\r\n        setHtsCodeVal({\r\n          htsCode: response.data.clientCode,\r\n          hivStatus: response.data.hivPositive,\r\n          htsClientDtoList: response.data.htsClientDtoList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPrepCode = () => {\r\n    axios\r\n      .get(`${baseUrl}prep/persons/${patientObj?.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(\"prep\", response.data);\r\n        setPrepCodeVal({\r\n          prevCode: response.data.uniqueId,\r\n          prepStatus: response.data.prepStatus,\r\n          prepDtoList: response.data.prepDtoList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHTScode();\r\n    getPrepCode();\r\n  }, []);\r\n\r\n  const [date, setDate] = useState({\r\n    dateServiceOffered: \"\",\r\n    service_provider: \"\",\r\n  });\r\n  const [htsServices, setHtsServices] = useState({\r\n    offeredHts: \"\",\r\n    acceptedHts: \"\",\r\n    hivTestResult: \"\",\r\n    referredForArt: \"\",\r\n  });\r\n  const [prepServices, setPrepServices] = useState({\r\n    offeredPrep: \"\",\r\n    acceptedPrep: \"\",\r\n    referredForPrep: \"\",\r\n  });\r\n  const [commodityService, setCommodityService] = useState({\r\n    condomDispensed: \"\",\r\n    lubricantsDispensed: \"\",\r\n    oralQuickDispensed: \"\",\r\n    newNeedleDispensed: \"\",\r\n    oldNeedleRetrived: \"\",\r\n    nalxoneProvided: \"\",\r\n    howmanycondomDispensed: \"\",\r\n    howmanylubricantsDispensed: \"\",\r\n    howmanyoralQuickDispensed: \"\",\r\n    howmanynewNeedleDispensed: \"\",\r\n    howmanyoldNeedleRetrived: \"\",\r\n    howmanynalxoneProvided: \"\",\r\n  });\r\n  const [hivEducationProvided, setHivEducationProvided] = useState({\r\n    iecMaterial: \"\",\r\n    interPersonalCommunication: \"\",\r\n    peerGroupCommunication: \"\",\r\n  });\r\n  const [bioMedicalServices, setbioMedicalServices] = useState({\r\n    stiScreening: \"\",\r\n    stiSyndromicManagement: \"\",\r\n    stiTreatment: \"\",\r\n    screenedForTb: \"\",\r\n    providedWithTpt: \"\",\r\n    screenedForViralHepatits: \"\",\r\n    viralHepatitsScreenResult: \"\",\r\n    vaccinationForViralHepatits: \"\",\r\n    offeredFamilyPlanningServices: \"\",\r\n    referredForFamilyPlanningServices: \"\",\r\n    providedWithDrugRehab: \"\",\r\n    offeredMhpss: \"\",\r\n    onMedicalAssistedTherapy: \"\",\r\n    recivedNalxoneForOverdoseTreatment: \"\",\r\n    stiScreeningResult: \"\",\r\n    stifacilityReffered: \"\",\r\n    tbfacilityReffered: \"\",\r\n    typeofMhpss: \"\",\r\n    drugRehabfacilityReffered: \"\",\r\n    refferedfacilitydrugrehab: \"\",\r\n  });\r\n  const [structuralServices, setstructuralServices] = useState({\r\n    providedOrRefferedForEmpowerment: \"\",\r\n    legalAidServiceType: \"\",\r\n    peerGroupCommunication: \"\",\r\n    typeempowermentprovided: \"\",\r\n    typelegalempowerment: \"\",\r\n    legalprogramreferred: \"\",\r\n  });\r\n  const [facilityRefferedToo, setFacilityRefferedToo] = useState({\r\n    facilityRefferedToStiScreening: \"\",\r\n    facilityRefferedToScreenedTo: \"\",\r\n    facilityRefferedToScreenedForViralHepatits: \"\",\r\n    facilityRefferedToViralHepatitsScreenResult: \"\",\r\n    facilityRefferedToVaccinationForViralHepatits: \"\",\r\n    facilityRefferedToOfferedFamilyPlanningServices: \"\",\r\n    facilityRefferedToReferredForFamilyPlanningServices: \"\",\r\n    facilityRefeRredToProvidedWithDrugRehab: \"\",\r\n    facilityRefferedToOfferedMhpss: \"\",\r\n    facilityRefferedToOnMedicalAssistedTherapy: \"\",\r\n    facilityRefferedToRecievedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setDate({ ...date, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeReferred = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setFacilityRefferedToo({\r\n      ...facilityRefferedToo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeHtsService = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHtsServices({ ...htsServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangePrepServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setPrepServices({ ...prepServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCommodityServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setCommodityService({\r\n      ...commodityService,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangeHivEducationProvided = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHivEducationProvided({\r\n      ...hivEducationProvided,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangebioMedicalServices = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"screenedForTb\" && e.target.value === \"yes\") {\r\n      bioMedicalServices.providedWithTpt = \"\";\r\n    } else if (e.target.name === \"screenedForTb\" && e.target.value === \"no\") {\r\n      bioMedicalServices.tbtreatmentrefferal = \"\";\r\n    }\r\n    setbioMedicalServices({\r\n      ...bioMedicalServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangestructuralServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setstructuralServices({\r\n      ...structuralServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //Validations of the forms\r\n  const validateAttempt = () => {\r\n    temp.dateServiceOffered = date.dateServiceOffered\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  /* Remove  function **/\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateAttempt()) {\r\n      const generateRandomString = (length) => {\r\n        const characters =\r\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        let result = \"\";\r\n        for (let i = 0; i < length; i++) {\r\n          result += characters.charAt(\r\n            Math.floor(Math.random() * characters.length)\r\n          );\r\n        }\r\n        return result;\r\n      };\r\n      const biomedicalServiceValue = {\r\n        medical_assisted_therapy_for_six_months:\r\n          bioMedicalServices.onMedicalAssistedTherapy,\r\n        offered_family_planning_services:\r\n          bioMedicalServices.offeredFamilyPlanningServices,\r\n        offered_mhpss: bioMedicalServices.offeredMhpss,\r\n        provided_with_drug_rehab: bioMedicalServices.providedWithDrugRehab,\r\n        provided_with_tpt: bioMedicalServices.providedWithTpt,\r\n        received_naloxone_for_overdose_treatment:\r\n          bioMedicalServices.recivedNalxoneForOverdoseTreatment,\r\n        referred_for_family_planning_services:\r\n          bioMedicalServices.referredForFamilyPlanningServices,\r\n        screened_for_tb: bioMedicalServices.screenedForTb,\r\n        screened_for_viral_hepatitis:\r\n          bioMedicalServices.screenedForViralHepatits,\r\n        sti_screening: bioMedicalServices.stiScreening,\r\n        sti_syndromic_management: bioMedicalServices.stiSyndromicManagement,\r\n        sti_treatment: bioMedicalServices.stiTreatment,\r\n        vaccination_for_viral_hepatitis:\r\n          bioMedicalServices.vaccinationForViralHepatits,\r\n        viral_hepatitis_screen_result:\r\n          bioMedicalServices.viralHepatitsScreenResult,\r\n        sti_screening_result: bioMedicalServices.stiScreeningResult,\r\n        sti_facility_referred: bioMedicalServices.stifacilityReffered,\r\n        tb_facility_reffered: bioMedicalServices.tbfacilityReffered,\r\n        type_of_mhpss: bioMedicalServices.typeofMhpss,\r\n        drug_rehab_facility_reffered:\r\n          bioMedicalServices.drugRehabfacilityReffered,\r\n        referred_facility_drug_rehab:\r\n          bioMedicalServices.refferedfacilitydrugrehab,\r\n      };\r\n\r\n      const commodityServicesValue = {\r\n        condoms_dispensed: commodityService.condomDispensed,\r\n        hivst_kits_dispensed: commodityService.oralQuickDispensed,\r\n        lubricants_dispensed: commodityService.lubricantsDispensed,\r\n        naloxane_provided: commodityService.nalxoneProvided,\r\n        new_needles_dispensed: commodityService.newNeedleDispensed,\r\n        old_needles_dispensed: commodityService.oldNeedleRetrived,\r\n        how_many_condom_dispensed: commodityService.howmanycondomDispensed,\r\n        how_many_lubricants_dispensed:\r\n          commodityService.howmanylubricantsDispensed,\r\n        how_many_oral_quick_dispensed:\r\n          commodityService.howmanyoralQuickDispensed,\r\n        how_many_new_needle_dispensed:\r\n          commodityService.howmanynewNeedleDispensed,\r\n        how_many_old_needle_retrived: commodityService.howmanyoldNeedleRetrived,\r\n        how_many_nalxone_provided: commodityService.howmanynalxoneProvided,\r\n      };\r\n\r\n      const htsServicesValue = {\r\n        accepted_hts: htsServices.acceptedHts,\r\n        hiv_test_result: htsServices.hivTestResult,\r\n        offered_hts: htsServices.offeredHts,\r\n        referred_for_art: htsServices.referredForArt,\r\n      };\r\n\r\n      const prepServicesValue = {\r\n        accepted_prep: prepServices.acceptedPrep,\r\n        offered_prep: prepServices.offeredPrep,\r\n        referred_for_prep: prepServices.referredForPrep,\r\n      };\r\n\r\n      const structuralServicesValue = {\r\n        legalAidServices: structuralServices.legalAidServiceType,\r\n        providedEmpowerment:\r\n          structuralServices.providedOrRefferedForEmpowerment,\r\n        type_empowerment_provided: structuralServices.typeempowermentprovided,\r\n        typelegalempowerment: structuralServices.typelegalempowerment,\r\n        legalprogramreferred: structuralServices.legalprogramreferred,\r\n      };\r\n      const randomString = generateRandomString(10);\r\n      const data = {\r\n        htsCode: htsCodeVal?.htsCode,\r\n        prepCode: prepCodeVal?.prevCode,\r\n        prevCode: `kp_kprev-${randomString}`,\r\n        patientId: patientObj.uuid,\r\n        serviceProvider: date.service_provider,\r\n        target_group:\r\n          htsCodeVal?.htsClientDtoList?.length > 0\r\n            ? htsCodeVal?.htsClientDtoList[0]?.targetGroup\r\n            : prepCodeVal?.prepDtoList[0]?.targetGroup,\r\n        dateServiceOffered: date.dateServiceOffered,\r\n        htsServices: htsServicesValue,\r\n        prepServices: prepServicesValue,\r\n        entryPoint: {},\r\n        bioMedicalServices: biomedicalServiceValue,\r\n        structuralServices: structuralServicesValue,\r\n        commodityServices: commodityServicesValue,\r\n        hivEducationalServices: hivEducationProvided,\r\n      };\r\n      //console.log(data);\r\n\r\n      if (data.htsCode === null && data.prepCode === null) {\r\n        toast.error(\"Client is not registered on HTS or Prep\");\r\n        setSaving(false);\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}kpprev`, data, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            setSaving(false);\r\n            toast.success(\"Record save successfully\");\r\n            setDate({\r\n              dateServiceOffered: \"\",\r\n              service_provider: \"\",\r\n            });\r\n            setHtsServices({\r\n              offeredHts: \"\",\r\n              acceptedHts: \"\",\r\n              hivTestResult: \"\",\r\n              referredForArt: \"\",\r\n            });\r\n            setPrepServices({\r\n              offeredPrep: \"\",\r\n              acceptedPrep: \"\",\r\n              referredForPrep: \"\",\r\n            });\r\n            setCommodityService({\r\n              condomDispensed: \"\",\r\n              lubricantsDispensed: \"\",\r\n              oralQuickDispensed: \"\",\r\n              newNeedleDispensed: \"\",\r\n              oldNeedleRetrived: \"\",\r\n              nalxoneProvided: \"\",\r\n              howmanycondomDispensed: \"\",\r\n              howmanylubricantsDispensed: \"\",\r\n              howmanyoralQuickDispensed: \"\",\r\n              howmanynewNeedleDispensed: \"\",\r\n              howmanyoldNeedleRetrived: \"\",\r\n              howmanynalxoneProvided: \"\",\r\n            });\r\n            setHivEducationProvided({\r\n              iecMaterial: \"\",\r\n              interPersonalCommunication: \"\",\r\n              peerGroupCommunication: \"\",\r\n            });\r\n            setbioMedicalServices({\r\n              stiScreening: \"\",\r\n              stiSyndromicManagement: \"\",\r\n              stiTreatment: \"\",\r\n              screenedForTb: \"\",\r\n              providedWithTpt: \"\",\r\n              screenedForViralHepatits: \"\",\r\n              viralHepatitsScreenResult: \"\",\r\n              vaccinationForViralHepatits: \"\",\r\n              offeredFamilyPlanningServices: \"\",\r\n              referredForFamilyPlanningServices: \"\",\r\n              providedWithDrugRehab: \"\",\r\n              offeredMhpss: \"\",\r\n              onMedicalAssistedTherapy: \"\",\r\n              recivedNalxoneForOverdoseTreatment: \"\",\r\n              stiScreeningResult: \"\",\r\n              stifacilityReffered: \"\",\r\n              tbfacilityReffered: \"\",\r\n              typeofMhpss: \"\",\r\n              drugRehabfacilityReffered: \"\",\r\n            });\r\n            setstructuralServices({\r\n              providedOrRefferedForEmpowerment: \"\",\r\n              legalAidServiceType: \"\",\r\n              peerGroupCommunication: \"\",\r\n              typeempowermentprovided: \"\",\r\n              typelegalempowerment: \"\",\r\n              legalprogramreferred: \"\",\r\n            });\r\n            history.push(\"/\");\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n          });\r\n      }\r\n      //setSaving(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          {kpprevFormStatus ? (\r\n            <form>\r\n              {/* <div className=\"card d-flex\"> */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  KEY POPULATION PREVENTION FORM\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"row d-flex\">\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <br />\r\n                  <FormGroup>\r\n                    <Label>Date Of Service Provisions</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateServiceOffered\"\r\n                      value={date.dateServiceOffered}\r\n                      onChange={handleInputChange}\r\n                      id=\"dateServiceOffered\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    ></Input>\r\n                    {errors.dateServiceOffered !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateServiceOffered}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {/* HTS service */}\r\n                {htsCodeVal.htsClientDtoList?.length > 0 && (\r\n                  <>\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"teal\"\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"45px\",\r\n                        marginBottom: \"10px\",\r\n                      }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}>HTS Services</h2>\r\n                    </LabelSui>\r\n                    <br />\r\n                    <br />\r\n\r\n                    <div className=\"form-group mb-10 col-xs-6 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>Offered HTS</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"offeredHts\"\r\n                          id=\"offeredHts\"\r\n                          onChange={handleInputChangeHtsService}\r\n                          value={htsServices.offeredHts}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>Accepted HTS</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"acceptedHts\"\r\n                          id=\"acceptedHts\"\r\n                          onChange={handleInputChangeHtsService}\r\n                          value={htsServices.acceptedHts}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {htsServices.acceptedHts === \"1\" ? (\r\n                      <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                        <FormGroup>\r\n                          <Label>Hiv Test Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"hivTestResult\"\r\n                            id=\"hivTestResult\"\r\n                            onChange={handleInputChangeHtsService}\r\n                            value={htsServices.hivTestResult}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"positive\">Positive</option>\r\n                            <option value=\"negative\">Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {htsServices.hivTestResult === \"positive\" ? (\r\n                      <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                        <FormGroup>\r\n                          <Label>Reffered for ART</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForArt\"\r\n                            id=\"referredForArt\"\r\n                            onChange={handleInputChangeHtsService}\r\n                            value={htsServices.referredForArt}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {prepCodeVal.prepDtoList?.length > 0 ||\r\n                  (htsServices.hivTestResult === \"negative\" && (\r\n                    <>\r\n                      <LabelSui\r\n                        as=\"a\"\r\n                        color=\"teal\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: \"45px\",\r\n                          marginBottom: \"10px\",\r\n                        }}\r\n                        ribbon\r\n                      >\r\n                        <h2 style={{ color: \"#fff\" }}>PreP Services</h2>\r\n                      </LabelSui>\r\n                      <br />\r\n                      <br />\r\n                      <div className=\"form-group mb-3 col-md-4 \">\r\n                        <FormGroup>\r\n                          <Label>Offered Prep</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredPrep\"\r\n                            id=\"offeredPrep\"\r\n                            onChange={handleInputChangePrepServices}\r\n                            value={prepServices.offeredPrep}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4 \">\r\n                        <FormGroup>\r\n                          <Label>Accepted PreP</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"acceptedPrep\"\r\n                            id=\"acceptedPrep\"\r\n                            onChange={handleInputChangePrepServices}\r\n                            value={prepServices.acceptedPrep}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4 \">\r\n                        <FormGroup>\r\n                          <Label>Reffered for Prep</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForPrep\"\r\n                            id=\"referredForPrep\"\r\n                            onChange={handleInputChangePrepServices}\r\n                            value={prepServices.referredForPrep}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    </>\r\n                  ))}\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Commodity Service</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Condom Dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"condomDispensed\"\r\n                        id=\"condomDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.condomDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.condomDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Condom Dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanycondomDispensed\"\r\n                          id=\"howmanycondomDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanycondomDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Lubricants Dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"lubricantsDispensed\"\r\n                        id=\"lubricantsDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.lubricantsDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.lubricantsDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>How Many Lubricants Dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanylubricantsDispensed\"\r\n                          id=\"howmanylubricantsDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanylubricantsDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Oral Quick/ HIVST dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"oralQuickDispensed\"\r\n                        id=\"oralQuickDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oralQuickDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.oralQuickDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Oral Quick/ HIVST dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanyoralQuickDispensed\"\r\n                          id=\"howmanyoralQuickDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanyoralQuickDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>New Needles/Syringe Dispesend</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"newNeedleDispensed\"\r\n                        id=\"newNeedleDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.newNeedleDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.newNeedleDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>How Many New Needles/Syringe Dispesend</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanynewNeedleDispensed\"\r\n                          id=\"howmanynewNeedleDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanynewNeedleDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Old Needles/Syringe Retrived</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"oldNeedleRetrived\"\r\n                        id=\"oldNeedleRetrived\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oldNeedleRetrived}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.oldNeedleRetrived === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>Old Needles/Syringe Retrived</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanyoldNeedleRetrived\"\r\n                          id=\"howmanyoldNeedleRetrived\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanyoldNeedleRetrived}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Nalxone Provided</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"nalxoneProvided\"\r\n                        id=\"nalxoneProvided\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.nalxoneProvided}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.nalxoneProvided === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Nalxone Provided</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanynalxoneProvided\"\r\n                          id=\"howmanynalxoneProvided\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanynalxoneProvided}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>HIV Educaton Provided</h2>\r\n                  </LabelSui>\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>IEC materials/pamphlets provided </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"iecMaterial\"\r\n                        id=\"iecMaterial\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.iecMaterial}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>InterPersonal Communication</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"interPersonalCommunication\"\r\n                        id=\"interPersonalCommunication\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.interPersonalCommunication}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>Peer Group Communication</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"peerGroupCommunication\"\r\n                        id=\"peerGroupCommunication\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.peerGroupCommunication}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              {/* <div className='card'> */}\r\n\r\n              <div className=\" row d-flex\">\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Biomedical Services</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Screening</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiScreening\"\r\n                          id=\"stiScreening\"\r\n                          value={bioMedicalServices.stiScreening}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"yes\">Yes</option>\r\n                          <option value=\"no\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.stiScreening === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Screening Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreeningResult\"\r\n                            id=\"stiScreeningResult\"\r\n                            value={bioMedicalServices.stiScreeningResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"positive\">Positive</option>\r\n                            <option value=\"negative\">Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.stiScreeningResult === \"positive\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Treatment/ Referral</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiTreatment\"\r\n                            id=\"stiTreatment\"\r\n                            value={bioMedicalServices.stiTreatment}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.stiTreatment === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"stifacilityReffered\"\r\n                          id=\"stifacilityReffered\"\r\n                          value={bioMedicalServices.stifacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Syndromic Management</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiSyndromicManagement\"\r\n                          id=\"stiSyndromicManagement\"\r\n                          value={bioMedicalServices.stiSyndromicManagement}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Screened for TB</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"screenedForTb\"\r\n                          id=\"screenedForTb\"\r\n                          value={bioMedicalServices.screenedForTb}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.screenedForTb === \"no\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided with TPT</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithTpt\"\r\n                            id=\"providedWithTpt\"\r\n                            value={bioMedicalServices.providedWithTpt}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.screenedForTb === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>TB treatment/referral </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"tbtreatmentrefferal\"\r\n                            id=\"tbtreatmentrefferal\"\r\n                            value={bioMedicalServices.tbtreatmentrefferal}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.tbtreatmentrefferal === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"tbfacilityReffered\"\r\n                          id=\"tbfacilityReffered\"\r\n                          value={bioMedicalServices.tbfacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Screened For Viral Heaptits</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"screenedForViralHepatits\"\r\n                          id=\"screenedForViralHepatits\"\r\n                          value={bioMedicalServices.screenedForViralHepatits}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.screenedForViralHepatits === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Viral Hepatits Screen Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"viralHepatitsScreenResult\"\r\n                            id=\"viralHepatitsScreenResult\"\r\n                            value={bioMedicalServices.viralHepatitsScreenResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"positive\"> Positive </option>\r\n                            <option value=\"negative\"> Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Vaccination For Viral Hepatits</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"vaccinationForViralHepatits\"\r\n                          id=\"vaccinationForViralHepatits\"\r\n                          value={bioMedicalServices.vaccinationForViralHepatits}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"Yes\"> Yes </option>\r\n                          <option value=\"No\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Offered Family Planning Services</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"offeredFamilyPlanningServices\"\r\n                          id=\"offeredFamilyPlanningServices\"\r\n                          value={\r\n                            bioMedicalServices.offeredFamilyPlanningServices\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.offeredFamilyPlanningServices ===\r\n                      \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Refferred For Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForFamilyPlanningServices\"\r\n                            id=\"referredForFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.referredForFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Provided With Drug Rehab</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"providedWithDrugRehab\"\r\n                          id=\"providedWithDrugRehab\"\r\n                          value={bioMedicalServices.providedWithDrugRehab}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered MHPSS</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredMhpss\"\r\n                            id=\"offeredMhpss\"\r\n                            value={bioMedicalServices.offeredMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.offeredMhpss === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Type of MHPSS Provided</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"typeofMhpss\"\r\n                            id=\"typeofMhpss\"\r\n                            value={bioMedicalServices.typeofMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Referred to facility for Drug Rehab </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"refferedfacilitydrugrehab\"\r\n                            id=\"refferedfacilitydrugrehab\"\r\n                            value={bioMedicalServices.refferedfacilitydrugrehab}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.refferedfacilitydrugrehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label>Drug Rehab Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"drugRehabfacilityReffered\"\r\n                          id=\"drugRehabfacilityReffered\"\r\n                          value={bioMedicalServices.drugRehabfacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          On Medical Assisted Therapy (MAT) for atleast 6 months\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"onMedicalAssistedTherapy\"\r\n                          id=\"onMedicalAssistedTherapy\"\r\n                          value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Recived Nalxone for Overdose Treatment</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"recivedNalxoneForOverdoseTreatment\"\r\n                          id=\"recivedNalxoneForOverdoseTreatment\"\r\n                          value={\r\n                            bioMedicalServices.recivedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}> Structural Services </h2>\r\n                  </LabelSui>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Provided or Reffered for Empowerment</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"providedOrRefferedForEmpowerment\"\r\n                        id=\"providedOrRefferedForEmpowerment\"\r\n                        value={\r\n                          structuralServices.providedOrRefferedForEmpowerment\r\n                        }\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                    {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                      \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Type of Empowerment Provided </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"typeempowermentprovided\"\r\n                          id=\"typeempowermentprovided\"\r\n                          value={structuralServices.typeempowermentprovided}\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Legal Aid Service Type</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"legalAidServiceType\"\r\n                        id=\"legalAidServiceType\"\r\n                        value={structuralServices.legalAidServiceType}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {structuralServices.legalAidServiceType === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Label> Type of Legal Empowerment Provided </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"typelegalempowerment\"\r\n                        id=\"typelegalempowerment\"\r\n                        value={structuralServices.typelegalempowerment}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {structuralServices.legalAidServiceType === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Label> Legal Program referred </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"legalprogramreferred\"\r\n                        id=\"legalprogramreferred\"\r\n                        value={structuralServices.legalprogramreferred}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}> Service Provider </h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Name of service provider</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"service_provider\"\r\n                        id=\"service_provider\"\r\n                        value={date.service_provider}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n\r\n                      {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                    </FormGroup>\r\n                    {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                      \"Yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                          id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                          value={\r\n                            facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* </div> */}\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                //hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n                onClick={handleSubmit}\r\n                style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n                //disabled={attemptList.length <= 0 && !saving ? true : false}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>\r\n                    {\" \"}\r\n                    {props.activeContent.actionType === \"update\"\r\n                      ? \"Update\"\r\n                      : \"Save\"}\r\n                  </span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>\r\n                    {props.activeContent.actionType === \"update\"\r\n                      ? \"Update...\"\r\n                      : \"Save...\"}\r\n                  </span>\r\n                )}\r\n              </MatButton>\r\n              {/* </div> */}\r\n            </form>\r\n          ) : (\r\n            <div>Client not Eligible for Kp Prev</div>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default KpPrev;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport PatientCardDetail from \"./PatientCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport RecentHistory from \"./../History/RecentHistory\";\r\nimport PatientHistory from \"./../History/PatientHistory\";\r\nimport Biometrics from \"./Biometric\";\r\nimport AddmissionHome from \"./../Admission/AddmissionHome\";\r\nimport PatientVaccinationHistory from \"./../Vaccination/VaccinationHistory\";\r\nimport KpPrev from \"../KpPrev\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [art, setArt] = useState(false);\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: \"recent-history\",\r\n    id: \"\",\r\n    activeTab: \"home\",\r\n    actionType: \"create\",\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n  const patientObj =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const prepId =\r\n    history.location && history.location.state\r\n      ? history.location.state.prepId\r\n      : {};\r\n  //console.log(patientObj)\r\n  useEffect(() => {}, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>KP-PREV /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <PatientCardDetail\r\n            patientObj={patientObj}\r\n            setArt={setArt}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <SubMenu\r\n            patientObj={patientObj}\r\n            art={art}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <br />\r\n          {activeContent.route === \"recent-history\" && (\r\n            <RecentHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n          {/* {activeContent.route === \"biometrics\" && (\r\n            <Biometrics\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"addmission\" && (\r\n            <AddmissionHome\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"vaccination\" && (\r\n            <PatientVaccinationHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"discharge\" && (\r\n            <AddmissionHome\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"icu\" && (\r\n            <AddmissionHome\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"patient-history\" && (\r\n            <PatientHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n\r\n          {activeContent.route === \"kp-prev\" && (\r\n            <KpPrev\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n          {/* History Pages */}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { FaPlus, FaAngleDown } from \"react-icons/fa\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"./patient.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst UserRegistration = (props) => {\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: \"\",\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: \"\",\r\n    genderId: \"\",\r\n    identifier: \"\",\r\n    otherName: \"\",\r\n    maritalStatusId: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    dateOfRegistration: \"\",\r\n    isDateOfBirthEstimated: null,\r\n    age: \"\",\r\n    phoneNumber: \"\",\r\n    altPhonenumber: \"\",\r\n    dob: \"\",\r\n    countryId: 1,\r\n    stateId: \"\",\r\n    district: \"\",\r\n    sexId: \"\",\r\n    ninNumber: \"\",\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: \"\",\r\n    phone: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    relationshipId: \"\",\r\n    lastName: \"\",\r\n    middleName: \"\",\r\n  });\r\n  const [contacts, setContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  //const [editRelative, setEditRelative] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [covidEffect, setCovidEffect] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: \"\",\r\n    vaccinationEnrollment: \"\",\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //HIV INFORMATION\r\n  const [showContactCard, setShowContactCard] = useState(true);\r\n  const [vaccine, setVaccine] = useState([]);\r\n  //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n  const [objValues, setObjValues] = useState({\r\n    adverseEffect: \"\",\r\n    batchNumber: \"\",\r\n    doseNumber: \"\",\r\n    location: \"\",\r\n    patientId: \"\",\r\n    vaccinationFacility: \"\",\r\n    vaccine: \"\",\r\n    vaccineDate: \"\",\r\n    knownMedicalCondition: \"\",\r\n    medicalCondition: \"\",\r\n    occupation: \"\",\r\n    vaccineId: \"\",\r\n    visitDate: \"\",\r\n    patientId: \"\",\r\n    visitId: \"\",\r\n    workInHealthSector: \"\",\r\n  });\r\n\r\n  //status for hospital Number\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [hospitalNumStatus2, setHospitalNumStatus2] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  patientId = locationState ? locationState.patientId : null;\r\n  let temp = { ...errors };\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    VACCINE();\r\n    GetCountry();\r\n    setStateByCountryId();\r\n    COVID_ADVERSE_EFFECT();\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      toast.error(\"Date of registration can not be earlier than date of birth\");\r\n    }\r\n  }, [basicInfo.dateOfRegistration]);\r\n  //covid/codeset?category=VACCINE\r\n  const VACCINE = () => {\r\n    axios\r\n      .get(`${baseUrl}covid/codeset?category=VACCINE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setVaccine(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const COVID_ADVERSE_EFFECT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setCovidEffect(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //COVID_ADVERSE_EFFECT\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  // const loadTopLevelCountry = useCallback(async () => {\r\n  //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n  //     settopLevelUnitCountryOptions(response.data);\r\n  // }, []);\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get States from selected country\r\n  const getStates = (e) => {\r\n    const getCountryId = e.target.value;\r\n    setStateByCountryId(1);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId() {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setStates(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: \"\" });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n    if (basicInfo.age !== \"\" && basicInfo.age >= 60) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value === \"Actual\") {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value === \"Estimated\") {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    const ageNumber = e.target.value.replace(/\\D/g, \"\");\r\n    if (!ageDisabled && ageNumber) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(ageNumber * -1, \"years\");\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n      if (ageNumber !== \"\" && ageNumber >= 60) {\r\n        toggle();\r\n      }\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: Math.abs(e.target.value) });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  //Handle Input Change for Basic Infor\r\n  const handleInputChangeBasic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"ninNumber\" && e.target.value !== \"\") {\r\n      const ninNumberValue = checkNINLimit(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: ninNumberValue });\r\n    }\r\n    if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n          setObjValues({ ...objValues, uniqueId: e.target.value });\r\n          setHospitalNumStatus2(true);\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n          setHospitalNumStatus2(false);\r\n        }\r\n      }\r\n      getHosiptalNumber();\r\n    }\r\n  };\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? \"\" : \"First Name is required\";\r\n    temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\";\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? \"\"\r\n      : \"Relationship Type is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = (e) => {\r\n    if (validateRelatives()) {\r\n      setContacts([...contacts, relatives]);\r\n      setRelatives({\r\n        address: \"\",\r\n        phone: \"\",\r\n        firstName: \"\",\r\n        email: \"\",\r\n        relationshipId: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n      });\r\n    }\r\n  };\r\n  const handleDeleteRelative = (index) => {\r\n    contacts.splice(index, 1);\r\n    setContacts([...contacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    contacts.splice(index, 1);\r\n  };\r\n  const getRelationship = (relationshipId) => {\r\n    const relationship = relationshipOptions.find(\r\n      (obj) => obj.id == relationshipId\r\n    );\r\n    return relationship ? relationship.display : \"\";\r\n  };\r\n  const handleInputChangeRelatives = (e) => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\";\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? \"\"\r\n      : \"Hospital Number  is required.\";\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n    // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n    temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\";\r\n    temp.dateOfRegistration = basicInfo.dateOfRegistration\r\n      ? \"\"\r\n      : \"Date of Registration is required.\";\r\n    //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n    temp.address = basicInfo.address ? \"\" : \"Address is required.\";\r\n    temp.phoneNumber = basicInfo.phoneNumber\r\n      ? \"\"\r\n      : \"Phone Number  is required.\";\r\n    temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\";\r\n    temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\";\r\n    temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\";\r\n    //VACCINATION FORM VALIDATION\r\n    temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\";\r\n    temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\";\r\n    //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n    temp.location = objValues.location ? \"\" : \"This field is required\";\r\n    temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\";\r\n    temp.adverseEffect = objValues.adverseEffect\r\n      ? \"\"\r\n      : \"This field is required\";\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    console.log(handleSubmit);\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts &&\r\n        contacts.length > 0 &&\r\n        contacts.map((x) => {\r\n          const contactInfo = {\r\n            address: {\r\n              line: [x.address],\r\n            },\r\n            contactPoint: {\r\n              type: \"phone\",\r\n              value: x.phone,\r\n            },\r\n            firstName: x.firstName,\r\n            fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n            relationshipId: x.relationshipId,\r\n            surname: x.lastName,\r\n            otherName: x.middleName,\r\n          };\r\n\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.address,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: \"\",\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: newConatctsInfo,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.sexId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n        const phone = {\r\n          type: \"phone\",\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: \"email\",\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: \"altphone\",\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        //patientForm.id = patientId;\r\n        patientDTO.person = patientForm;\r\n        patientDTO.vaccinationEnrollment = objValues;\r\n        const observationData = {\r\n          observation: {\r\n            data: {},\r\n            date: date.dateServiceOffered,\r\n            htsService: htsServices,\r\n            prepServices: prepServices,\r\n          },\r\n          commodityService: commodityService,\r\n          hivEducationProvided: hivEducationProvided,\r\n          bioMedicalServices: bioMedicalServices,\r\n          structuralServices: structuralServices,\r\n        };\r\n\r\n        const response = await axios.post(\r\n          `${baseUrl}/api/v1/kpprev`,\r\n          patientDTO,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        toast.success(\"Patient Register successfully\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n        setSaving(false);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          if (\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\" &&\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.subErrors[0].message !== \"\"\r\n          ) {\r\n            toast.error(\r\n              error.response.data.apierror.message +\r\n                \" : \" +\r\n                error.response.data.apierror.subErrors[0].field +\r\n                \" \" +\r\n                error.response.data.apierror.subErrors[0].message,\r\n              { position: toast.POSITION.BOTTOM_CENTER }\r\n            );\r\n          } else {\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const [date, setDate] = useState({\r\n    dateServiceOffered: \"\",\r\n  });\r\n\r\n  const [htsServices, setHtsServices] = useState({\r\n    offeredHts: \"\",\r\n    acceptedHts: \"\",\r\n    hivTestResult: \"\",\r\n    referredForArt: \"\",\r\n  });\r\n  const [prepServices, setPrepServices] = useState({\r\n    offeredPrep: \"\",\r\n    acceptedPrep: \"\",\r\n    refferedForPrep: \"\",\r\n  });\r\n  const [commodityService, setCommodityService] = useState({\r\n    condomDispensed: \"\",\r\n    lubricantsDispensed: \"\",\r\n    oralQuickDispensed: \"\",\r\n    newNeedleDispensed: \"\",\r\n    oldNeedleRetrived: \"\",\r\n    nalxoneProvided: \"\",\r\n  });\r\n  const [hivEducationProvided, setHivEducationProvided] = useState({\r\n    iecMaterial: \"\",\r\n    interPersonalCommunication: \"\",\r\n    peerGroupCommunication: \"\",\r\n  });\r\n  const [bioMedicalServices, setbioMedicalServices] = useState({\r\n    stiScreening: \"\",\r\n    stiSyndromicManagement: \"\",\r\n    stiTreatment: \"\",\r\n    screenedForTb: \"\",\r\n    providedWithTpt: \"\",\r\n    screenedForViralHepatits: \"\",\r\n    viralHepatitsScreenResult: \"\",\r\n    vaccinationForViralHepatits: \"\",\r\n    offeredFamilyPlanningServices: \"\",\r\n    referredForFamilyPlanningServices: \"\",\r\n    providedWithDrugRehab: \"\",\r\n    offeredMhpss: \"\",\r\n    onMedicalAssistedTherapy: \"\",\r\n    recivedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n  const [structuralServices, setstructuralServices] = useState({\r\n    providedOrRefferedForEmpowerment: \"\",\r\n    legalAidServiceType: \"\",\r\n    peerGroupCommunication: \"\",\r\n  });\r\n  const [facilityRefferedToo, setFacilityRefferedToo] = useState({\r\n    facilityRefferedToStiScreening: \"\",\r\n    facilityRefferedToScreenedTo: \"\",\r\n    facilityRefferedToScreenedForViralHepatits: \"\",\r\n    facilityRefferedToViralHepatitsScreenResult: \"\",\r\n    facilityRefferedToVaccinationForViralHepatits: \"\",\r\n    facilityRefferedToOfferedFamilyPlanningServices: \"\",\r\n    facilityRefferedToReferredForFamilyPlanningServices: \"\",\r\n    facilityRefeRredToProvidedWithDrugRehab: \"\",\r\n    facilityRefferedToOfferedMhpss: \"\",\r\n    facilityRefferedToOnMedicalAssistedTherapy: \"\",\r\n    facilityRefferedToRecievedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n\r\n  const handleInputChan4Date = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setDate({ ...date, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeReferred = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setFacilityRefferedToo({\r\n      ...facilityRefferedToo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeHtsService = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHtsServices({ ...htsServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangePrepServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setPrepServices({ ...prepServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCommodityServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setCommodityService({\r\n      ...commodityService,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangeHivEducationProvided = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHivEducationProvided({\r\n      ...hivEducationProvided,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangebioMedicalServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setbioMedicalServices({\r\n      ...bioMedicalServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangestructuralServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setstructuralServices({\r\n      ...structuralServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"location\" && objValues.location !== \"Facility\") {\r\n      objValues.vaccinationFacility = \"\";\r\n      setObjValues({ ...objValues, [\"vaccinationFacility\"]: \"\" });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setRelatives({ ...relatives, [inputName]: NumberValue });\r\n  };\r\n  // const checkPhoneNumberBasic=(e, inputName)=>{\r\n  //     const limit = 10;\r\n  //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});\r\n  // }\r\n  const checkNINLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n  const handleCheckBoxworkInHealthSector = (e) => {\r\n    if (e.target.checked) {\r\n      setObjValues({ ...objValues, [\"workInHealthSector\"]: e.target.checked });\r\n      //setOvcEnrolled(true)\r\n    } else {\r\n      setObjValues({ ...objValues, [\"workInHealthSector\"]: false });\r\n    }\r\n  };\r\n\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setBasicInfo({ ...basicInfo, [inputName]: NumberValue });\r\n  };\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  const handleCheckBoxknownMedicalCondition = (e) => {\r\n    if (e.target.checked) {\r\n      setObjValues({\r\n        ...objValues,\r\n        [\"knownMedicalCondition\"]: e.target.checked,\r\n      });\r\n      //setOvcEnrolled(true)\r\n    } else {\r\n      setObjValues({ ...objValues, [\"knownMedicalCondition\"]: false });\r\n    }\r\n  };\r\n  const onClickContactCard = () => {\r\n    setShowContactCard(!showContactCard);\r\n  };\r\n  const onClickRelativeCard = () => {\r\n    setShowRelative(!showRelative);\r\n  };\r\n  const handleCancel = () => {\r\n    history.push({ pathname: \"/\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Kp-Prev /</Link> Patient Registration\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/\",\r\n          state: \"users\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mr-10 pr-10\"\r\n          style={{\r\n            backgroundColor: \"#014d88\",\r\n            fontWeight: \"bolder\",\r\n            margingRight: \"-40px\",\r\n          }}\r\n          startIcon={<TiArrowBack />}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n            Back{\" \"}\r\n          </span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    {userDetail === null\r\n                      ? \"Basic Information\"\r\n                      : \"Edit User Information\"}\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            min=\"1983-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            value={basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.dateOfRegistration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            Hospital Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hospitalNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {\"Hospital number already exist\"}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"ninNumber\">\r\n                            National Identity Number (NIN){\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"ninNumber\"\r\n                            value={basicInfo.ninNumber}\r\n                            id=\"ninNumber\"\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">\r\n                            First Names <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.firstName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Last Name <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.lastName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Sex <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.id}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Date Of Birth{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dob\"\r\n                            min=\"1940-01-01\"\r\n                            id=\"dob\"\r\n                            max={\r\n                              basicInfo.dateOfRegistration === \"\"\r\n                                ? moment(new Date()).format(\"YYYY-MM-DD\")\r\n                                : basicInfo.dateOfRegistration\r\n                            }\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            className=\"form-control\"\r\n                            id=\"age\"\r\n                            min=\"5\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                        <p>\r\n                          <b style={{ color: \"red\" }}>\r\n                            {basicInfo.age !== \"\" && basicInfo.age < 5\r\n                              ? \"The minimum age is 5\"\r\n                              : \" \"}{\" \"}\r\n                          </b>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Employment Status </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Education Level </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Contact Details\r\n                  </h5>\r\n                  {showContactCard === false ? (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickContactCard}\r\n                      >\r\n                        <FaPlus />\r\n                      </span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickContactCard}\r\n                      >\r\n                        <FaAngleDown />\r\n                      </span>{\" \"}\r\n                    </>\r\n                  )}\r\n                </div>\r\n                {showContactCard && (\r\n                  <div className=\"card-body\">\r\n                    <div className={\"row\"}>\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Phone Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"phoneNumber\"\r\n                            id=\"phoneNumber\"\r\n                            onChange={(e) => {\r\n                              handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                            }}\r\n                            value={basicInfo.phoneNumber}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            required\r\n                          />\r\n                          {errors.phoneNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.phoneNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Alt. Phone Number</Label>\r\n                          {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"altPhonenumber\"\r\n                            id=\"altPhonenumber\"\r\n                            onChange={(e) => {\r\n                              handleInputChangePhoneNumber(e, \"altPhonenumber\");\r\n                            }}\r\n                            value={basicInfo.altPhonenumber}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            required\r\n                          />\r\n                          {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Email</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.email}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            required\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Country <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"countryId\"\r\n                            id=\"countryId\"\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            value={basicInfo.countryId}\r\n                            disabled\r\n                            onChange={getStates}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {countries.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.countryId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.countryId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            State <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"stateId\"\r\n                            id=\"stateId\"\r\n                            value={basicInfo.stateId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            onChange={getProvinces}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {states.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.stateId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.stateId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Province/District/LGA{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"district\"\r\n                            id=\"district\"\r\n                            value={basicInfo.district}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            onChange={handleInputChangeBasic}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {provinces.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.district !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.district}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Street Address{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            id=\"address\"\r\n                            value={basicInfo.address}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.address !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.address}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Landmark</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"landmark\"\r\n                            id=\"landmark\"\r\n                            value={basicInfo.landmark}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                  {showRelative === false ? (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickRelativeCard}\r\n                      >\r\n                        <FaPlus />\r\n                      </span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickRelativeCard}\r\n                      >\r\n                        <FaAngleDown />\r\n                      </span>{\" \"}\r\n                    </>\r\n                  )}\r\n                </div>\r\n                {showRelative && (\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      {contacts && contacts.length > 0 && (\r\n                        <div className=\"col-xl-12 col-lg-12\">\r\n                          <table style={{ width: \"100%\" }} className=\"mb-3\">\r\n                            <thead className=\"mb-3\">\r\n                              <tr>\r\n                                <th>Relationship Type</th>\r\n                                <th>Name</th>\r\n                                <th>Phone</th>\r\n                                <th>Address</th>\r\n                                <th>Actions</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"mb-3\">\r\n                              {contacts.map((item, index) => {\r\n                                return (\r\n                                  <tr key={item.index} className=\"mb-3\">\r\n                                    <td>\r\n                                      {getRelationship(item.relationshipId)}\r\n                                    </td>\r\n                                    <td>\r\n                                      {item.firstName +\r\n                                        \" \" +\r\n                                        item.middleName +\r\n                                        \" \" +\r\n                                        item.lastName}\r\n                                    </td>\r\n                                    <td>{item.phone}</td>\r\n                                    <td>{item.address}</td>\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                        onClick={() =>\r\n                                          handleEditRelative(item, index)\r\n                                        }\r\n                                      >\r\n                                        <FontAwesomeIcon icon=\"edit\" />\r\n                                      </button>\r\n                                      &nbsp;&nbsp;\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-danger btn-sm removeRow\"\r\n                                        onClick={(e) =>\r\n                                          handleDeleteRelative(index)\r\n                                        }\r\n                                      >\r\n                                        <FontAwesomeIcon icon=\"trash\" />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        {showRelative && (\r\n                          <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"relationshipType\">\r\n                                      Relationship Type{\" \"}\r\n                                      <span style={{ color: \"red\" }}> *</span>\r\n                                    </Label>\r\n                                    <select\r\n                                      className=\"form-control\"\r\n                                      name=\"relationshipId\"\r\n                                      id=\"relationshipId\"\r\n                                      value={relatives.relationshipId}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    >\r\n                                      <option value={\"\"}>Select</option>\r\n                                      {relationshipOptions.map(\r\n                                        (relative, index) => (\r\n                                          <option\r\n                                            key={relative.id}\r\n                                            value={relative.id}\r\n                                          >\r\n                                            {relative.display}\r\n                                          </option>\r\n                                        )\r\n                                      )}\r\n                                    </select>\r\n                                    {errors.relationshipId !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.relationshipId}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"cfirstName\">\r\n                                      First Name{\" \"}\r\n                                      <span style={{ color: \"red\" }}> *</span>\r\n                                    </Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"firstName\"\r\n                                      value={relatives.firstName}\r\n                                      id=\"firstName\"\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {errors.firstName !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.firstName}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label>Middle Name</Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"middleName\"\r\n                                      id=\"middleName\"\r\n                                      value={relatives.middleName}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label>\r\n                                      Last Name{\" \"}\r\n                                      <span style={{ color: \"red\" }}> *</span>\r\n                                    </Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"lastName\"\r\n                                      id=\"lastName\"\r\n                                      value={relatives.lastName}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {errors.lastName !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.lastName}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"contactPhoneNumber\">\r\n                                      Phone Number\r\n                                    </Label>\r\n                                    {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      name=\"phone\"\r\n                                      id=\"phone\"\r\n                                      onChange={(e) => {\r\n                                        checkPhoneNumber(e, \"phone\");\r\n                                      }}\r\n                                      value={relatives.phone}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      required\r\n                                    />\r\n                                    {errors.phone !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.phone}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"contactEmail\">Email</Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"email\"\r\n                                      name=\"email\"\r\n                                      id=\"email\"\r\n                                      value={relatives.email}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                      required\r\n                                    />\r\n                                    {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"contactAddress\">Address</Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"address\"\r\n                                      id=\"address\"\r\n                                      value={relatives.address}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                  </FormGroup>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"row\">\r\n                                <div className=\"col-1\">\r\n                                  <MatButton\r\n                                    type=\"button\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    onClick={handleSaveRelationship}\r\n                                  >\r\n                                    Add\r\n                                  </MatButton>\r\n                                </div>\r\n\r\n                                <div className=\"col-1\">\r\n                                  <MatButton\r\n                                    type=\"button\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.button}\r\n                                    onClick={handleCancelSaveRelationship}\r\n                                  >\r\n                                    Cancel\r\n                                  </MatButton>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\"></div>\r\n                    {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                    {/* </div> */}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/* Adding First DOSAGE FORM HERE */}\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Key Population Prevention{\" \"}\r\n                  </h5>\r\n                </div>\r\n\r\n                {/* <div className=\"card d-flex\"> */}\r\n\r\n                <div className=\"row d-flex\">\r\n                  <h2>Service Provider </h2>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>Date Of Service Provisions</Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"dateServiceOffered\"\r\n                        value={date.dateServiceOffered}\r\n                        onChange={handleInputChan4Date}\r\n                        id=\"dateServiceOffered\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                      {errors.dateServiceOffered !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateServiceOffered}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* <div className='card'> */}\r\n\r\n                  <div\r\n                    className=\"card-header\"\r\n                    style={{\r\n                      backgroundColor: \"teal\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bolder\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>HTS Services</h2>\r\n                  </div>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Offered HTS</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"offeredHts\"\r\n                        id=\"offeredHts\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.offeredHts}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Accepted HTS</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"acceptedHts\"\r\n                        id=\"acceptedHts\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.acceptedHts}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Hiv Test Result</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"hivTestResult\"\r\n                        id=\"hivTestResult\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.hivTestResult}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Reffered for ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"referredForArt\"\r\n                        id=\"referredForArt\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.referredForArt}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  {/* </div> */}\r\n\r\n                  <br />\r\n\r\n                  {/* <div className='card'> */}\r\n\r\n                  {/* <div className=\"row d-flex\"> */}\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"teal\"\r\n                    style={{ width: \"100%\", height: \"45px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>PreP Services</h2>\r\n                  </LabelSui>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Offered Prep</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"offeredPrep\"\r\n                        id=\"offeredPrep\"\r\n                        onChange={handleInputChangePrepServices}\r\n                        value={prepServices.offeredPrep}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Accepted PreP</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"acceptedPrep\"\r\n                        id=\"acceptedPrep\"\r\n                        onChange={handleInputChangePrepServices}\r\n                        value={prepServices.acceptedPrep}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Reffered for Prep</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"referredForPrep\"\r\n                        id=\"referredForPrep\"\r\n                        onChange={handleInputChangePrepServices}\r\n                        value={prepServices.referredForPrep}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* </div> */}\r\n\r\n                  {/* <div className='card'> */}\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"teal\"\r\n                    style={{ width: \"100%\", height: \"45px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Commodity Service</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Condom Dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"condomDispensed\"\r\n                        id=\"condomDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.condomDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Lubricants Dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"lubricantsDispensed\"\r\n                        id=\"lubricantsDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.lubricantsDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Oral Quick/ HIVST dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"oralQuickDispensed\"\r\n                        id=\"oralQuickDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oralQuickDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>New Needles/Syringe Dispesend</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"newNeedleDispensed\"\r\n                        id=\"newNeedleDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.newNeedleDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Old Needles/Syringe Retrived</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"oldNeedleRetrived\"\r\n                        id=\"oldNeedleRetrived\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oldNeedleRetrived}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Nalxone Provided</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"nalxoneProvided\"\r\n                        id=\"nalxoneProvided\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.nalxoneProvided}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* </div> */}\r\n                  <div className=\"row d-flex\">\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"blue\"\r\n                      style={{ width: \"106%\", height: \"45px\" }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}>HIV Educaton Provided</h2>\r\n                    </LabelSui>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>IEC material/Pamphelt</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"iecMaterial\"\r\n                          id=\"iecMaterial\"\r\n                          onChange={handleInputChangeHivEducationProvided}\r\n                          value={hivEducationProvided.iecMaterial}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>InterPersonal Communication</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"interPersonalCommunication\"\r\n                          id=\"interPersonalCommunication\"\r\n                          onChange={handleInputChangeHivEducationProvided}\r\n                          value={\r\n                            hivEducationProvided.interPersonalCommunication\r\n                          }\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>Peer Group Communication</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"peerGroupCommunication\"\r\n                          id=\"peerGroupCommunication\"\r\n                          onChange={handleInputChangeHivEducationProvided}\r\n                          value={hivEducationProvided.peerGroupCommunication}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                {/* <div className='card'> */}\r\n\r\n                <div className=\" row d-flex\">\r\n                  <div className=\"row d-flex\">\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"blue\"\r\n                      style={{ width: \"106%\", height: \"45px\" }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}>Biomedical Services</h2>\r\n                    </LabelSui>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Screening</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreening\"\r\n                            id=\"stiScreening\"\r\n                            value={bioMedicalServices.stiScreening}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.stiScreening === \"1\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreeningResponse\"\r\n                            id=\"stiScreeningResponse\"\r\n                            value={bioMedicalServices.stiScreeningResponse}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Syndromic Management</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiSyndromicManagement\"\r\n                            id=\"stiSyndromicManagement\"\r\n                            value={bioMedicalServices.stiSyndromicManagement}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.stiSyndromicManagement === \"1\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label>Facility Referred to</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityReferredTo\"\r\n                            id=\"facilityReferredTo\"\r\n                            value={bioMedicalServices.facilityReferredTo}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Treatment/ Referral</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiTreatment\"\r\n                            id=\"stiTreatment\"\r\n                            value={bioMedicalServices.stiTreatment}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"1\"> Yes </option>\r\n                            <option value=\"0\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.stiTreatment === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to Sti Screening </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToStiScreening\"\r\n                            id=\"facilityRefferedToStiScreening\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToStiScreening\r\n                            }\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Screened for TB</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"screenedForTb\"\r\n                            id=\"screenedForTb\"\r\n                            value={bioMedicalServices.screenedForTb}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.screenedForTb === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToScreenedTo\"\r\n                            id=\"facilityRefferedToScreenedTo\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToScreenedTo\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided with TPT</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithTpt\"\r\n                            id=\"providedWithTpt\"\r\n                            value={bioMedicalServices.providedWithTpt}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Screened For Viral Heaptits</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"screenedForViralHepatits\"\r\n                            id=\"screenedForViralHepatits\"\r\n                            value={bioMedicalServices.screenedForViralHepatits}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"1\"> Yes </option>\r\n                            <option value=\"0\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.screenedForViralHepatits ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToScreenedForViralHepatits\"\r\n                            id=\"facilityRefferedToScreenedFclientVerificationObjorViralHepatits\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToScreenedForViralHepatits\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Viral Hepatits Screen Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"viralHepatitsScreenResult\"\r\n                            id=\"viralHepatitsScreenResult\"\r\n                            value={bioMedicalServices.viralHepatitsScreenResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Positive\"> Positive </option>\r\n                            <option value=\"Negative\"> Negative</option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.viralHepatitsScreenResult ===\r\n                        \"Positive\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                            id=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToViralHepatitsScreenResult\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Vaccination For Viral Hepatits</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"vaccinationForViralHepatits\"\r\n                            id=\"vaccinationForViralHepatits\"\r\n                            value={\r\n                              bioMedicalServices.vaccinationForViralHepatits\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.vaccinationForViralHepatits ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                            id=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToVaccinationForViralHepatits\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredFamilyPlanningServices\"\r\n                            id=\"offeredFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.offeredFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.offeredFamilyPlanningServices ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                            id=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToOfferedFamilyPlanningServices\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Refferred For Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForFamilyPlanningServices\"\r\n                            id=\"referredForFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.referredForFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.referredForFamilyPlanningServices ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                            id=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToReferredForFamilyPlanningServices\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided With Drug Rehab</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithDrugRehab\"\r\n                            id=\"providedWithDrugRehab\"\r\n                            value={bioMedicalServices.providedWithDrugRehab}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.providedWithDrugRehab === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                            id=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefeRredToProvidedWithDrugRehab\r\n                            }\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered MHPSS</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredMhpss\"\r\n                            id=\"offeredMhpss\"\r\n                            value={bioMedicalServices.offeredMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.offeredMhpss === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label>Facility Refferred to </Label> Type of MHpss\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToOfferedMhpss\"\r\n                            id=\"facilityRefferedToOfferedMhpss\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToOfferedMhpss\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            On Medical Assisted Therapy (MAT) for atleast\r\n                          </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"onMedicalAssistedTherapy\"\r\n                            id=\"onMedicalAssistedTherapy\"\r\n                            value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.onMedicalAssistedTherapy ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                            id=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToOnMedicalAssistedTherapy\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Recived Nalxone for Overdose Treatment</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"recivedNalxoneForOverdoseTreatment\"\r\n                            id=\"recivedNalxoneForOverdoseTreatment\"\r\n                            value={\r\n                              bioMedicalServices.recivedNalxoneForOverdoseTreatment\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row d-flex\">\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"blue\"\r\n                      style={{ width: \"106%\", height: \"45px\" }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}> Structural Services </h2>\r\n                    </LabelSui>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Provided or Reffered for Empowerment</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"providedOrRefferedForEmpowerment\"\r\n                          id=\"providedOrRefferedForEmpowerment\"\r\n                          value={\r\n                            structuralServices.recivedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"1\"> Yes </option>\r\n                          <option value=\"0\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                      {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                            id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment\r\n                            }\r\n                            onChange={handleInputChangestructuralServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Legal Aid Service Type</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"legalAidServiceType\"\r\n                          id=\"legalAidServiceType\"\r\n                          value={structuralServices.legalAidServiceType}\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"1\"> Yes </option>\r\n                          <option value=\"0\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.legalAidServiceType !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.legalAidServiceType}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                      {structuralServices.legalAidServiceType === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedLegalAidServiceType\"\r\n                            id=\"facilityRefferedLegalAidServiceType\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedLegalAidServiceType\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {/* END OF First DOSAGE */}\r\n              {saving ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                onClick={handleSubmit}\r\n                disabled={disabledAgeBaseOnAge}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={handleCancel}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport * as moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\n\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, selectedOptions, theme) {\r\n  return {\r\n    fontWeight:\r\n      selectedOptions.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nconst ViewUpdate = (props) => {\r\n  const theme = useTheme();\r\n  const patientObj = props.patientObj;\r\n  const location = useLocation();\r\n\r\n  const kpprevValues = location.state.patientObj;\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [htsCodeVal, setHtsCodeVal] = useState({});\r\n  const [prepCodeVal, setPrepCodeVal] = useState({});\r\n  let temp = { ...errors };\r\n  const classes = useStyles();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const [date, setDate] = useState({\r\n    dateServiceOffered: kpprevValues.dateServiceOffered,\r\n    service_provider: kpprevValues.serviceProvider,\r\n  });\r\n  const [htsServices, setHtsServices] = useState({\r\n    offeredHts: kpprevValues.htsServices.offered_hts,\r\n    acceptedHts: kpprevValues.htsServices.accepted_hts,\r\n    hivTestResult: kpprevValues.htsServices.hiv_test_result,\r\n    referredForArt: kpprevValues.htsServices.referred_for_art,\r\n  });\r\n  const [prepServices, setPrepServices] = useState({\r\n    offeredPrep: kpprevValues.prepServices.offered_prep,\r\n    acceptedPrep: kpprevValues.prepServices.accepted_prep,\r\n    referredForPrep: kpprevValues.prepServices.referred_for_prep,\r\n  });\r\n  const [commodityService, setCommodityService] = useState({\r\n    condomDispensed: kpprevValues.commodityServices.condoms_dispensed,\r\n    lubricantsDispensed: kpprevValues.commodityServices.lubricants_dispensed,\r\n    oralQuickDispensed: kpprevValues.commodityServices.hivst_kits_dispensed,\r\n    newNeedleDispensed: kpprevValues.commodityServices.new_needles_dispensed,\r\n    oldNeedleRetrived: kpprevValues.commodityServices.old_needles_dispensed,\r\n    nalxoneProvided: kpprevValues.commodityServices.naloxane_provided,\r\n    howmanycondomDispensed:\r\n      kpprevValues.commodityServices.how_many_condom_dispensed,\r\n    howmanylubricantsDispensed:\r\n      kpprevValues.commodityServices.how_many_lubricants_dispensed,\r\n    howmanyoralQuickDispensed:\r\n      kpprevValues.commodityServices.how_many_oral_quick_dispensed,\r\n    howmanynewNeedleDispensed:\r\n      kpprevValues.commodityServices.how_many_new_needle_dispensed,\r\n    howmanyoldNeedleRetrived:\r\n      kpprevValues.commodityServices.how_many_old_needle_retrived,\r\n    howmanynalxoneProvided:\r\n      kpprevValues.commodityServices.how_many_nalxone_provided,\r\n  });\r\n  const [hivEducationProvided, setHivEducationProvided] = useState({\r\n    iecMaterial: kpprevValues.hivEducationalServices?.iecMaterial,\r\n    interPersonalCommunication:\r\n      kpprevValues.hivEducationalServices?.interPersonalCommunication,\r\n    peerGroupCommunication:\r\n      kpprevValues.hivEducationalServices?.peerGroupCommunication,\r\n  });\r\n  const [bioMedicalServices, setbioMedicalServices] = useState({\r\n    stiScreening: kpprevValues.biomedicalServices?.sti_screening,\r\n    stiSyndromicManagement:\r\n      kpprevValues.biomedicalServices?.sti_syndromic_management,\r\n    stiTreatment: kpprevValues.biomedicalServices?.sti_treatment,\r\n    screenedForTb: kpprevValues.biomedicalServices?.screened_for_tb,\r\n    providedWithTpt: kpprevValues.biomedicalServices?.provided_with_tpt,\r\n    screenedForViralHepatits:\r\n      kpprevValues.biomedicalServices?.screened_for_viral_hepatitis,\r\n    viralHepatitsScreenResult:\r\n      kpprevValues.biomedicalServices?.viral_hepatitis_screen_result,\r\n    vaccinationForViralHepatits:\r\n      kpprevValues.biomedicalServices?.vaccination_for_viral_hepatitis,\r\n    offeredFamilyPlanningServices:\r\n      kpprevValues.biomedicalServices?.offered_family_planning_services,\r\n    referredForFamilyPlanningServices:\r\n      kpprevValues.biomedicalServices?.referred_for_family_planning_services,\r\n    providedWithDrugRehab:\r\n      kpprevValues.biomedicalServices?.provided_with_drug_rehab,\r\n    offeredMhpss: kpprevValues.biomedicalServices?.offered_mhpss,\r\n    onMedicalAssistedTherapy:\r\n      kpprevValues.biomedicalServices?.medical_assisted_therapy_for_six_months,\r\n    recivedNalxoneForOverdoseTreatment:\r\n      kpprevValues.biomedicalServices?.received_naloxone_for_overdose_treatment,\r\n    stiScreeningResult: kpprevValues.biomedicalServices?.sti_screening_result,\r\n    stifacilityReffered: kpprevValues.biomedicalServices?.sti_facility_referred,\r\n    tbfacilityReffered: kpprevValues.biomedicalServices?.tb_facility_reffered,\r\n    typeofMhpss: kpprevValues.biomedicalServices?.type_of_mhpss,\r\n    drugRehabfacilityReffered:\r\n      kpprevValues.biomedicalServices?.drug_rehab_facility_reffered,\r\n  });\r\n  const [structuralServices, setstructuralServices] = useState({\r\n    providedOrRefferedForEmpowerment:\r\n      kpprevValues.structuralServices.providedEmpowerment,\r\n    legalAidServiceType: kpprevValues.structuralServices.legalAidServices,\r\n    peerGroupCommunication: \"\",\r\n    typeempowermentprovided:\r\n      kpprevValues.structuralServices.type_empowerment_provided,\r\n    typelegalempowerment: kpprevValues.structuralServices.typelegalempowerment,\r\n    legalprogramreferred: kpprevValues.structuralServices.legalprogramreferred,\r\n  });\r\n  const [facilityRefferedToo, setFacilityRefferedToo] = useState({\r\n    facilityRefferedToStiScreening: \"\",\r\n    facilityRefferedToScreenedTo: \"\",\r\n    facilityRefferedToScreenedForViralHepatits: \"\",\r\n    facilityRefferedToViralHepatitsScreenResult: \"\",\r\n    facilityRefferedToVaccinationForViralHepatits: \"\",\r\n    facilityRefferedToOfferedFamilyPlanningServices: \"\",\r\n    facilityRefferedToReferredForFamilyPlanningServices: \"\",\r\n    facilityRefeRredToProvidedWithDrugRehab: \"\",\r\n    facilityRefferedToOfferedMhpss: \"\",\r\n    facilityRefferedToOnMedicalAssistedTherapy: \"\",\r\n    facilityRefferedToRecievedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setDate({ ...date, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeReferred = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setFacilityRefferedToo({\r\n      ...facilityRefferedToo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeHtsService = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHtsServices({ ...htsServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangePrepServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setPrepServices({ ...prepServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCommodityServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setCommodityService({\r\n      ...commodityService,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangeHivEducationProvided = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHivEducationProvided({\r\n      ...hivEducationProvided,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangebioMedicalServices = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"screenedForTb\" && e.target.value === \"yes\") {\r\n      bioMedicalServices.providedWithTpt = \"\";\r\n    } else if (e.target.name === \"screenedForTb\" && e.target.value === \"no\") {\r\n      bioMedicalServices.tbtreatmentrefferal = \"\";\r\n    }\r\n    setbioMedicalServices({\r\n      ...bioMedicalServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangestructuralServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setstructuralServices({\r\n      ...structuralServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //Validations of the forms\r\n  const validateAttempt = () => {\r\n    temp.dateServiceOffered = date.dateServiceOffered\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  /* Remove  function **/\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateAttempt()) {\r\n      const biomedicalServiceValue = {\r\n        medical_assisted_therapy_for_six_months:\r\n          bioMedicalServices.onMedicalAssistedTherapy,\r\n        offered_family_planning_services:\r\n          bioMedicalServices.offeredFamilyPlanningServices,\r\n        offered_mhpss: bioMedicalServices.offeredMhpss,\r\n        provided_with_drug_rehab: bioMedicalServices.providedWithDrugRehab,\r\n        provided_with_tpt: bioMedicalServices.providedWithTpt,\r\n        received_naloxone_for_overdose_treatment:\r\n          bioMedicalServices.recivedNalxoneForOverdoseTreatment,\r\n        referred_for_family_planning_services:\r\n          bioMedicalServices.referredForFamilyPlanningServices,\r\n        screened_for_tb: bioMedicalServices.screenedForTb,\r\n        screened_for_viral_hepatitis:\r\n          bioMedicalServices.screenedForViralHepatits,\r\n        sti_screening: bioMedicalServices.stiScreening,\r\n        sti_syndromic_management: bioMedicalServices.stiSyndromicManagement,\r\n        sti_treatment: bioMedicalServices.stiTreatment,\r\n        vaccination_for_viral_hepatitis:\r\n          bioMedicalServices.vaccinationForViralHepatits,\r\n        viral_hepatitis_screen_result:\r\n          bioMedicalServices.viralHepatitsScreenResult,\r\n        sti_screening_result: bioMedicalServices.stiScreeningResult,\r\n        sti_facility_referred: bioMedicalServices.stifacilityReffered,\r\n        tb_facility_reffered: bioMedicalServices.tbfacilityReffered,\r\n        type_of_mhpss: bioMedicalServices.typeofMhpss,\r\n        drug_rehab_facility_reffered:\r\n        bioMedicalServices.drugRehabfacilityReffered,\r\n        referred_facility_drug_rehab:\r\n        bioMedicalServices.refferedfacilitydrugrehab,\r\n      };\r\n\r\n      const commodityServicesValue = {\r\n        condoms_dispensed: commodityService.condomDispensed,\r\n        hivst_kits_dispensed: commodityService.oralQuickDispensed,\r\n        lubricants_dispensed: commodityService.lubricantsDispensed,\r\n        naloxane_provided: commodityService.nalxoneProvided,\r\n        new_needles_dispensed: commodityService.newNeedleDispensed,\r\n        old_needles_dispensed: commodityService.oldNeedleRetrived,\r\n        how_many_condom_dispensed: commodityService.howmanycondomDispensed,\r\n        how_many_lubricants_dispensed:\r\n          commodityService.howmanylubricantsDispensed,\r\n        how_many_oral_quick_dispensed:\r\n          commodityService.howmanyoralQuickDispensed,\r\n        how_many_new_needle_dispensed:\r\n          commodityService.howmanynewNeedleDispensed,\r\n        how_many_old_needle_retrived: commodityService.howmanyoldNeedleRetrived,\r\n        how_many_nalxone_provided: commodityService.howmanynalxoneProvided,\r\n      };\r\n\r\n      const htsServicesValue = {\r\n        accepted_hts: htsServices.acceptedHts,\r\n        hiv_test_result: htsServices.hivTestResult,\r\n        offered_hts: htsServices.offeredHts,\r\n        referred_for_art: htsServices.referredForArt,\r\n      };\r\n\r\n      const prepServicesValue = {\r\n        accepted_prep: prepServices.acceptedPrep,\r\n        offered_prep: prepServices.offeredPrep,\r\n        referred_for_prep: prepServices.referredForPrep,\r\n      };\r\n\r\n      const structuralServicesValue = {\r\n        legalAidServices: structuralServices.legalAidServiceType,\r\n        providedEmpowerment:\r\n          structuralServices.providedOrRefferedForEmpowerment,\r\n        type_empowerment_provided: structuralServices.typeempowermentprovided,\r\n        typelegalempowerment: structuralServices.typelegalempowerment,\r\n        legalprogramreferred: structuralServices.legalprogramreferred,\r\n      };\r\n\r\n      const data = {\r\n        htsCode: kpprevValues?.htsCode,\r\n        prepCode: kpprevValues?.prepCode,\r\n        prevCode: kpprevValues.prevCode,\r\n        patientId: kpprevValues.uuid,\r\n        serviceProvider: date.service_provider,\r\n        target_group: kpprevValues.target_group,\r\n        dateServiceOffered: date.dateServiceOffered,\r\n        htsServices: htsServicesValue,\r\n        prepServices: prepServicesValue,\r\n        entryPoint: {},\r\n        bioMedicalServices: biomedicalServiceValue,\r\n        structuralServices: structuralServicesValue,\r\n        commodityServices: commodityServicesValue,\r\n        hivEducationalServices: hivEducationProvided,\r\n      };\r\n      console.log(\"update\", data);\r\n      setSaving(true);\r\n      axios\r\n        .put(`${baseUrl}kpprev/${kpprevValues.id}`, data, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          setSaving(false);\r\n          toast.success(\"Record Updated successfully\");\r\n          setDate({\r\n            dateServiceOffered: \"\",\r\n            service_provider: \"\",\r\n          });\r\n          setHtsServices({\r\n            offeredHts: \"\",\r\n            acceptedHts: \"\",\r\n            hivTestResult: \"\",\r\n            referredForArt: \"\",\r\n          });\r\n          setPrepServices({\r\n            offeredPrep: \"\",\r\n            acceptedPrep: \"\",\r\n            referredForPrep: \"\",\r\n          });\r\n          setCommodityService({\r\n            condomDispensed: \"\",\r\n            lubricantsDispensed: \"\",\r\n            oralQuickDispensed: \"\",\r\n            newNeedleDispensed: \"\",\r\n            oldNeedleRetrived: \"\",\r\n            nalxoneProvided: \"\",\r\n            howmanycondomDispensed: \"\",\r\n            howmanylubricantsDispensed: \"\",\r\n            howmanyoralQuickDispensed: \"\",\r\n            howmanynewNeedleDispensed: \"\",\r\n            howmanyoldNeedleRetrived: \"\",\r\n            howmanynalxoneProvided: \"\",\r\n          });\r\n          setHivEducationProvided({\r\n            iecMaterial: \"\",\r\n            interPersonalCommunication: \"\",\r\n            peerGroupCommunication: \"\",\r\n          });\r\n          setbioMedicalServices({\r\n            stiScreening: \"\",\r\n            stiSyndromicManagement: \"\",\r\n            stiTreatment: \"\",\r\n            screenedForTb: \"\",\r\n            providedWithTpt: \"\",\r\n            screenedForViralHepatits: \"\",\r\n            viralHepatitsScreenResult: \"\",\r\n            vaccinationForViralHepatits: \"\",\r\n            offeredFamilyPlanningServices: \"\",\r\n            referredForFamilyPlanningServices: \"\",\r\n            providedWithDrugRehab: \"\",\r\n            offeredMhpss: \"\",\r\n            onMedicalAssistedTherapy: \"\",\r\n            recivedNalxoneForOverdoseTreatment: \"\",\r\n            stiScreeningResult: \"\",\r\n            stifacilityReffered: \"\",\r\n            tbfacilityReffered: \"\",\r\n            typeofMhpss: \"\",\r\n            drugRehabfacilityReffered: \"\",\r\n          });\r\n          setstructuralServices({\r\n            providedOrRefferedForEmpowerment: \"\",\r\n            legalAidServiceType: \"\",\r\n            peerGroupCommunication: \"\",\r\n            typeempowermentprovided: \"\",\r\n            typelegalempowerment: \"\",\r\n            legalprogramreferred: \"\",\r\n          });\r\n          history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <Row>\r\n            <Link to={\"/\"}>\r\n              <ButtonMui\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2 mr-2 mt-2\"\r\n                //startIcon={<FaUserPlus size=\"10\"/>}\r\n                startIcon={<TiArrowBack />}\r\n                style={{\r\n                  backgroundColor: \"rgb(153, 46, 98)\",\r\n                  color: \"#fff\",\r\n                  height: \"35px\",\r\n                }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n              </ButtonMui>\r\n            </Link>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <form>\r\n              {/* <div className=\"card d-flex\"> */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  KEY POPULATION PREVENTION FORM\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"row d-flex\">\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <br />\r\n                  <FormGroup>\r\n                    <Label>Date Of Service Provisions</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateServiceOffered\"\r\n                      value={date.dateServiceOffered}\r\n                      onChange={handleInputChange}\r\n                      id=\"dateServiceOffered\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    ></Input>\r\n                    {errors.dateServiceOffered !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateServiceOffered}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <br />\r\n                  <FormGroup>\r\n                    <Label>Hospital Number</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"hospitalNumber\"\r\n                      value={\r\n                        kpprevValues.htsCode !== null\r\n                          ? kpprevValues.htsCode\r\n                          : kpprevValues.prepCode\r\n                      }\r\n                      // onChange={handleInputChange}\r\n                      id=\"hospitalNumber\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      readonly\r\n                    ></Input>\r\n                    {errors.dateServiceOffered !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateServiceOffered}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <br />\r\n                  <FormGroup>\r\n                    <Label>Prevention Code</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"PrevCode\"\r\n                      value={kpprevValues.prevCode}\r\n                      // onChange={handleInputChange}\r\n                      id=\"PrevCode\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      readonly\r\n                    ></Input>\r\n                    {errors.dateServiceOffered !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateServiceOffered}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {/* HTS service */}\r\n\r\n                <LabelSui\r\n                  as=\"a\"\r\n                  color=\"teal\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"45px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                  ribbon\r\n                >\r\n                  <h2 style={{ color: \"#fff\" }}>HTS Services</h2>\r\n                </LabelSui>\r\n                <br />\r\n                <br />\r\n\r\n                <div className=\"form-group mb-10 col-xs-6 col-md-3 \">\r\n                  <FormGroup>\r\n                    <Label>Offered HTS</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"offeredHts\"\r\n                      id=\"offeredHts\"\r\n                      onChange={handleInputChangeHtsService}\r\n                      value={htsServices.offeredHts}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                  <FormGroup>\r\n                    <Label>Accepted HTS</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"acceptedHts\"\r\n                      id=\"acceptedHts\"\r\n                      onChange={handleInputChangeHtsService}\r\n                      value={htsServices.acceptedHts}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                {htsServices.acceptedHts === \"1\" ? (\r\n                  <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Hiv Test Result</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"hivTestResult\"\r\n                        id=\"hivTestResult\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.hivTestResult}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"positive\">Positive</option>\r\n                        <option value=\"negative\">Negative</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {htsServices.hivTestResult === \"positive\" ? (\r\n                  <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Reffered for ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"referredForArt\"\r\n                        id=\"referredForArt\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.referredForArt}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <LabelSui\r\n                  as=\"a\"\r\n                  color=\"teal\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"45px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                  ribbon\r\n                >\r\n                  <h2 style={{ color: \"#fff\" }}>PreP Services</h2>\r\n                </LabelSui>\r\n                <br />\r\n                <br />\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <FormGroup>\r\n                    <Label>Offered Prep</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"offeredPrep\"\r\n                      id=\"offeredPrep\"\r\n                      onChange={handleInputChangePrepServices}\r\n                      value={prepServices.offeredPrep}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <FormGroup>\r\n                    <Label>Accepted PreP</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"acceptedPrep\"\r\n                      id=\"acceptedPrep\"\r\n                      onChange={handleInputChangePrepServices}\r\n                      value={prepServices.acceptedPrep}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <FormGroup>\r\n                    <Label>Reffered for Prep</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"referredForPrep\"\r\n                      id=\"referredForPrep\"\r\n                      onChange={handleInputChangePrepServices}\r\n                      value={prepServices.referredForPrep}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Commodity Service</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Condom Dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"condomDispensed\"\r\n                        id=\"condomDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.condomDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.condomDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Condom Dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanycondomDispensed\"\r\n                          id=\"howmanycondomDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanycondomDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Lubricants Dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"lubricantsDispensed\"\r\n                        id=\"lubricantsDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.lubricantsDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.lubricantsDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>How Many Lubricants Dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanylubricantsDispensed\"\r\n                          id=\"howmanylubricantsDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanylubricantsDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Oral Quick/ HIVST dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"oralQuickDispensed\"\r\n                        id=\"oralQuickDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oralQuickDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.oralQuickDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Oral Quick/ HIVST dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanyoralQuickDispensed\"\r\n                          id=\"howmanyoralQuickDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanyoralQuickDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>New Needles/Syringe Dispesend</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"newNeedleDispensed\"\r\n                        id=\"newNeedleDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.newNeedleDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.newNeedleDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>How Many New Needles/Syringe Dispesend</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanynewNeedleDispensed\"\r\n                          id=\"howmanynewNeedleDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanynewNeedleDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Old Needles/Syringe Retrived</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"oldNeedleRetrived\"\r\n                        id=\"oldNeedleRetrived\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oldNeedleRetrived}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.oldNeedleRetrived === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>Old Needles/Syringe Retrived</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanyoldNeedleRetrived\"\r\n                          id=\"howmanyoldNeedleRetrived\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanyoldNeedleRetrived}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Nalxone Provided</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"nalxoneProvided\"\r\n                        id=\"nalxoneProvided\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.nalxoneProvided}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.nalxoneProvided === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Nalxone Provided</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanynalxoneProvided\"\r\n                          id=\"howmanynalxoneProvided\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanynalxoneProvided}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>HIV Educaton Provided</h2>\r\n                  </LabelSui>\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>IEC materials/pamphlets provided </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"iecMaterial\"\r\n                        id=\"iecMaterial\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.iecMaterial}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>InterPersonal Communication</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"interPersonalCommunication\"\r\n                        id=\"interPersonalCommunication\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.interPersonalCommunication}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>Peer Group Communication</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"peerGroupCommunication\"\r\n                        id=\"peerGroupCommunication\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.peerGroupCommunication}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              {/* <div className='card'> */}\r\n\r\n              <div className=\" row d-flex\">\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Biomedical Services</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Screening</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiScreening\"\r\n                          id=\"stiScreening\"\r\n                          value={bioMedicalServices.stiScreening}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"yes\">Yes</option>\r\n                          <option value=\"no\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.stiScreening === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Screening Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreeningResult\"\r\n                            id=\"stiScreeningResult\"\r\n                            value={bioMedicalServices.stiScreeningResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"positive\">Positive</option>\r\n                            <option value=\"negative\">Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.stiScreeningResult === \"positive\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Treatment/ Referral</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiTreatment\"\r\n                            id=\"stiTreatment\"\r\n                            value={bioMedicalServices.stiTreatment}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.stiTreatment === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"stifacilityReffered\"\r\n                          id=\"stifacilityReffered\"\r\n                          value={bioMedicalServices.stifacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Syndromic Management</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiSyndromicManagement\"\r\n                          id=\"stiSyndromicManagement\"\r\n                          value={bioMedicalServices.stiSyndromicManagement}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Screened for TB</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"screenedForTb\"\r\n                          id=\"screenedForTb\"\r\n                          value={bioMedicalServices.screenedForTb}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.screenedForTb === \"no\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided with TPT</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithTpt\"\r\n                            id=\"providedWithTpt\"\r\n                            value={bioMedicalServices.providedWithTpt}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.screenedForTb === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>TB treatment/referral </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"tbtreatmentrefferal\"\r\n                            id=\"tbtreatmentrefferal\"\r\n                            value={bioMedicalServices.tbtreatmentrefferal}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.tbtreatmentrefferal === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"tbfacilityReffered\"\r\n                          id=\"tbfacilityReffered\"\r\n                          value={bioMedicalServices.tbfacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Screened For Viral Heaptits</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"screenedForViralHepatits\"\r\n                          id=\"screenedForViralHepatits\"\r\n                          value={bioMedicalServices.screenedForViralHepatits}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.screenedForViralHepatits === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Viral Hepatits Screen Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"viralHepatitsScreenResult\"\r\n                            id=\"viralHepatitsScreenResult\"\r\n                            value={bioMedicalServices.viralHepatitsScreenResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"positive\"> Positive </option>\r\n                            <option value=\"negative\"> Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Vaccination For Viral Hepatits</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"vaccinationForViralHepatits\"\r\n                          id=\"vaccinationForViralHepatits\"\r\n                          value={bioMedicalServices.vaccinationForViralHepatits}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"Yes\"> Yes </option>\r\n                          <option value=\"No\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Offered Family Planning Services</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"offeredFamilyPlanningServices\"\r\n                          id=\"offeredFamilyPlanningServices\"\r\n                          value={\r\n                            bioMedicalServices.offeredFamilyPlanningServices\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.offeredFamilyPlanningServices ===\r\n                      \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Refferred For Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForFamilyPlanningServices\"\r\n                            id=\"referredForFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.referredForFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Provided With Drug Rehab</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"providedWithDrugRehab\"\r\n                          id=\"providedWithDrugRehab\"\r\n                          value={bioMedicalServices.providedWithDrugRehab}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered MHPSS</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredMhpss\"\r\n                            id=\"offeredMhpss\"\r\n                            value={bioMedicalServices.offeredMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.offeredMhpss === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Type of MHPSS Provided</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"typeofMhpss\"\r\n                            id=\"typeofMhpss\"\r\n                            value={bioMedicalServices.typeofMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Referred to facility for Drug Rehab </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"refferedfacilitydrugrehab\"\r\n                            id=\"refferedfacilitydrugrehab\"\r\n                            value={bioMedicalServices.refferedfacilitydrugrehab}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.refferedfacilitydrugrehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label>Drug Rehab Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"drugRehabfacilityReffered\"\r\n                          id=\"drugRehabfacilityReffered\"\r\n                          value={bioMedicalServices.drugRehabfacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          On Medical Assisted Therapy (MAT) for atleast 6 months\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"onMedicalAssistedTherapy\"\r\n                          id=\"onMedicalAssistedTherapy\"\r\n                          value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Recived Nalxone for Overdose Treatment</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"recivedNalxoneForOverdoseTreatment\"\r\n                          id=\"recivedNalxoneForOverdoseTreatment\"\r\n                          value={\r\n                            bioMedicalServices.recivedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}> Structural Services </h2>\r\n                  </LabelSui>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Provided or Reffered for Empowerment</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"providedOrRefferedForEmpowerment\"\r\n                        id=\"providedOrRefferedForEmpowerment\"\r\n                        value={\r\n                          structuralServices.providedOrRefferedForEmpowerment\r\n                        }\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                    {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                      \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Type of Empowerment Provided </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"typeempowermentprovided\"\r\n                          id=\"typeempowermentprovided\"\r\n                          value={structuralServices.typeempowermentprovided}\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Legal Aid Service Type</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"legalAidServiceType\"\r\n                        id=\"legalAidServiceType\"\r\n                        value={structuralServices.legalAidServiceType}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {structuralServices.legalAidServiceType === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Label> Type of Legal Empowerment Provided </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"typelegalempowerment\"\r\n                        id=\"typelegalempowerment\"\r\n                        value={structuralServices.typelegalempowerment}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {structuralServices.legalAidServiceType === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Label> Legal Program referred </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"legalprogramreferred\"\r\n                        id=\"legalprogramreferred\"\r\n                        value={structuralServices.legalprogramreferred}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}> Service Provider </h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Name of service provider</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"service_provider\"\r\n                        id=\"service_provider\"\r\n                        value={date.service_provider}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n\r\n                      {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                    </FormGroup>\r\n                    {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                      \"Yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                          id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                          value={\r\n                            facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* </div> */}\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                //hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n                onClick={handleSubmit}\r\n                style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n                //disabled={attemptList.length <= 0 && !saving ? true : false}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n              </MatButton>\r\n              {/* </div> */}\r\n            </form>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default ViewUpdate;\r\n","import React from \"react\";\r\nimport { MemoryRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Home from \"./main/webapp/jsx/components/Home\";\r\nimport PatientDetail from \"./main/webapp/jsx/components/Patient/PatientDetail\";\r\nimport RegisterPatientPage from \"./main/webapp/jsx/components/Patient/RegisterPatient\";\r\nimport EnrollPatientPage from \"./main/webapp/jsx/components/Patient/EnrollPatient\";\r\nimport UpdatePatientEnrollment from \"./main/webapp/jsx/components/Patient/UpdatePatientEnrollment\";\r\nimport KpPrev from \"./main/webapp/jsx/components/KpPrev\";\r\nimport ViewUpdate from \"./main/webapp/jsx/components/KpPrev/ViewUpdate\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route>\r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n          <Route path=\"/kp-prev\">\r\n            <KpPrev />\r\n          </Route>\r\n          <Route path=\"/view-kp-prev\">\r\n            <ViewUpdate />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}