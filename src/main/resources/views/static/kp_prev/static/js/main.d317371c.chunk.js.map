{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/utils/index.js","main/webapp/jsx/components/KpPrev/KpPrevEnrolled.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/KpPrev/KpPrevHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/KpPrev/index.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","main/webapp/jsx/components/KpPrev/ViewUpdate.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","calculate_age","dob","today","Date","birthDate","split","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","concat","baseUrl","pageSize","page","headers","Authorization","then","response","result","records","map","row","name","firstName","surname","hospital_number","gender","age","dateOfBirth","undefined","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","size","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","todayMonth","todayYear","todayDate","birthDateMonth","birthDateYear","birthdateDate","assumedAge","monthGap","dateGap","monthOld","KpPrevEnrolled","dateServiceOffered","htsCode","prepCode","prevCode","divStyle","borderRadius","Home","_useState","useState","_useState2","_slicedToArray","key","setKey","Fragment","className","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","classes","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","lastName","ButtonMui","startIcon","TiArrowBack","textTransform","phoneNumber","contactPoint","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","useStyles","navItemText","SubMenu","patientObjs","_useState3","_useState4","Observation","observation","filter","x","catch","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","getAge","Vaccination","errors","setErrors","temp","covidEffect","setCovidEffect","_useState5","_useState6","vaccine","setVaccine","_useState7","adverseEffect","batchNumber","doseNumber","patientId","vaccinationFacility","vaccineDate","_useState8","objValues","setObjValues","_useState9","_useState10","saving","setSaving","VACCINE","COVID_ADVERSE_EFFECT","handleInputChange","e","_defineProperty","target","dateParts","dateObject","moment","format","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","CardBody","_Fragment","FormGroup","Label","Input","onChange","InputGroup","max","MatButton","SaveIcon","preventDefault","Object","values","every","post","toast","loadPatients","disabled","CancelIcon","KpPrevHistory","vacinationList","setVaccinationtList","modal","setModal","_React$useState","React","_React$useState2","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","patients","_patients","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","uuid","stop","_row$htsServices","_row$prepServices","_row$commodityService","_row$hivEducationalSe","_row$biomedicalServic","_row$structuralServic","dateOfServicesProvided","preventioncode","htsServices","offered_hts","prepServices","offered_prep","commodityServices","condoms_dispensed","hivEducationalServices","iecMaterial","biomedicalServices","sti_screening","structuralServices","legalAidServices","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","setRecentActivities","setLoadingRecent","RecentActivities","fontFamily","border","marginLeft","lineHeight","Biometrics","InclusionCriteria","useHistory","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","for","datatype","required","responses","_ref3","_ref4","entries","_ref","_ref2","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","history","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","_useState11","_useState12","vitalSignModal","setVitalSignModal","_useState13","_useState14","reInfectionModal","setReinfectionModal","_useState15","_useState16","signsSymptomsModal","setSignsSymptomsModal","_useState17","_useState18","medicationModal","setMedicationModal","_useState19","_useState20","chronicMedicationModal","setChronicMedicationModal","_useState21","_useState22","supportiveCareModal","setSupportiveCareModal","_useState23","_useState24","vaccinationHistory","setVaccinationHistory","_useState25","_useState26","inclusionHistory","setInclusionHistory","_useState27","_useState28","demograhicHistory","setDemographicHistory","_useState29","_useState30","vitalHistory","setVitalHistory","_useState31","_useState32","comobitieHistory","setComobitieHistory","_useState33","_useState34","reinfectionHistory","setReinfectionHistory","_useState35","_useState36","signsSymptomsHistory","setSignsSymptomsHistory","_useState37","_useState38","chronicMedicationHistory","setChronicMedicationHistory","_useState39","_useState40","medicationHistory","setMedicationHistory","_useState41","_useState42","supportiveCarenHistory","setSupportiveCareHistory","CardContent","Grid","padded","Column","Segment","raised","as","ribbon","Icon","cursor","List","divided","Content","floated","Demographic","VitalSign","Comorbitie","SignsSymptoms","flexGrow","KpPrev","useTheme","_htsCodeVal$htsClient3","_prepCodeVal$prepDtoL2","htsCodeVal","setHtsCodeVal","prepCodeVal","setPrepCodeVal","kpprevFormStatus","clientCode","hivStatus","hivPositive","htsClientDtoList","uniqueId","prepStatus","prepDtoList","service_provider","date","setDate","offeredHts","acceptedHts","hivTestResult","referredForArt","setHtsServices","offeredPrep","acceptedPrep","referredForPrep","setPrepServices","condomDispensed","lubricantsDispensed","oralQuickDispensed","newNeedleDispensed","oldNeedleRetrived","nalxoneProvided","howmanycondomDispensed","howmanylubricantsDispensed","howmanyoralQuickDispensed","howmanynewNeedleDispensed","howmanyoldNeedleRetrived","howmanynalxoneProvided","commodityService","setCommodityService","interPersonalCommunication","peerGroupCommunication","hivEducationProvided","setHivEducationProvided","stiScreening","stiSyndromicManagement","stiTreatment","screenedForTb","providedWithTpt","screenedForViralHepatits","viralHepatitsScreenResult","vaccinationForViralHepatits","offeredFamilyPlanningServices","referredForFamilyPlanningServices","providedWithDrugRehab","offeredMhpss","onMedicalAssistedTherapy","recivedNalxoneForOverdoseTreatment","stiScreeningResult","stifacilityReffered","tbfacilityReffered","typeofMhpss","drugRehabfacilityReffered","refferedfacilitydrugrehab","bioMedicalServices","setbioMedicalServices","providedOrRefferedForEmpowerment","legalAidServiceType","typeempowermentprovided","typelegalempowerment","legalprogramreferred","setstructuralServices","facilityRefferedToStiScreening","facilityRefferedToScreenedTo","facilityRefferedToScreenedForViralHepatits","facilityRefferedToViralHepatitsScreenResult","facilityRefferedToVaccinationForViralHepatits","facilityRefferedToOfferedFamilyPlanningServices","facilityRefferedToReferredForFamilyPlanningServices","facilityRefeRredToProvidedWithDrugRehab","facilityRefferedToOfferedMhpss","facilityRefferedToOnMedicalAssistedTherapy","facilityRefferedToRecievedNalxoneForOverdoseTreatment","facilityRefferedToo","handleInputChangeHtsService","handleInputChangePrepServices","handleInputChangeCommodityServices","handleInputChangeHivEducationProvided","handleInputChangebioMedicalServices","tbtreatmentrefferal","handleInputChangestructuralServices","length","LabelSui","Spinner","_htsCodeVal$htsClient","_htsCodeVal$htsClient2","_prepCodeVal$prepDtoL","biomedicalServiceValue","medical_assisted_therapy_for_six_months","offered_family_planning_services","offered_mhpss","provided_with_drug_rehab","provided_with_tpt","received_naloxone_for_overdose_treatment","referred_for_family_planning_services","screened_for_tb","screened_for_viral_hepatitis","sti_syndromic_management","sti_treatment","vaccination_for_viral_hepatitis","viral_hepatitis_screen_result","sti_screening_result","sti_facility_referred","tb_facility_reffered","type_of_mhpss","drug_rehab_facility_reffered","referred_facility_drug_rehab","commodityServicesValue","hivst_kits_dispensed","lubricants_dispensed","naloxane_provided","new_needles_dispensed","old_needles_dispensed","how_many_condom_dispensed","how_many_lubricants_dispensed","how_many_oral_quick_dispensed","how_many_new_needle_dispensed","how_many_old_needle_retrived","how_many_nalxone_provided","htsServicesValue","accepted_hts","hiv_test_result","referred_for_art","prepServicesValue","accepted_prep","referred_for_prep","structuralServicesValue","providedEmpowerment","type_empowerment_provided","randomString","characters","i","charAt","Math","floor","random","generateRandomString","serviceProvider","target_group","targetGroup","entryPoint","console","log","push","actionType","art","setArt","activeTab","prepId","PatientCardDetail","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","_useState43","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","middleName","relatives","setRelatives","contacts","setContacts","disabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","person","vaccinationEnrollment","patientDTO","userDetail","user","useLocation","showContactCard","setShowContactCard","knownMedicalCondition","medicalCondition","occupation","vaccineId","visitDate","_useState44","_useState45","hospitalNumStatus","setHospitalNumStatus","_useState46","_useState47","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","GetCountry","setStateByCountryId","useCallback","sent","t0","_callee2","_context2","_callee3","_context3","_callee4","_context4","_callee5","_context5","sort","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","_ref6","_callee6","hosiptalNumber","_context6","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","_ref7","_callee7","newConatctsInfo","patientForm","_context7","contactInfo","fullName","landmark","organisationUnitId","postalCode","assignerId","htsService","position","POSITION","BOTTOM_CENTER","subErrors","_x","_useState48","_useState49","_useState50","_useState51","_useState52","refferedForPrep","_useState53","_useState54","_useState55","_useState56","_useState57","_useState58","_useState59","_useState60","_useState61","_useState62","_useState63","setFacilityRefferedToo","handleInputChangeReferred","replace","slice","handleInputChangePhoneNumber","inputName","NumberValue","checkNumberLimit","onClickContactCard","onClickRelativeCard","ToastContainer","autoClose","hideProgressBar","margingRight","min","index","defaultChecked","ageNumber","currentDate","setMonth","dobNew","toISOString","abs","maritalStatusOption","occupationOption","educationOption","FaPlus","FaAngleDown","getCountryId","item","relative","splice","handleEditRelative","FontAwesomeIcon","_toConsumableArray","handleDeleteRelative","checkPhoneNumber","validateRelatives","stiScreeningResponse","facilityReferredTo","facilityRefferedLegalAidServiceType","substr","setDisabledAgeBaseOnAge","settopLevelUnitCountryOptions","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","personId","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","setSourceReferral","setHivStatus","setEnrollSetting","setTbStatus","setKP","setPregnancyStatus","_useState64","setOvcEnrolled","_useState65","_useState66","getSex","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","identifiers","altphone","country","maritalStatus","employmentStatus","education","getStateId","patientAge","sex","alert","getSexId","validate","dateOfRegistration1","checkPhoneNumberBasic","_ref8","_callee8","_context8","TOP_RIGHT","_x2","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","AddIcon","code","maxWidth","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","enrollment","getCharacters","_ref9","_callee9","_context9","hivEnrollment","put","handleCheckBox","checked","htmlFor","ViewUpdate","_kpprevValues$hivEduc","_kpprevValues$hivEduc2","_kpprevValues$hivEduc3","_kpprevValues$biomedi","_kpprevValues$biomedi2","_kpprevValues$biomedi3","_kpprevValues$biomedi4","_kpprevValues$biomedi5","_kpprevValues$biomedi6","_kpprevValues$biomedi7","_kpprevValues$biomedi8","_kpprevValues$biomedi9","_kpprevValues$biomedi10","_kpprevValues$biomedi11","_kpprevValues$biomedi12","_kpprevValues$biomedi13","_kpprevValues$biomedi14","_kpprevValues$biomedi15","_kpprevValues$biomedi16","_kpprevValues$biomedi17","_kpprevValues$biomedi18","_kpprevValues$biomedi19","_kpprevValues$biomedi20","_kpprevValues$biomedi21","kpprevValues","tb_treatment_refferal","readonly","App","Router","Switch","Route","path","PatientDetail","RegisterPatientPage","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.d317371c.chunk.js","sourcesContent":["export const token = new URLSearchParams(window.location.search).get(\"jwt\");\r\nexport const url = \"/api/v1/\";\r\n\r\n//export const url = \"http://localhost:8383/api/v1/\";\r\n//export const token =\r\n//\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzEwMjA5NDYxfQ.3QXY2pIGPYumo9yYpQr8xvuwZuS04rMQ6RIA2qk8xZTeIYqkr8QHcqMG9CX1yTkL4kXz83cT9uqfKt_dj3DbFw\";\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { TiArrowForward } from \"react-icons/ti\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Patients = (props) => {\r\n  // const calculate_age = (dob) => {\r\n  //     const today = new Date();\r\n  //     //const dateParts = dob.split(\"-\");\r\n  //     const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n  //     let age_now = today.getFullYear() - birthDate.getFullYear();\r\n  //     const m = today.getMonth() - birthDate.getMonth();\r\n\r\n  //     // if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n  //     //     age_now--;\r\n  //     // }\r\n\r\n  //     // if (age_now === 0) {\r\n  //     //     return m + \" month(s)\";\r\n  //     // }\r\n  //     return age_now + \" year(s)\";\r\n  // };\r\n\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  const getHospitalNumber = (identifier) => {\r\n    const hospitalNumber = identifier.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          //{ title: \"ART Status\", field: \"v_status\", filtering: false },\r\n          //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        //isLoading={loading}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}patient?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data:\r\n                    result.data.records &&\r\n                    result.data.records !== null &&\r\n                    result.data.records.map((row) => ({\r\n                      name: row.firstName + \" \" + row.surname,\r\n                      hospital_number: getHospitalNumber(row.identifier),\r\n\r\n                      gender: row.gender !== null ? row.gender.display : \"\",\r\n                      age:\r\n                        row.dateOfBirth === 0 ||\r\n                        row.dateOfBirth === undefined ||\r\n                        row.dateOfBirth === null ||\r\n                        row.dateOfBirth === \"\"\r\n                          ? 0\r\n                          : calculate_age(row.dateOfBirth),\r\n\r\n                      //count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n\r\n                      actions: (\r\n                        <div>\r\n                          <Link\r\n                            to={{\r\n                              pathname: \"/patient-history\",\r\n                              state: { patientObj: row },\r\n                            }}\r\n                          >\r\n                            <ButtonGroup\r\n                              variant=\"contained\"\r\n                              aria-label=\"split button\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(153, 46, 98)\",\r\n                                height: \"30px\",\r\n                                width: \"215px\",\r\n                              }}\r\n                              size=\"large\"\r\n                            >\r\n                              <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                aria-label=\"select merge strategy\"\r\n                                aria-haspopup=\"menu\"\r\n                                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                              >\r\n                                <MdDashboard />\r\n                              </Button>\r\n                              <Button\r\n                                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                              >\r\n                                <span\r\n                                  style={{\r\n                                    fontSize: \"12px\",\r\n                                    color: \"#fff\",\r\n                                    fontWeight: \"bolder\",\r\n                                  }}\r\n                                >\r\n                                  {\" \"}\r\n                                  Patient Dashboard{\" \"}\r\n                                </span>\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                          </Link>\r\n                        </div>\r\n                      ),\r\n                    })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","export const calculate_age = (dob) => {\r\n  if (dob !== null && dob != \"\") {\r\n    //Check if the DOB is not null or empty\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob);\r\n\r\n    // get the day, month and year of today\r\n    let todayMonth = today.getMonth();\r\n    let todayYear = today.getFullYear();\r\n    let todayDate = today.getDate();\r\n\r\n    // get the day, month and year from date of birth\r\n    let birthDateMonth = birthDate.getMonth();\r\n    let birthDateYear = birthDate.getFullYear();\r\n    let birthdateDate = birthDate.getDate();\r\n\r\n    // substract birthdate year from today year  ie todayYear - birthdateYear which  will give  \"AssumedAge\" is the age  we assume the patient will clock this year\r\n\r\n    let assumedAge = todayYear - birthDateYear;\r\n    if (assumedAge > 0) {\r\n      //Checking the month to confirm if the age has been cloocked\r\n\r\n      let monthGap = todayMonth - birthDateMonth;\r\n\r\n      // If 'monthGap'> 0, the age has been clocked, 'monthGap'< 0, the age has not been clocked, 'monthGap'= 0, we are in the month then check date to confirm clocked age\r\n\r\n      if (monthGap > 0) {\r\n        return assumedAge + \" year(s)\";\r\n      } else if (monthGap < 0) {\r\n        let confirmedAge = assumedAge - 1;\r\n        return confirmedAge + \" year(s)\";\r\n      } else if (monthGap === 0) {\r\n        let dateGap = todayDate - birthdateDate;\r\n\r\n        if (dateGap > 0) {\r\n          return assumedAge + \" year(s)\";\r\n        } else if (dateGap < 0) {\r\n          let confirmedAge = assumedAge - 1;\r\n          return confirmedAge + \" year(s)\";\r\n        }\r\n      }\r\n    } else {\r\n      let monthGap = todayMonth - birthDateMonth;\r\n      let dateGap = todayDate - birthdateDate;\r\n\r\n      let monthOld = monthGap > 0 ? monthGap : 0;\r\n      let DayOld = dateGap > 0 ? dateGap : 0;\r\n\r\n      let result = monthOld ? monthOld + \"month(s)\" : DayOld + \"day(s)\";\r\n      return result;\r\n    }\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { calculate_age } from \"../../../utils\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst KpPrevEnrolled = (props) => {\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Date Service Offered\",\r\n            field: \"dateServiceOffered\",\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n          { title: \"Prevention Code\", field: \"prevCode\", filtering: false },\r\n          // { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n          // { title: \"Kp Prev Status\", field: \"count\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        //isLoading={loading}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}kpprev?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data:\r\n                    result.data.records &&\r\n                    result.data.records !== null &&\r\n                    result.data.records.map((row) => ({\r\n                      dateServiceOffered: row.dateServiceOffered,\r\n                      hospital_number:\r\n                        row.htsCode !== null ? row.htsCode : row.prepCode,\r\n                      prevCode: row.prevCode,\r\n                      age: \"\",\r\n\r\n                      actions: (\r\n                        <div>\r\n                          <Link\r\n                            to={{\r\n                              pathname: \"/view-kp-prev\",\r\n                              state: { patientObj: row },\r\n                            }}\r\n                          >\r\n                            <ButtonGroup\r\n                              variant=\"contained\"\r\n                              aria-label=\"split button\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(153, 46, 98)\",\r\n                                height: \"30px\",\r\n                                width: \"215px\",\r\n                              }}\r\n                              size=\"large\"\r\n                            >\r\n                              <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                aria-label=\"select merge strategy\"\r\n                                aria-haspopup=\"menu\"\r\n                                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                              >\r\n                                <MdDashboard />\r\n                              </Button>\r\n                              <Button\r\n                                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                              >\r\n                                <span\r\n                                  style={{\r\n                                    fontSize: \"12px\",\r\n                                    color: \"#fff\",\r\n                                    fontWeight: \"bolder\",\r\n                                  }}\r\n                                >\r\n                                  View KP Prev\r\n                                </span>\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                          </Link>\r\n                        </div>\r\n                      ),\r\n                    })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KpPrevEnrolled;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport PatientList from \"./Patient/PatientList\";\r\n//import PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport KpPrevEnrolled from \"./KpPrev/KpPrevEnrolled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState(\"home\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>KP-PREV</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      {/* <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link> */}\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n\r\n                  <Tab eventKey=\"kpprev\" title=\"KP_PrEV Patients\">\r\n                    <KpPrevEnrolled />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { calculate_age } from \"../../../utils\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CaptureBiometric from \"./CaptureBiometric\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj;\r\n\r\n  //console.log(\"in\", patientObj);\r\n\r\n  useEffect(() => {}, [props.patientObj]);\r\n\r\n  const get_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  // const calculate_age = dob => {\r\n  //   var today = new Date();\r\n  //   var dateParts = dob.split(\"-\");\r\n  //   var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n  //   var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n  //   var age_now = today.getFullYear() - birthDate.getFullYear();\r\n  //   var m = today.getMonth() - birthDate.getMonth();\r\n  //       if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n  //               age_now--;\r\n  //           }\r\n  //       if (age_now === 0) {\r\n  //               return m + \" month(s)\";\r\n  //           }\r\n  //           return age_now + \" year(s)\";\r\n  // };\r\n  const getPhoneNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers.contactPoint.find(\r\n      (obj) => obj.type === \"phone\"\r\n    );\r\n    return phoneNumber ? phoneNumber.value : \"\";\r\n  };\r\n  const getAddress = (identifier) => {\r\n    const identifiers = identifier;\r\n    const address = identifiers.address.find((obj) => obj.city);\r\n    const houseAddress =\r\n      address && address.line[0] !== null ? address.line[0] : \"\";\r\n    const landMark =\r\n      address && address.city && address.city !== null ? address.city : \"\";\r\n    return address ? houseAddress + \" \" + landMark : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    {patientObj.firstName + \" \" + patientObj.lastName}\r\n                  </b>\r\n                  <Link to={\"/\"}>\r\n                    <ButtonMui\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-end ms-2 mr-2 mt-2\"\r\n                      //startIcon={<FaUserPlus size=\"10\"/>}\r\n                      startIcon={<TiArrowBack />}\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                        color: \"#fff\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                    </ButtonMui>\r\n                  </Link>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Patient ID :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>{patientObj.id}</b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>{patientObj.dateOfBirth}</b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {calculate_age(patientObj.dateOfBirth)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Gender :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj.gender !== null\r\n                        ? patientObj.gender.display\r\n                        : \"\"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getPhoneNumber(patientObj.contactPoint)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getAddress(patientObj.address)}{\" \"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    // const loadVaccination = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    // }\r\n    // const loadIcu = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'icu'})\r\n    // }\r\n    // const loadAddmission = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    // }\r\n    // const onClickDischarge = (row) =>{        \r\n    //     props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    // }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadKpPrev = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:\"kp-prev\"})\r\n    }\r\n    // const loadPatientHistory = ()=>{\r\n    //     //setActiveItem('history')\r\n    //     props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    // }\r\n\r\n\r\n    return ( \r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>      \r\n                <Menu.Item onClick={() => loadKpPrev()} > Kp-Prev</Menu.Item>               \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from \"semantic-ui-react\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Vaccination from \"./../Vaccination/AddViccination\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n  const [vacinationList, setVaccinationtList] = useState([]);\r\n  const patientObj = props && props.patientObj ? props.patientObj : [];\r\n  const [modal, setModal] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [openDeleteModal, setOpenDeleteModal] = React.useState(false);\r\n  const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n  const [record, setRecord] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients Vaccinations\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setVaccinationtList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const loadVaccinationModal = (row) => {\r\n    setModal(!modal);\r\n  };\r\n  const LoadEditModal = (row) => {\r\n    setRecord(row);\r\n    toggle();\r\n  };\r\n  const LoadDeleteModal = (row) => {\r\n    toggleDeleteModal();\r\n    setRecord(row);\r\n  };\r\n\r\n  const dummyData = [\r\n    {\r\n      dateOfServicesProvided: \"2023-10-15\", // Dummy date for the first column\r\n      action: \"Sample Action\", // Dummy data for the second column\r\n    },\r\n    {\r\n      dateOfServicesProvided: \"2023-11-20\", // Another dummy date\r\n      action: \"Another Action\", // Another dummy action\r\n    },\r\n    // Add more objects for additional rows as needed\r\n  ];\r\n  const handleAction = (rowData) => {\r\n    // Define your action handling logic here\r\n    console.log(\"Action clicked for:\", rowData);\r\n  };\r\n\r\n  const LoadVie43wPage = (row, action) => {\r\n    // Placeholder function\r\n    console.log(\"View page loaded for:\", row);\r\n  };\r\n\r\n  //console.log(record)\r\n  const LoadDeletePage = () => {\r\n    setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}covid/vaccinations/${record.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        patients();\r\n        toggleDeleteModal();\r\n        setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <MaterialTable\r\n            icons={tableIcons}\r\n            title=\"Patient Historys \"\r\n            columns={[\r\n              {\r\n                title: \"Date Of Services Provided\",\r\n                field: \"dateOfServicesProvided\",\r\n              },\r\n              {\r\n                title: \"Action\",\r\n                field: \"action\",\r\n                filtering: false,\r\n                render: (rowData) => (\r\n                  <div>\r\n                    <Menu.Menu position=\"right\">\r\n                      <Menu.Item>\r\n                        <Button\r\n                          style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                          primary\r\n                        >\r\n                          <Dropdown\r\n                            item\r\n                            text=\"Action\"\r\n                            style={{ color: \"white\" }}\r\n                          >\r\n                            <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                              <Dropdown.Item\r\n                              //onClick={() => LoadViewPage(rowData, \"view\")}\r\n                              >\r\n                                {\" \"}\r\n                                <Icon name=\"eye\" />\r\n                                View{\" \"}\r\n                              </Dropdown.Item>\r\n\r\n                              <Dropdown.Item\r\n                              // onClick={() => LoadViewPage(rowData, \"update\")}\r\n                              >\r\n                                <Icon name=\"edit\" />\r\n                                Edit\r\n                              </Dropdown.Item>\r\n\r\n                              <Dropdown.Item\r\n                              //onClick={() => LoadModal(rowData, \"delete\")}\r\n                              >\r\n                                {\" \"}\r\n                                <Icon name=\"trash\" /> Delete\r\n                              </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                          </Dropdown>\r\n                        </Button>\r\n                      </Menu.Item>\r\n                    </Menu.Menu>\r\n                  </div>\r\n                ),\r\n              },\r\n\r\n              // { title: \"Dose Number\", field: \"doseNumber\", filtering: false },\r\n              // { title: \"Location\", field: \"location\", filtering: false },\r\n              // { title: \"Batch Number\", field: \"batchNumber\", filtering: false },\r\n              // { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n              // { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false },\r\n              // { title: \"Actions\", field: \"actions\", filtering: false },\r\n            ]}\r\n            //   data={ vacinationList.map((row) => ({\r\n\r\n            //         //dateOfServicesProvided: row\r\n            //        // vaccine: row.vaccineName,\r\n            //         //vaccineDate: row.vaccineDate,\r\n            //         //batchNumber: row.batchNumber,\r\n            //         //doseNumber: row.doseNumber,\r\n            //        // location: row.location,\r\n            //         //vaccinationFacility: row.vaccinationFacility,\r\n            //         //adverseEffect: row.adverseEffect,\r\n            //         actions:\r\n\r\n            //         <div>\r\n            //             <Menu.Menu position='right'  >\r\n            //             <Menu.Item >\r\n            //                 <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n            //                 <Dropdown item text='Action'>\r\n\r\n            //                 <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n            //                     <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n            //                     <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n            //                 </Dropdown.Menu>\r\n            //             </Dropdown>\r\n            //                 </Button>\r\n            //             </Menu.Item>\r\n            //             </Menu.Menu>\r\n            //         </div>\r\n\r\n            //       }))}\r\n            data={dummyData}\r\n            //columns={columns}\r\n\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n              },\r\n              searchFieldStyle: {\r\n                width: \"200%\",\r\n                margingLeft: \"250px\",\r\n              },\r\n              filtering: false,\r\n              exportButton: false,\r\n              searchFieldAlignment: \"left\",\r\n              pageSizeOptions: [10, 20, 100],\r\n              pageSize: 10,\r\n              debounceInterval: 400,\r\n            }}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <Vaccination\r\n        toggle={toggle}\r\n        showModal={modal}\r\n        patientObj={props.patientObj}\r\n        loadPatients={patients}\r\n        records={record}\r\n      />\r\n      <Modal\r\n        show={openDeleteModal}\r\n        toggle={toggleDeleteModal}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete -{\" \"}\r\n            <b>{record && record.batchNumber}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? \"Yes\" : \"Deleting...\"}\r\n          </Button>\r\n          <Button\r\n            onClick={toggleDeleteModal}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientVaccinationHistory;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from \"semantic-ui-react\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Vaccination from \"./../Vaccination/AddViccination\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst KpPrevHistory = (props) => {\r\n  const [vacinationList, setVaccinationtList] = useState([]);\r\n  const patientObj = props && props.patientObj ? props.patientObj : [];\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [openDeleteModal, setOpenDeleteModal] = React.useState(false);\r\n  const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n  const [record, setRecord] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients Vaccinations\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}kpprev/${patientObj.uuid}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setVaccinationtList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const loadVaccinationModal = (row) => {\r\n    setModal(!modal);\r\n  };\r\n  const LoadEditModal = (row) => {\r\n    setRecord(row);\r\n    toggle();\r\n  };\r\n  const LoadDeleteModal = (row) => {\r\n    toggleDeleteModal();\r\n    setRecord(row);\r\n  };\r\n\r\n  const dummyData = [\r\n    {\r\n      dateOfServicesProvided: \"2023-10-15\", // Dummy date for the first column\r\n      action: \"Sample Action\", // Dummy data for the second column\r\n    },\r\n    {\r\n      dateOfServicesProvided: \"2023-11-20\", // Another dummy date\r\n      action: \"Another Action\", // Another dummy action\r\n    },\r\n    // Add more objects for additional rows as needed\r\n  ];\r\n  const handleAction = (rowData) => {\r\n    // Define your action handling logic here\r\n    console.log(\"Action clicked for:\", rowData);\r\n  };\r\n\r\n  const LoadVie43wPage = (row, action) => {\r\n    // Placeholder function\r\n    console.log(\"View page loaded for:\", row);\r\n  };\r\n\r\n  //console.log(record)\r\n  const LoadDeletePage = () => {\r\n    setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}kpprev/${record.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        patients();\r\n        toggleDeleteModal();\r\n        setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <MaterialTable\r\n            icons={tableIcons}\r\n            title=\"Patient Kp-Prev History \"\r\n            columns={[\r\n              {\r\n                title: \"Date Of Services Provided\",\r\n                field: \"dateOfServicesProvided\",\r\n              },\r\n              {\r\n                title: \"Prevention Code\",\r\n                field: \"preventioncode\",\r\n                filtering: false,\r\n              },\r\n              { title: \"HTS Services\", field: \"htsServices\", filtering: false },\r\n              {\r\n                title: \"Prep Services\",\r\n                field: \"prepServices\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"Commodity Services\",\r\n                field: \"commodityServices\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"HIV Educational Services\",\r\n                field: \"hivEducationalServices\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"Biomedical Services\",\r\n                field: \"biomedicalServices\",\r\n                filtering: false,\r\n              },\r\n              {\r\n                title: \"Structural Services\",\r\n                field: \"structuralServices\",\r\n                filtering: false,\r\n              },\r\n              // {\r\n              //   title: \"Action\",\r\n              //   field: \"action\",\r\n              //   filtering: false,\r\n              // },\r\n\r\n              // { title: \"Actions\", field: \"biomedicalServices\", filtering: false },\r\n            ]}\r\n            data={vacinationList.map((row) => ({\r\n              dateOfServicesProvided: row.dateServiceOffered,\r\n              preventioncode: row.prevCode,\r\n              htsServices: row.htsServices?.offered_hts !== \"\" ? \"✅\" : \"❌\",\r\n              prepServices: row.prepServices?.offered_prep !== \"\" ? \"✅\" : \"❌\",\r\n              commodityServices:\r\n                row.commodityServices?.condoms_dispensed !== \"\" ? \"✅\" : \"❌\",\r\n              hivEducationalServices:\r\n                row.hivEducationalServices?.iecMaterial !== \"\" ? \"✅\" : \"❌\",\r\n              biomedicalServices:\r\n                row.biomedicalServices?.sti_screening !== \"\" ? \"✅\" : \"❌\",\r\n              structuralServices:\r\n                row.structuralServices?.legalAidServices !== \"\" ? \"✅\" : \"❌\",\r\n              // action: (\r\n              //   <div>\r\n              //     <Menu.Menu position=\"right\">\r\n              //       <Menu.Item>\r\n              //         <Button\r\n              //           style={{\r\n              //             backgroundColor: \"rgb(153,46,98)\",\r\n              //             color: \"#fff\",\r\n              //           }}\r\n              //           primary\r\n              //         >\r\n              //           <Dropdown item text=\"Action\">\r\n              //             <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n              //               <Dropdown.Item onClick={() => LoadEditModal(row)}>\r\n              //                 <IconMenu name=\"edit\" />\r\n              //                 Edit\r\n              //               </Dropdown.Item>\r\n              //               <Dropdown.Item onClick={() => LoadDeleteModal(row)}>\r\n              //                 {\" \"}\r\n              //                 <IconMenu name=\"trash\" /> Delete\r\n              //               </Dropdown.Item>\r\n              //             </Dropdown.Menu>\r\n              //           </Dropdown>\r\n              //         </Button>\r\n              //       </Menu.Item>\r\n              //     </Menu.Menu>\r\n              //   </div>\r\n              // ),\r\n            }))}\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n              },\r\n              searchFieldStyle: {\r\n                width: \"200%\",\r\n                margingLeft: \"250px\",\r\n              },\r\n              filtering: false,\r\n              exportButton: false,\r\n              searchFieldAlignment: \"left\",\r\n              pageSizeOptions: [10, 20, 100],\r\n              pageSize: 10,\r\n              debounceInterval: 400,\r\n            }}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <Vaccination\r\n        toggle={toggle}\r\n        showModal={modal}\r\n        patientObj={props.patientObj}\r\n        loadPatients={patients}\r\n        records={record}\r\n      />\r\n      <Modal\r\n        show={openDeleteModal}\r\n        toggle={toggleDeleteModal}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete -{\" \"}\r\n            <b>{record && record.batchNumber}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? \"Yes\" : \"Deleting...\"}\r\n          </Button>\r\n          <Button\r\n            onClick={toggleDeleteModal}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KpPrevHistory;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport VaccinationHistory from \"./../Vaccination/VaccinationHistory\";\r\nimport KpPrevHistory from \"./../KpPrev/KpPrevHistory\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\nconst RecentHistory = (props) => {\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [loadingRecent, setLoadingRecent] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (props.patientObj && props.patientObj !== null) {\r\n      RecentActivities();\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  // const RecentActivities = () => {\r\n  //   axios\r\n  //   .put('/api/v1/kpprev', data, {\r\n  //     headers: { Authorization: `Bearer ${token}` },\r\n  //   })\r\n  //     .then((response) => {\r\n  //       setLoadingRecent(false);\r\n  //       setRecentActivities(response.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       setLoadingRecent(false);\r\n  //       //console.log(error);\r\n  //     });\r\n  // };\r\n  //Get list of LaboratoryHistory\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}api/v1/kpprev/retrieve ${props.patientObj.id}/activities?full=false`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoadingRecent(false);\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setLoadingRecent(false);\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === \"\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"kp-prevention\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row\">\r\n        <KpPrevHistory patientObj={props.patientObj} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='kp-prev'){\r\n            props.setActiveContent({...props.activeContent, route:'kp-prevention', id:row.id, actionType:action})\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        } else if(row.path==='kp-prev'){\r\n            //props.setActiveContent({...props.activeContent, route:'kp-prev-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}api/v1/kpprev/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport * as moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\n\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, selectedOptions, theme) {\r\n  return {\r\n    fontWeight:\r\n      selectedOptions.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nconst KpPrev = (props) => {\r\n  const theme = useTheme();\r\n  const patientObj = props.patientObj;\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [htsCodeVal, setHtsCodeVal] = useState({});\r\n  const [prepCodeVal, setPrepCodeVal] = useState({});\r\n  const [kpprevFormStatus, setKpprevFormStatus] = useState(true);\r\n  let temp = { ...errors };\r\n  const classes = useStyles();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const getHTScode = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${patientObj?.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(\"hts\", response);\r\n        setHtsCodeVal({\r\n          htsCode: response.data.clientCode,\r\n          hivStatus: response.data.hivPositive,\r\n          htsClientDtoList: response.data.htsClientDtoList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPrepCode = () => {\r\n    axios\r\n      .get(`${baseUrl}prep/persons/${patientObj?.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(\"prep\", response.data);\r\n        setPrepCodeVal({\r\n          prevCode: response.data.uniqueId,\r\n          prepStatus: response.data.prepStatus,\r\n          prepDtoList: response.data.prepDtoList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHTScode();\r\n    getPrepCode();\r\n  }, []);\r\n\r\n  const [date, setDate] = useState({\r\n    dateServiceOffered: \"\",\r\n    service_provider: \"\",\r\n  });\r\n  const [htsServices, setHtsServices] = useState({\r\n    offeredHts: \"\",\r\n    acceptedHts: \"\",\r\n    hivTestResult: \"\",\r\n    referredForArt: \"\",\r\n  });\r\n  const [prepServices, setPrepServices] = useState({\r\n    offeredPrep: \"\",\r\n    acceptedPrep: \"\",\r\n    referredForPrep: \"\",\r\n  });\r\n  const [commodityService, setCommodityService] = useState({\r\n    condomDispensed: \"\",\r\n    lubricantsDispensed: \"\",\r\n    oralQuickDispensed: \"\",\r\n    newNeedleDispensed: \"\",\r\n    oldNeedleRetrived: \"\",\r\n    nalxoneProvided: \"\",\r\n    howmanycondomDispensed: \"\",\r\n    howmanylubricantsDispensed: \"\",\r\n    howmanyoralQuickDispensed: \"\",\r\n    howmanynewNeedleDispensed: \"\",\r\n    howmanyoldNeedleRetrived: \"\",\r\n    howmanynalxoneProvided: \"\",\r\n  });\r\n  const [hivEducationProvided, setHivEducationProvided] = useState({\r\n    iecMaterial: \"\",\r\n    interPersonalCommunication: \"\",\r\n    peerGroupCommunication: \"\",\r\n  });\r\n  const [bioMedicalServices, setbioMedicalServices] = useState({\r\n    stiScreening: \"\",\r\n    stiSyndromicManagement: \"\",\r\n    stiTreatment: \"\",\r\n    screenedForTb: \"\",\r\n    providedWithTpt: \"\",\r\n    screenedForViralHepatits: \"\",\r\n    viralHepatitsScreenResult: \"\",\r\n    vaccinationForViralHepatits: \"\",\r\n    offeredFamilyPlanningServices: \"\",\r\n    referredForFamilyPlanningServices: \"\",\r\n    providedWithDrugRehab: \"\",\r\n    offeredMhpss: \"\",\r\n    onMedicalAssistedTherapy: \"\",\r\n    recivedNalxoneForOverdoseTreatment: \"\",\r\n    stiScreeningResult: \"\",\r\n    stifacilityReffered: \"\",\r\n    tbfacilityReffered: \"\",\r\n    typeofMhpss: \"\",\r\n    drugRehabfacilityReffered: \"\",\r\n    refferedfacilitydrugrehab: \"\",\r\n  });\r\n  const [structuralServices, setstructuralServices] = useState({\r\n    providedOrRefferedForEmpowerment: \"\",\r\n    legalAidServiceType: \"\",\r\n    peerGroupCommunication: \"\",\r\n    typeempowermentprovided: \"\",\r\n    typelegalempowerment: \"\",\r\n    legalprogramreferred: \"\",\r\n  });\r\n  const [facilityRefferedToo, setFacilityRefferedToo] = useState({\r\n    facilityRefferedToStiScreening: \"\",\r\n    facilityRefferedToScreenedTo: \"\",\r\n    facilityRefferedToScreenedForViralHepatits: \"\",\r\n    facilityRefferedToViralHepatitsScreenResult: \"\",\r\n    facilityRefferedToVaccinationForViralHepatits: \"\",\r\n    facilityRefferedToOfferedFamilyPlanningServices: \"\",\r\n    facilityRefferedToReferredForFamilyPlanningServices: \"\",\r\n    facilityRefeRredToProvidedWithDrugRehab: \"\",\r\n    facilityRefferedToOfferedMhpss: \"\",\r\n    facilityRefferedToOnMedicalAssistedTherapy: \"\",\r\n    facilityRefferedToRecievedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setDate({ ...date, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeReferred = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setFacilityRefferedToo({\r\n      ...facilityRefferedToo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeHtsService = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHtsServices({ ...htsServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangePrepServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setPrepServices({ ...prepServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCommodityServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setCommodityService({\r\n      ...commodityService,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangeHivEducationProvided = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHivEducationProvided({\r\n      ...hivEducationProvided,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangebioMedicalServices = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"screenedForTb\" && e.target.value === \"yes\") {\r\n      bioMedicalServices.providedWithTpt = \"\";\r\n    } else if (e.target.name === \"screenedForTb\" && e.target.value === \"no\") {\r\n      bioMedicalServices.tbtreatmentrefferal = \"\";\r\n    }\r\n    setbioMedicalServices({\r\n      ...bioMedicalServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangestructuralServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setstructuralServices({\r\n      ...structuralServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //Validations of the forms\r\n  const validateAttempt = () => {\r\n    temp.dateServiceOffered = date.dateServiceOffered\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  /* Remove  function **/\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateAttempt()) {\r\n      const generateRandomString = (length) => {\r\n        const characters =\r\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        let result = \"\";\r\n        for (let i = 0; i < length; i++) {\r\n          result += characters.charAt(\r\n            Math.floor(Math.random() * characters.length)\r\n          );\r\n        }\r\n        return result;\r\n      };\r\n      const biomedicalServiceValue = {\r\n        medical_assisted_therapy_for_six_months:\r\n          bioMedicalServices.onMedicalAssistedTherapy,\r\n        offered_family_planning_services:\r\n          bioMedicalServices.offeredFamilyPlanningServices,\r\n        offered_mhpss: bioMedicalServices.offeredMhpss,\r\n        provided_with_drug_rehab: bioMedicalServices.providedWithDrugRehab,\r\n        provided_with_tpt: bioMedicalServices.providedWithTpt,\r\n        received_naloxone_for_overdose_treatment:\r\n          bioMedicalServices.recivedNalxoneForOverdoseTreatment,\r\n        referred_for_family_planning_services:\r\n          bioMedicalServices.referredForFamilyPlanningServices,\r\n        screened_for_tb: bioMedicalServices.screenedForTb,\r\n        screened_for_viral_hepatitis:\r\n          bioMedicalServices.screenedForViralHepatits,\r\n        sti_screening: bioMedicalServices.stiScreening,\r\n        sti_syndromic_management: bioMedicalServices.stiSyndromicManagement,\r\n        sti_treatment: bioMedicalServices.stiTreatment,\r\n        vaccination_for_viral_hepatitis:\r\n          bioMedicalServices.vaccinationForViralHepatits,\r\n        viral_hepatitis_screen_result:\r\n          bioMedicalServices.viralHepatitsScreenResult,\r\n        sti_screening_result: bioMedicalServices.stiScreeningResult,\r\n        sti_facility_referred: bioMedicalServices.stifacilityReffered,\r\n        tb_facility_reffered: bioMedicalServices.tbfacilityReffered,\r\n        type_of_mhpss: bioMedicalServices.typeofMhpss,\r\n        drug_rehab_facility_reffered:\r\n          bioMedicalServices.drugRehabfacilityReffered,\r\n        referred_facility_drug_rehab:\r\n          bioMedicalServices.refferedfacilitydrugrehab,\r\n      };\r\n\r\n      const commodityServicesValue = {\r\n        condoms_dispensed: commodityService.condomDispensed,\r\n        hivst_kits_dispensed: commodityService.oralQuickDispensed,\r\n        lubricants_dispensed: commodityService.lubricantsDispensed,\r\n        naloxane_provided: commodityService.nalxoneProvided,\r\n        new_needles_dispensed: commodityService.newNeedleDispensed,\r\n        old_needles_dispensed: commodityService.oldNeedleRetrived,\r\n        how_many_condom_dispensed: commodityService.howmanycondomDispensed,\r\n        how_many_lubricants_dispensed:\r\n          commodityService.howmanylubricantsDispensed,\r\n        how_many_oral_quick_dispensed:\r\n          commodityService.howmanyoralQuickDispensed,\r\n        how_many_new_needle_dispensed:\r\n          commodityService.howmanynewNeedleDispensed,\r\n        how_many_old_needle_retrived: commodityService.howmanyoldNeedleRetrived,\r\n        how_many_nalxone_provided: commodityService.howmanynalxoneProvided,\r\n      };\r\n\r\n      const htsServicesValue = {\r\n        accepted_hts: htsServices.acceptedHts,\r\n        hiv_test_result: htsServices.hivTestResult,\r\n        offered_hts: htsServices.offeredHts,\r\n        referred_for_art: htsServices.referredForArt,\r\n      };\r\n\r\n      const prepServicesValue = {\r\n        accepted_prep: prepServices.acceptedPrep,\r\n        offered_prep: prepServices.offeredPrep,\r\n        referred_for_prep: prepServices.referredForPrep,\r\n      };\r\n\r\n      const structuralServicesValue = {\r\n        legalAidServices: structuralServices.legalAidServiceType,\r\n        providedEmpowerment:\r\n          structuralServices.providedOrRefferedForEmpowerment,\r\n        type_empowerment_provided: structuralServices.typeempowermentprovided,\r\n        typelegalempowerment: structuralServices.typelegalempowerment,\r\n        legalprogramreferred: structuralServices.legalprogramreferred,\r\n      };\r\n      const randomString = generateRandomString(10);\r\n      const data = {\r\n        htsCode: htsCodeVal?.htsCode,\r\n        prepCode: prepCodeVal?.prevCode,\r\n        prevCode: `kp_kprev-${randomString}`,\r\n        patientId: patientObj.uuid,\r\n        serviceProvider: date.service_provider,\r\n        target_group:\r\n          htsCodeVal?.htsClientDtoList?.length > 0\r\n            ? htsCodeVal?.htsClientDtoList[0]?.targetGroup\r\n            : prepCodeVal?.prepDtoList[0]?.targetGroup,\r\n        dateServiceOffered: date.dateServiceOffered,\r\n        htsServices: htsServicesValue,\r\n        prepServices: prepServicesValue,\r\n        entryPoint: {},\r\n        bioMedicalServices: biomedicalServiceValue,\r\n        structuralServices: structuralServicesValue,\r\n        commodityServices: commodityServicesValue,\r\n        hivEducationalServices: hivEducationProvided,\r\n      };\r\n      //console.log(data);\r\n\r\n      if (data.htsCode === null && data.prepCode === null) {\r\n        toast.error(\"Client is not registered on HTS or Prep\");\r\n        setSaving(false);\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}kpprev`, data, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            setSaving(false);\r\n            toast.success(\"Record save successfully\");\r\n            setDate({\r\n              dateServiceOffered: \"\",\r\n              service_provider: \"\",\r\n            });\r\n            setHtsServices({\r\n              offeredHts: \"\",\r\n              acceptedHts: \"\",\r\n              hivTestResult: \"\",\r\n              referredForArt: \"\",\r\n            });\r\n            setPrepServices({\r\n              offeredPrep: \"\",\r\n              acceptedPrep: \"\",\r\n              referredForPrep: \"\",\r\n            });\r\n            setCommodityService({\r\n              condomDispensed: \"\",\r\n              lubricantsDispensed: \"\",\r\n              oralQuickDispensed: \"\",\r\n              newNeedleDispensed: \"\",\r\n              oldNeedleRetrived: \"\",\r\n              nalxoneProvided: \"\",\r\n              howmanycondomDispensed: \"\",\r\n              howmanylubricantsDispensed: \"\",\r\n              howmanyoralQuickDispensed: \"\",\r\n              howmanynewNeedleDispensed: \"\",\r\n              howmanyoldNeedleRetrived: \"\",\r\n              howmanynalxoneProvided: \"\",\r\n            });\r\n            setHivEducationProvided({\r\n              iecMaterial: \"\",\r\n              interPersonalCommunication: \"\",\r\n              peerGroupCommunication: \"\",\r\n            });\r\n            setbioMedicalServices({\r\n              stiScreening: \"\",\r\n              stiSyndromicManagement: \"\",\r\n              stiTreatment: \"\",\r\n              screenedForTb: \"\",\r\n              providedWithTpt: \"\",\r\n              screenedForViralHepatits: \"\",\r\n              viralHepatitsScreenResult: \"\",\r\n              vaccinationForViralHepatits: \"\",\r\n              offeredFamilyPlanningServices: \"\",\r\n              referredForFamilyPlanningServices: \"\",\r\n              providedWithDrugRehab: \"\",\r\n              offeredMhpss: \"\",\r\n              onMedicalAssistedTherapy: \"\",\r\n              recivedNalxoneForOverdoseTreatment: \"\",\r\n              stiScreeningResult: \"\",\r\n              stifacilityReffered: \"\",\r\n              tbfacilityReffered: \"\",\r\n              typeofMhpss: \"\",\r\n              drugRehabfacilityReffered: \"\",\r\n            });\r\n            setstructuralServices({\r\n              providedOrRefferedForEmpowerment: \"\",\r\n              legalAidServiceType: \"\",\r\n              peerGroupCommunication: \"\",\r\n              typeempowermentprovided: \"\",\r\n              typelegalempowerment: \"\",\r\n              legalprogramreferred: \"\",\r\n            });\r\n            history.push(\"/\");\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n          });\r\n      }\r\n      //setSaving(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          {kpprevFormStatus ? (\r\n            <form>\r\n              {/* <div className=\"card d-flex\"> */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  KEY POPULATION PREVENTION FORM\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"row d-flex\">\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <br />\r\n                  <FormGroup>\r\n                    <Label>Date Of Service Provisions</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateServiceOffered\"\r\n                      value={date.dateServiceOffered}\r\n                      onChange={handleInputChange}\r\n                      id=\"dateServiceOffered\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    ></Input>\r\n                    {errors.dateServiceOffered !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateServiceOffered}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {/* HTS service */}\r\n                {htsCodeVal.htsClientDtoList?.length > 0 && (\r\n                  <>\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"teal\"\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"45px\",\r\n                        marginBottom: \"10px\",\r\n                      }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}>HTS Services</h2>\r\n                    </LabelSui>\r\n                    <br />\r\n                    <br />\r\n\r\n                    <div className=\"form-group mb-10 col-xs-6 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>Offered HTS</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"offeredHts\"\r\n                          id=\"offeredHts\"\r\n                          onChange={handleInputChangeHtsService}\r\n                          value={htsServices.offeredHts}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>Accepted HTS</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"acceptedHts\"\r\n                          id=\"acceptedHts\"\r\n                          onChange={handleInputChangeHtsService}\r\n                          value={htsServices.acceptedHts}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {htsServices.acceptedHts === \"1\" ? (\r\n                      <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                        <FormGroup>\r\n                          <Label>Hiv Test Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"hivTestResult\"\r\n                            id=\"hivTestResult\"\r\n                            onChange={handleInputChangeHtsService}\r\n                            value={htsServices.hivTestResult}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"positive\">Positive</option>\r\n                            <option value=\"negative\">Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {htsServices.hivTestResult === \"positive\" ? (\r\n                      <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                        <FormGroup>\r\n                          <Label>Reffered for ART</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForArt\"\r\n                            id=\"referredForArt\"\r\n                            onChange={handleInputChangeHtsService}\r\n                            value={htsServices.referredForArt}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {prepCodeVal.prepDtoList?.length > 0 ||\r\n                  (htsServices.hivTestResult === \"negative\" && (\r\n                    <>\r\n                      <LabelSui\r\n                        as=\"a\"\r\n                        color=\"teal\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: \"45px\",\r\n                          marginBottom: \"10px\",\r\n                        }}\r\n                        ribbon\r\n                      >\r\n                        <h2 style={{ color: \"#fff\" }}>PreP Services</h2>\r\n                      </LabelSui>\r\n                      <br />\r\n                      <br />\r\n                      <div className=\"form-group mb-3 col-md-4 \">\r\n                        <FormGroup>\r\n                          <Label>Offered Prep</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredPrep\"\r\n                            id=\"offeredPrep\"\r\n                            onChange={handleInputChangePrepServices}\r\n                            value={prepServices.offeredPrep}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4 \">\r\n                        <FormGroup>\r\n                          <Label>Accepted PreP</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"acceptedPrep\"\r\n                            id=\"acceptedPrep\"\r\n                            onChange={handleInputChangePrepServices}\r\n                            value={prepServices.acceptedPrep}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4 \">\r\n                        <FormGroup>\r\n                          <Label>Reffered for Prep</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForPrep\"\r\n                            id=\"referredForPrep\"\r\n                            onChange={handleInputChangePrepServices}\r\n                            value={prepServices.referredForPrep}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    </>\r\n                  ))}\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Commodity Service</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Condom Dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"condomDispensed\"\r\n                        id=\"condomDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.condomDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.condomDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Condom Dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanycondomDispensed\"\r\n                          id=\"howmanycondomDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanycondomDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Lubricants Dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"lubricantsDispensed\"\r\n                        id=\"lubricantsDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.lubricantsDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.lubricantsDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>How Many Lubricants Dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanylubricantsDispensed\"\r\n                          id=\"howmanylubricantsDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanylubricantsDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Oral Quick/ HIVST dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"oralQuickDispensed\"\r\n                        id=\"oralQuickDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oralQuickDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.oralQuickDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Oral Quick/ HIVST dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanyoralQuickDispensed\"\r\n                          id=\"howmanyoralQuickDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanyoralQuickDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>New Needles/Syringe Dispesend</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"newNeedleDispensed\"\r\n                        id=\"newNeedleDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.newNeedleDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.newNeedleDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>How Many New Needles/Syringe Dispesend</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanynewNeedleDispensed\"\r\n                          id=\"howmanynewNeedleDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanynewNeedleDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Old Needles/Syringe Retrived</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"oldNeedleRetrived\"\r\n                        id=\"oldNeedleRetrived\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oldNeedleRetrived}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.oldNeedleRetrived === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>Old Needles/Syringe Retrived</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanyoldNeedleRetrived\"\r\n                          id=\"howmanyoldNeedleRetrived\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanyoldNeedleRetrived}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Nalxone Provided</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"nalxoneProvided\"\r\n                        id=\"nalxoneProvided\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.nalxoneProvided}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.nalxoneProvided === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Nalxone Provided</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanynalxoneProvided\"\r\n                          id=\"howmanynalxoneProvided\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanynalxoneProvided}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>HIV Educaton Provided</h2>\r\n                  </LabelSui>\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>IEC materials/pamphlets provided </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"iecMaterial\"\r\n                        id=\"iecMaterial\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.iecMaterial}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>InterPersonal Communication</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"interPersonalCommunication\"\r\n                        id=\"interPersonalCommunication\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.interPersonalCommunication}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>Peer Group Communication</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"peerGroupCommunication\"\r\n                        id=\"peerGroupCommunication\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.peerGroupCommunication}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              {/* <div className='card'> */}\r\n\r\n              <div className=\" row d-flex\">\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Biomedical Services</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Screening</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiScreening\"\r\n                          id=\"stiScreening\"\r\n                          value={bioMedicalServices.stiScreening}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"yes\">Yes</option>\r\n                          <option value=\"no\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.stiScreening === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Screening Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreeningResult\"\r\n                            id=\"stiScreeningResult\"\r\n                            value={bioMedicalServices.stiScreeningResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"positive\">Positive</option>\r\n                            <option value=\"negative\">Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.stiScreeningResult === \"positive\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Treatment/ Referral</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiTreatment\"\r\n                            id=\"stiTreatment\"\r\n                            value={bioMedicalServices.stiTreatment}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.stiTreatment === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"stifacilityReffered\"\r\n                          id=\"stifacilityReffered\"\r\n                          value={bioMedicalServices.stifacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Syndromic Management</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiSyndromicManagement\"\r\n                          id=\"stiSyndromicManagement\"\r\n                          value={bioMedicalServices.stiSyndromicManagement}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Screened for TB</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"screenedForTb\"\r\n                          id=\"screenedForTb\"\r\n                          value={bioMedicalServices.screenedForTb}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.screenedForTb === \"no\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided with TPT</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithTpt\"\r\n                            id=\"providedWithTpt\"\r\n                            value={bioMedicalServices.providedWithTpt}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.screenedForTb === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>TB treatment/referral </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"tbtreatmentrefferal\"\r\n                            id=\"tbtreatmentrefferal\"\r\n                            value={bioMedicalServices.tbtreatmentrefferal}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.tbtreatmentrefferal === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"tbfacilityReffered\"\r\n                          id=\"tbfacilityReffered\"\r\n                          value={bioMedicalServices.tbfacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Screened For Viral Heaptits</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"screenedForViralHepatits\"\r\n                          id=\"screenedForViralHepatits\"\r\n                          value={bioMedicalServices.screenedForViralHepatits}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.screenedForViralHepatits === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Viral Hepatits Screen Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"viralHepatitsScreenResult\"\r\n                            id=\"viralHepatitsScreenResult\"\r\n                            value={bioMedicalServices.viralHepatitsScreenResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"positive\"> Positive </option>\r\n                            <option value=\"negative\"> Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Vaccination For Viral Hepatits</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"vaccinationForViralHepatits\"\r\n                          id=\"vaccinationForViralHepatits\"\r\n                          value={bioMedicalServices.vaccinationForViralHepatits}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"Yes\"> Yes </option>\r\n                          <option value=\"No\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Offered Family Planning Services</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"offeredFamilyPlanningServices\"\r\n                          id=\"offeredFamilyPlanningServices\"\r\n                          value={\r\n                            bioMedicalServices.offeredFamilyPlanningServices\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.offeredFamilyPlanningServices ===\r\n                      \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Refferred For Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForFamilyPlanningServices\"\r\n                            id=\"referredForFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.referredForFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Provided With Drug Rehab</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"providedWithDrugRehab\"\r\n                          id=\"providedWithDrugRehab\"\r\n                          value={bioMedicalServices.providedWithDrugRehab}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered MHPSS</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredMhpss\"\r\n                            id=\"offeredMhpss\"\r\n                            value={bioMedicalServices.offeredMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.offeredMhpss === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Type of MHPSS Provided</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"typeofMhpss\"\r\n                            id=\"typeofMhpss\"\r\n                            value={bioMedicalServices.typeofMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Referred to facility for Drug Rehab </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"refferedfacilitydrugrehab\"\r\n                            id=\"refferedfacilitydrugrehab\"\r\n                            value={bioMedicalServices.refferedfacilitydrugrehab}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.refferedfacilitydrugrehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label>Drug Rehab Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"drugRehabfacilityReffered\"\r\n                          id=\"drugRehabfacilityReffered\"\r\n                          value={bioMedicalServices.drugRehabfacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          On Medical Assisted Therapy (MAT) for atleast 6 months\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"onMedicalAssistedTherapy\"\r\n                          id=\"onMedicalAssistedTherapy\"\r\n                          value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Recived Nalxone for Overdose Treatment</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"recivedNalxoneForOverdoseTreatment\"\r\n                          id=\"recivedNalxoneForOverdoseTreatment\"\r\n                          value={\r\n                            bioMedicalServices.recivedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}> Structural Services </h2>\r\n                  </LabelSui>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Provided or Reffered for Empowerment</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"providedOrRefferedForEmpowerment\"\r\n                        id=\"providedOrRefferedForEmpowerment\"\r\n                        value={\r\n                          structuralServices.providedOrRefferedForEmpowerment\r\n                        }\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                    {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                      \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Type of Empowerment Provided </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"typeempowermentprovided\"\r\n                          id=\"typeempowermentprovided\"\r\n                          value={structuralServices.typeempowermentprovided}\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Legal Aid Service Type</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"legalAidServiceType\"\r\n                        id=\"legalAidServiceType\"\r\n                        value={structuralServices.legalAidServiceType}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {structuralServices.legalAidServiceType === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Label> Type of Legal Empowerment Provided </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"typelegalempowerment\"\r\n                        id=\"typelegalempowerment\"\r\n                        value={structuralServices.typelegalempowerment}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {structuralServices.legalAidServiceType === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Label> Legal Program referred </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"legalprogramreferred\"\r\n                        id=\"legalprogramreferred\"\r\n                        value={structuralServices.legalprogramreferred}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}> Service Provider </h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Name of service provider</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"service_provider\"\r\n                        id=\"service_provider\"\r\n                        value={date.service_provider}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n\r\n                      {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                    </FormGroup>\r\n                    {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                      \"Yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                          id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                          value={\r\n                            facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* </div> */}\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                //hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n                onClick={handleSubmit}\r\n                style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n                //disabled={attemptList.length <= 0 && !saving ? true : false}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>\r\n                    {\" \"}\r\n                    {props.activeContent.actionType === \"update\"\r\n                      ? \"Update\"\r\n                      : \"Save\"}\r\n                  </span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>\r\n                    {props.activeContent.actionType === \"update\"\r\n                      ? \"Update...\"\r\n                      : \"Save...\"}\r\n                  </span>\r\n                )}\r\n              </MatButton>\r\n              {/* </div> */}\r\n            </form>\r\n          ) : (\r\n            <div>Client not Eligible for Kp Prev</div>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default KpPrev;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport PatientCardDetail from \"./PatientCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport RecentHistory from \"./../History/RecentHistory\";\r\nimport PatientHistory from \"./../History/PatientHistory\";\r\nimport Biometrics from \"./Biometric\";\r\nimport AddmissionHome from \"./../Admission/AddmissionHome\";\r\nimport PatientVaccinationHistory from \"./../Vaccination/VaccinationHistory\";\r\nimport KpPrev from \"../KpPrev\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [art, setArt] = useState(false);\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: \"recent-history\",\r\n    id: \"\",\r\n    activeTab: \"home\",\r\n    actionType: \"create\",\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n  const patientObj =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const prepId =\r\n    history.location && history.location.state\r\n      ? history.location.state.prepId\r\n      : {};\r\n  //console.log(patientObj)\r\n  useEffect(() => {}, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>KP-PREV /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <PatientCardDetail\r\n            patientObj={patientObj}\r\n            setArt={setArt}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <SubMenu\r\n            patientObj={patientObj}\r\n            art={art}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <br />\r\n          {activeContent.route === \"recent-history\" && (\r\n            <RecentHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n          {/* {activeContent.route === \"biometrics\" && (\r\n            <Biometrics\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"addmission\" && (\r\n            <AddmissionHome\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"vaccination\" && (\r\n            <PatientVaccinationHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"discharge\" && (\r\n            <AddmissionHome\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"icu\" && (\r\n            <AddmissionHome\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"patient-history\" && (\r\n            <PatientHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n\r\n          {activeContent.route === \"kp-prev\" && (\r\n            <KpPrev\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n          {/* History Pages */}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { FaPlus, FaAngleDown } from \"react-icons/fa\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"./patient.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst UserRegistration = (props) => {\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: \"\",\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: \"\",\r\n    genderId: \"\",\r\n    identifier: \"\",\r\n    otherName: \"\",\r\n    maritalStatusId: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    dateOfRegistration: \"\",\r\n    isDateOfBirthEstimated: null,\r\n    age: \"\",\r\n    phoneNumber: \"\",\r\n    altPhonenumber: \"\",\r\n    dob: \"\",\r\n    countryId: 1,\r\n    stateId: \"\",\r\n    district: \"\",\r\n    sexId: \"\",\r\n    ninNumber: \"\",\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: \"\",\r\n    phone: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    relationshipId: \"\",\r\n    lastName: \"\",\r\n    middleName: \"\",\r\n  });\r\n  const [contacts, setContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  //const [editRelative, setEditRelative] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [covidEffect, setCovidEffect] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: \"\",\r\n    vaccinationEnrollment: \"\",\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //HIV INFORMATION\r\n  const [showContactCard, setShowContactCard] = useState(true);\r\n  const [vaccine, setVaccine] = useState([]);\r\n  //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n  const [objValues, setObjValues] = useState({\r\n    adverseEffect: \"\",\r\n    batchNumber: \"\",\r\n    doseNumber: \"\",\r\n    location: \"\",\r\n    patientId: \"\",\r\n    vaccinationFacility: \"\",\r\n    vaccine: \"\",\r\n    vaccineDate: \"\",\r\n    knownMedicalCondition: \"\",\r\n    medicalCondition: \"\",\r\n    occupation: \"\",\r\n    vaccineId: \"\",\r\n    visitDate: \"\",\r\n    patientId: \"\",\r\n    visitId: \"\",\r\n    workInHealthSector: \"\",\r\n  });\r\n\r\n  //status for hospital Number\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [hospitalNumStatus2, setHospitalNumStatus2] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  patientId = locationState ? locationState.patientId : null;\r\n  let temp = { ...errors };\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    VACCINE();\r\n    GetCountry();\r\n    setStateByCountryId();\r\n    COVID_ADVERSE_EFFECT();\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      toast.error(\"Date of registration can not be earlier than date of birth\");\r\n    }\r\n  }, [basicInfo.dateOfRegistration]);\r\n  //covid/codeset?category=VACCINE\r\n  const VACCINE = () => {\r\n    axios\r\n      .get(`${baseUrl}covid/codeset?category=VACCINE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setVaccine(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const COVID_ADVERSE_EFFECT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setCovidEffect(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //COVID_ADVERSE_EFFECT\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  // const loadTopLevelCountry = useCallback(async () => {\r\n  //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n  //     settopLevelUnitCountryOptions(response.data);\r\n  // }, []);\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get States from selected country\r\n  const getStates = (e) => {\r\n    const getCountryId = e.target.value;\r\n    setStateByCountryId(1);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId() {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setStates(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: \"\" });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n    if (basicInfo.age !== \"\" && basicInfo.age >= 60) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value === \"Actual\") {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value === \"Estimated\") {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    const ageNumber = e.target.value.replace(/\\D/g, \"\");\r\n    if (!ageDisabled && ageNumber) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(ageNumber * -1, \"years\");\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n      if (ageNumber !== \"\" && ageNumber >= 60) {\r\n        toggle();\r\n      }\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: Math.abs(e.target.value) });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  //Handle Input Change for Basic Infor\r\n  const handleInputChangeBasic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"ninNumber\" && e.target.value !== \"\") {\r\n      const ninNumberValue = checkNINLimit(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: ninNumberValue });\r\n    }\r\n    if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n          setObjValues({ ...objValues, uniqueId: e.target.value });\r\n          setHospitalNumStatus2(true);\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n          setHospitalNumStatus2(false);\r\n        }\r\n      }\r\n      getHosiptalNumber();\r\n    }\r\n  };\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? \"\" : \"First Name is required\";\r\n    temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\";\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? \"\"\r\n      : \"Relationship Type is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = (e) => {\r\n    if (validateRelatives()) {\r\n      setContacts([...contacts, relatives]);\r\n      setRelatives({\r\n        address: \"\",\r\n        phone: \"\",\r\n        firstName: \"\",\r\n        email: \"\",\r\n        relationshipId: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n      });\r\n    }\r\n  };\r\n  const handleDeleteRelative = (index) => {\r\n    contacts.splice(index, 1);\r\n    setContacts([...contacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    contacts.splice(index, 1);\r\n  };\r\n  const getRelationship = (relationshipId) => {\r\n    const relationship = relationshipOptions.find(\r\n      (obj) => obj.id == relationshipId\r\n    );\r\n    return relationship ? relationship.display : \"\";\r\n  };\r\n  const handleInputChangeRelatives = (e) => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\";\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? \"\"\r\n      : \"Hospital Number  is required.\";\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n    // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n    temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\";\r\n    temp.dateOfRegistration = basicInfo.dateOfRegistration\r\n      ? \"\"\r\n      : \"Date of Registration is required.\";\r\n    //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n    temp.address = basicInfo.address ? \"\" : \"Address is required.\";\r\n    temp.phoneNumber = basicInfo.phoneNumber\r\n      ? \"\"\r\n      : \"Phone Number  is required.\";\r\n    temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\";\r\n    temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\";\r\n    temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\";\r\n    //VACCINATION FORM VALIDATION\r\n    temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\";\r\n    temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\";\r\n    //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n    temp.location = objValues.location ? \"\" : \"This field is required\";\r\n    temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\";\r\n    temp.adverseEffect = objValues.adverseEffect\r\n      ? \"\"\r\n      : \"This field is required\";\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    console.log(handleSubmit);\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts &&\r\n        contacts.length > 0 &&\r\n        contacts.map((x) => {\r\n          const contactInfo = {\r\n            address: {\r\n              line: [x.address],\r\n            },\r\n            contactPoint: {\r\n              type: \"phone\",\r\n              value: x.phone,\r\n            },\r\n            firstName: x.firstName,\r\n            fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n            relationshipId: x.relationshipId,\r\n            surname: x.lastName,\r\n            otherName: x.middleName,\r\n          };\r\n\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.address,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: \"\",\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: newConatctsInfo,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.sexId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n        const phone = {\r\n          type: \"phone\",\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: \"email\",\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: \"altphone\",\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        //patientForm.id = patientId;\r\n        patientDTO.person = patientForm;\r\n        patientDTO.vaccinationEnrollment = objValues;\r\n        const observationData = {\r\n          observation: {\r\n            data: {},\r\n            date: date.dateServiceOffered,\r\n            htsService: htsServices,\r\n            prepServices: prepServices,\r\n          },\r\n          commodityService: commodityService,\r\n          hivEducationProvided: hivEducationProvided,\r\n          bioMedicalServices: bioMedicalServices,\r\n          structuralServices: structuralServices,\r\n        };\r\n\r\n        const response = await axios.post(\r\n          `${baseUrl}/api/v1/kpprev`,\r\n          patientDTO,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        toast.success(\"Patient Register successfully\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n        setSaving(false);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          if (\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\" &&\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.subErrors[0].message !== \"\"\r\n          ) {\r\n            toast.error(\r\n              error.response.data.apierror.message +\r\n                \" : \" +\r\n                error.response.data.apierror.subErrors[0].field +\r\n                \" \" +\r\n                error.response.data.apierror.subErrors[0].message,\r\n              { position: toast.POSITION.BOTTOM_CENTER }\r\n            );\r\n          } else {\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const [date, setDate] = useState({\r\n    dateServiceOffered: \"\",\r\n  });\r\n\r\n  const [htsServices, setHtsServices] = useState({\r\n    offeredHts: \"\",\r\n    acceptedHts: \"\",\r\n    hivTestResult: \"\",\r\n    referredForArt: \"\",\r\n  });\r\n  const [prepServices, setPrepServices] = useState({\r\n    offeredPrep: \"\",\r\n    acceptedPrep: \"\",\r\n    refferedForPrep: \"\",\r\n  });\r\n  const [commodityService, setCommodityService] = useState({\r\n    condomDispensed: \"\",\r\n    lubricantsDispensed: \"\",\r\n    oralQuickDispensed: \"\",\r\n    newNeedleDispensed: \"\",\r\n    oldNeedleRetrived: \"\",\r\n    nalxoneProvided: \"\",\r\n  });\r\n  const [hivEducationProvided, setHivEducationProvided] = useState({\r\n    iecMaterial: \"\",\r\n    interPersonalCommunication: \"\",\r\n    peerGroupCommunication: \"\",\r\n  });\r\n  const [bioMedicalServices, setbioMedicalServices] = useState({\r\n    stiScreening: \"\",\r\n    stiSyndromicManagement: \"\",\r\n    stiTreatment: \"\",\r\n    screenedForTb: \"\",\r\n    providedWithTpt: \"\",\r\n    screenedForViralHepatits: \"\",\r\n    viralHepatitsScreenResult: \"\",\r\n    vaccinationForViralHepatits: \"\",\r\n    offeredFamilyPlanningServices: \"\",\r\n    referredForFamilyPlanningServices: \"\",\r\n    providedWithDrugRehab: \"\",\r\n    offeredMhpss: \"\",\r\n    onMedicalAssistedTherapy: \"\",\r\n    recivedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n  const [structuralServices, setstructuralServices] = useState({\r\n    providedOrRefferedForEmpowerment: \"\",\r\n    legalAidServiceType: \"\",\r\n    peerGroupCommunication: \"\",\r\n  });\r\n  const [facilityRefferedToo, setFacilityRefferedToo] = useState({\r\n    facilityRefferedToStiScreening: \"\",\r\n    facilityRefferedToScreenedTo: \"\",\r\n    facilityRefferedToScreenedForViralHepatits: \"\",\r\n    facilityRefferedToViralHepatitsScreenResult: \"\",\r\n    facilityRefferedToVaccinationForViralHepatits: \"\",\r\n    facilityRefferedToOfferedFamilyPlanningServices: \"\",\r\n    facilityRefferedToReferredForFamilyPlanningServices: \"\",\r\n    facilityRefeRredToProvidedWithDrugRehab: \"\",\r\n    facilityRefferedToOfferedMhpss: \"\",\r\n    facilityRefferedToOnMedicalAssistedTherapy: \"\",\r\n    facilityRefferedToRecievedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n\r\n  const handleInputChan4Date = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setDate({ ...date, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeReferred = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setFacilityRefferedToo({\r\n      ...facilityRefferedToo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeHtsService = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHtsServices({ ...htsServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangePrepServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setPrepServices({ ...prepServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCommodityServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setCommodityService({\r\n      ...commodityService,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangeHivEducationProvided = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHivEducationProvided({\r\n      ...hivEducationProvided,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangebioMedicalServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setbioMedicalServices({\r\n      ...bioMedicalServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangestructuralServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setstructuralServices({\r\n      ...structuralServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"location\" && objValues.location !== \"Facility\") {\r\n      objValues.vaccinationFacility = \"\";\r\n      setObjValues({ ...objValues, [\"vaccinationFacility\"]: \"\" });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setRelatives({ ...relatives, [inputName]: NumberValue });\r\n  };\r\n  // const checkPhoneNumberBasic=(e, inputName)=>{\r\n  //     const limit = 10;\r\n  //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});\r\n  // }\r\n  const checkNINLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n  const handleCheckBoxworkInHealthSector = (e) => {\r\n    if (e.target.checked) {\r\n      setObjValues({ ...objValues, [\"workInHealthSector\"]: e.target.checked });\r\n      //setOvcEnrolled(true)\r\n    } else {\r\n      setObjValues({ ...objValues, [\"workInHealthSector\"]: false });\r\n    }\r\n  };\r\n\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setBasicInfo({ ...basicInfo, [inputName]: NumberValue });\r\n  };\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  const handleCheckBoxknownMedicalCondition = (e) => {\r\n    if (e.target.checked) {\r\n      setObjValues({\r\n        ...objValues,\r\n        [\"knownMedicalCondition\"]: e.target.checked,\r\n      });\r\n      //setOvcEnrolled(true)\r\n    } else {\r\n      setObjValues({ ...objValues, [\"knownMedicalCondition\"]: false });\r\n    }\r\n  };\r\n  const onClickContactCard = () => {\r\n    setShowContactCard(!showContactCard);\r\n  };\r\n  const onClickRelativeCard = () => {\r\n    setShowRelative(!showRelative);\r\n  };\r\n  const handleCancel = () => {\r\n    history.push({ pathname: \"/\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Kp-Prev /</Link> Patient Registration\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/\",\r\n          state: \"users\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mr-10 pr-10\"\r\n          style={{\r\n            backgroundColor: \"#014d88\",\r\n            fontWeight: \"bolder\",\r\n            margingRight: \"-40px\",\r\n          }}\r\n          startIcon={<TiArrowBack />}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n            Back{\" \"}\r\n          </span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    {userDetail === null\r\n                      ? \"Basic Information\"\r\n                      : \"Edit User Information\"}\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            min=\"1983-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            value={basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.dateOfRegistration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            Hospital Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hospitalNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {\"Hospital number already exist\"}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"ninNumber\">\r\n                            National Identity Number (NIN){\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"ninNumber\"\r\n                            value={basicInfo.ninNumber}\r\n                            id=\"ninNumber\"\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">\r\n                            First Names <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.firstName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Last Name <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.lastName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Sex <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.id}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Date Of Birth{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dob\"\r\n                            min=\"1940-01-01\"\r\n                            id=\"dob\"\r\n                            max={\r\n                              basicInfo.dateOfRegistration === \"\"\r\n                                ? moment(new Date()).format(\"YYYY-MM-DD\")\r\n                                : basicInfo.dateOfRegistration\r\n                            }\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            className=\"form-control\"\r\n                            id=\"age\"\r\n                            min=\"5\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                        <p>\r\n                          <b style={{ color: \"red\" }}>\r\n                            {basicInfo.age !== \"\" && basicInfo.age < 5\r\n                              ? \"The minimum age is 5\"\r\n                              : \" \"}{\" \"}\r\n                          </b>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Employment Status </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Education Level </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Contact Details\r\n                  </h5>\r\n                  {showContactCard === false ? (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickContactCard}\r\n                      >\r\n                        <FaPlus />\r\n                      </span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickContactCard}\r\n                      >\r\n                        <FaAngleDown />\r\n                      </span>{\" \"}\r\n                    </>\r\n                  )}\r\n                </div>\r\n                {showContactCard && (\r\n                  <div className=\"card-body\">\r\n                    <div className={\"row\"}>\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Phone Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"phoneNumber\"\r\n                            id=\"phoneNumber\"\r\n                            onChange={(e) => {\r\n                              handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                            }}\r\n                            value={basicInfo.phoneNumber}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            required\r\n                          />\r\n                          {errors.phoneNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.phoneNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Alt. Phone Number</Label>\r\n                          {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"altPhonenumber\"\r\n                            id=\"altPhonenumber\"\r\n                            onChange={(e) => {\r\n                              handleInputChangePhoneNumber(e, \"altPhonenumber\");\r\n                            }}\r\n                            value={basicInfo.altPhonenumber}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            required\r\n                          />\r\n                          {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Email</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.email}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            required\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Country <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"countryId\"\r\n                            id=\"countryId\"\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            value={basicInfo.countryId}\r\n                            disabled\r\n                            onChange={getStates}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {countries.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.countryId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.countryId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            State <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"stateId\"\r\n                            id=\"stateId\"\r\n                            value={basicInfo.stateId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            onChange={getProvinces}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {states.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.stateId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.stateId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Province/District/LGA{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"district\"\r\n                            id=\"district\"\r\n                            value={basicInfo.district}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            onChange={handleInputChangeBasic}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {provinces.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.district !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.district}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Street Address{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            id=\"address\"\r\n                            value={basicInfo.address}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.address !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.address}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Landmark</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"landmark\"\r\n                            id=\"landmark\"\r\n                            value={basicInfo.landmark}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                  {showRelative === false ? (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickRelativeCard}\r\n                      >\r\n                        <FaPlus />\r\n                      </span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickRelativeCard}\r\n                      >\r\n                        <FaAngleDown />\r\n                      </span>{\" \"}\r\n                    </>\r\n                  )}\r\n                </div>\r\n                {showRelative && (\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      {contacts && contacts.length > 0 && (\r\n                        <div className=\"col-xl-12 col-lg-12\">\r\n                          <table style={{ width: \"100%\" }} className=\"mb-3\">\r\n                            <thead className=\"mb-3\">\r\n                              <tr>\r\n                                <th>Relationship Type</th>\r\n                                <th>Name</th>\r\n                                <th>Phone</th>\r\n                                <th>Address</th>\r\n                                <th>Actions</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"mb-3\">\r\n                              {contacts.map((item, index) => {\r\n                                return (\r\n                                  <tr key={item.index} className=\"mb-3\">\r\n                                    <td>\r\n                                      {getRelationship(item.relationshipId)}\r\n                                    </td>\r\n                                    <td>\r\n                                      {item.firstName +\r\n                                        \" \" +\r\n                                        item.middleName +\r\n                                        \" \" +\r\n                                        item.lastName}\r\n                                    </td>\r\n                                    <td>{item.phone}</td>\r\n                                    <td>{item.address}</td>\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                        onClick={() =>\r\n                                          handleEditRelative(item, index)\r\n                                        }\r\n                                      >\r\n                                        <FontAwesomeIcon icon=\"edit\" />\r\n                                      </button>\r\n                                      &nbsp;&nbsp;\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-danger btn-sm removeRow\"\r\n                                        onClick={(e) =>\r\n                                          handleDeleteRelative(index)\r\n                                        }\r\n                                      >\r\n                                        <FontAwesomeIcon icon=\"trash\" />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        {showRelative && (\r\n                          <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"relationshipType\">\r\n                                      Relationship Type{\" \"}\r\n                                      <span style={{ color: \"red\" }}> *</span>\r\n                                    </Label>\r\n                                    <select\r\n                                      className=\"form-control\"\r\n                                      name=\"relationshipId\"\r\n                                      id=\"relationshipId\"\r\n                                      value={relatives.relationshipId}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    >\r\n                                      <option value={\"\"}>Select</option>\r\n                                      {relationshipOptions.map(\r\n                                        (relative, index) => (\r\n                                          <option\r\n                                            key={relative.id}\r\n                                            value={relative.id}\r\n                                          >\r\n                                            {relative.display}\r\n                                          </option>\r\n                                        )\r\n                                      )}\r\n                                    </select>\r\n                                    {errors.relationshipId !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.relationshipId}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"cfirstName\">\r\n                                      First Name{\" \"}\r\n                                      <span style={{ color: \"red\" }}> *</span>\r\n                                    </Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"firstName\"\r\n                                      value={relatives.firstName}\r\n                                      id=\"firstName\"\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {errors.firstName !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.firstName}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label>Middle Name</Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"middleName\"\r\n                                      id=\"middleName\"\r\n                                      value={relatives.middleName}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label>\r\n                                      Last Name{\" \"}\r\n                                      <span style={{ color: \"red\" }}> *</span>\r\n                                    </Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"lastName\"\r\n                                      id=\"lastName\"\r\n                                      value={relatives.lastName}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {errors.lastName !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.lastName}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"contactPhoneNumber\">\r\n                                      Phone Number\r\n                                    </Label>\r\n                                    {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      name=\"phone\"\r\n                                      id=\"phone\"\r\n                                      onChange={(e) => {\r\n                                        checkPhoneNumber(e, \"phone\");\r\n                                      }}\r\n                                      value={relatives.phone}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      required\r\n                                    />\r\n                                    {errors.phone !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.phone}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"contactEmail\">Email</Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"email\"\r\n                                      name=\"email\"\r\n                                      id=\"email\"\r\n                                      value={relatives.email}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                      required\r\n                                    />\r\n                                    {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"contactAddress\">Address</Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"address\"\r\n                                      id=\"address\"\r\n                                      value={relatives.address}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                  </FormGroup>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"row\">\r\n                                <div className=\"col-1\">\r\n                                  <MatButton\r\n                                    type=\"button\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    onClick={handleSaveRelationship}\r\n                                  >\r\n                                    Add\r\n                                  </MatButton>\r\n                                </div>\r\n\r\n                                <div className=\"col-1\">\r\n                                  <MatButton\r\n                                    type=\"button\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.button}\r\n                                    onClick={handleCancelSaveRelationship}\r\n                                  >\r\n                                    Cancel\r\n                                  </MatButton>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\"></div>\r\n                    {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                    {/* </div> */}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/* Adding First DOSAGE FORM HERE */}\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Key Population Prevention{\" \"}\r\n                  </h5>\r\n                </div>\r\n\r\n                {/* <div className=\"card d-flex\"> */}\r\n\r\n                <div className=\"row d-flex\">\r\n                  <h2>Service Provider </h2>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>Date Of Service Provisions</Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"dateServiceOffered\"\r\n                        value={date.dateServiceOffered}\r\n                        onChange={handleInputChan4Date}\r\n                        id=\"dateServiceOffered\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                      {errors.dateServiceOffered !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateServiceOffered}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* <div className='card'> */}\r\n\r\n                  <div\r\n                    className=\"card-header\"\r\n                    style={{\r\n                      backgroundColor: \"teal\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bolder\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>HTS Services</h2>\r\n                  </div>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Offered HTS</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"offeredHts\"\r\n                        id=\"offeredHts\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.offeredHts}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Accepted HTS</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"acceptedHts\"\r\n                        id=\"acceptedHts\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.acceptedHts}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Hiv Test Result</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"hivTestResult\"\r\n                        id=\"hivTestResult\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.hivTestResult}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Reffered for ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"referredForArt\"\r\n                        id=\"referredForArt\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.referredForArt}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  {/* </div> */}\r\n\r\n                  <br />\r\n\r\n                  {/* <div className='card'> */}\r\n\r\n                  {/* <div className=\"row d-flex\"> */}\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"teal\"\r\n                    style={{ width: \"100%\", height: \"45px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>PreP Services</h2>\r\n                  </LabelSui>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Offered Prep</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"offeredPrep\"\r\n                        id=\"offeredPrep\"\r\n                        onChange={handleInputChangePrepServices}\r\n                        value={prepServices.offeredPrep}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Accepted PreP</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"acceptedPrep\"\r\n                        id=\"acceptedPrep\"\r\n                        onChange={handleInputChangePrepServices}\r\n                        value={prepServices.acceptedPrep}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Reffered for Prep</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"referredForPrep\"\r\n                        id=\"referredForPrep\"\r\n                        onChange={handleInputChangePrepServices}\r\n                        value={prepServices.referredForPrep}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* </div> */}\r\n\r\n                  {/* <div className='card'> */}\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"teal\"\r\n                    style={{ width: \"100%\", height: \"45px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Commodity Service</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Condom Dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"condomDispensed\"\r\n                        id=\"condomDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.condomDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Lubricants Dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"lubricantsDispensed\"\r\n                        id=\"lubricantsDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.lubricantsDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Oral Quick/ HIVST dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"oralQuickDispensed\"\r\n                        id=\"oralQuickDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oralQuickDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>New Needles/Syringe Dispesend</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"newNeedleDispensed\"\r\n                        id=\"newNeedleDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.newNeedleDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Old Needles/Syringe Retrived</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"oldNeedleRetrived\"\r\n                        id=\"oldNeedleRetrived\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oldNeedleRetrived}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Nalxone Provided</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"nalxoneProvided\"\r\n                        id=\"nalxoneProvided\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.nalxoneProvided}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* </div> */}\r\n                  <div className=\"row d-flex\">\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"blue\"\r\n                      style={{ width: \"106%\", height: \"45px\" }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}>HIV Educaton Provided</h2>\r\n                    </LabelSui>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>IEC material/Pamphelt</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"iecMaterial\"\r\n                          id=\"iecMaterial\"\r\n                          onChange={handleInputChangeHivEducationProvided}\r\n                          value={hivEducationProvided.iecMaterial}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>InterPersonal Communication</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"interPersonalCommunication\"\r\n                          id=\"interPersonalCommunication\"\r\n                          onChange={handleInputChangeHivEducationProvided}\r\n                          value={\r\n                            hivEducationProvided.interPersonalCommunication\r\n                          }\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>Peer Group Communication</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"peerGroupCommunication\"\r\n                          id=\"peerGroupCommunication\"\r\n                          onChange={handleInputChangeHivEducationProvided}\r\n                          value={hivEducationProvided.peerGroupCommunication}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                {/* <div className='card'> */}\r\n\r\n                <div className=\" row d-flex\">\r\n                  <div className=\"row d-flex\">\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"blue\"\r\n                      style={{ width: \"106%\", height: \"45px\" }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}>Biomedical Services</h2>\r\n                    </LabelSui>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Screening</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreening\"\r\n                            id=\"stiScreening\"\r\n                            value={bioMedicalServices.stiScreening}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.stiScreening === \"1\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreeningResponse\"\r\n                            id=\"stiScreeningResponse\"\r\n                            value={bioMedicalServices.stiScreeningResponse}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Syndromic Management</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiSyndromicManagement\"\r\n                            id=\"stiSyndromicManagement\"\r\n                            value={bioMedicalServices.stiSyndromicManagement}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.stiSyndromicManagement === \"1\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label>Facility Referred to</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityReferredTo\"\r\n                            id=\"facilityReferredTo\"\r\n                            value={bioMedicalServices.facilityReferredTo}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Treatment/ Referral</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiTreatment\"\r\n                            id=\"stiTreatment\"\r\n                            value={bioMedicalServices.stiTreatment}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"1\"> Yes </option>\r\n                            <option value=\"0\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.stiTreatment === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to Sti Screening </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToStiScreening\"\r\n                            id=\"facilityRefferedToStiScreening\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToStiScreening\r\n                            }\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Screened for TB</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"screenedForTb\"\r\n                            id=\"screenedForTb\"\r\n                            value={bioMedicalServices.screenedForTb}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.screenedForTb === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToScreenedTo\"\r\n                            id=\"facilityRefferedToScreenedTo\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToScreenedTo\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided with TPT</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithTpt\"\r\n                            id=\"providedWithTpt\"\r\n                            value={bioMedicalServices.providedWithTpt}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Screened For Viral Heaptits</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"screenedForViralHepatits\"\r\n                            id=\"screenedForViralHepatits\"\r\n                            value={bioMedicalServices.screenedForViralHepatits}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"1\"> Yes </option>\r\n                            <option value=\"0\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.screenedForViralHepatits ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToScreenedForViralHepatits\"\r\n                            id=\"facilityRefferedToScreenedFclientVerificationObjorViralHepatits\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToScreenedForViralHepatits\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Viral Hepatits Screen Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"viralHepatitsScreenResult\"\r\n                            id=\"viralHepatitsScreenResult\"\r\n                            value={bioMedicalServices.viralHepatitsScreenResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Positive\"> Positive </option>\r\n                            <option value=\"Negative\"> Negative</option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.viralHepatitsScreenResult ===\r\n                        \"Positive\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                            id=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToViralHepatitsScreenResult\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Vaccination For Viral Hepatits</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"vaccinationForViralHepatits\"\r\n                            id=\"vaccinationForViralHepatits\"\r\n                            value={\r\n                              bioMedicalServices.vaccinationForViralHepatits\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.vaccinationForViralHepatits ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                            id=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToVaccinationForViralHepatits\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredFamilyPlanningServices\"\r\n                            id=\"offeredFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.offeredFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.offeredFamilyPlanningServices ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                            id=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToOfferedFamilyPlanningServices\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Refferred For Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForFamilyPlanningServices\"\r\n                            id=\"referredForFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.referredForFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.referredForFamilyPlanningServices ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                            id=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToReferredForFamilyPlanningServices\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided With Drug Rehab</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithDrugRehab\"\r\n                            id=\"providedWithDrugRehab\"\r\n                            value={bioMedicalServices.providedWithDrugRehab}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.providedWithDrugRehab === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                            id=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefeRredToProvidedWithDrugRehab\r\n                            }\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered MHPSS</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredMhpss\"\r\n                            id=\"offeredMhpss\"\r\n                            value={bioMedicalServices.offeredMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.offeredMhpss === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label>Facility Refferred to </Label> Type of MHpss\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToOfferedMhpss\"\r\n                            id=\"facilityRefferedToOfferedMhpss\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToOfferedMhpss\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            On Medical Assisted Therapy (MAT) for atleast\r\n                          </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"onMedicalAssistedTherapy\"\r\n                            id=\"onMedicalAssistedTherapy\"\r\n                            value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.onMedicalAssistedTherapy ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                            id=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToOnMedicalAssistedTherapy\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Recived Nalxone for Overdose Treatment</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"recivedNalxoneForOverdoseTreatment\"\r\n                            id=\"recivedNalxoneForOverdoseTreatment\"\r\n                            value={\r\n                              bioMedicalServices.recivedNalxoneForOverdoseTreatment\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row d-flex\">\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"blue\"\r\n                      style={{ width: \"106%\", height: \"45px\" }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}> Structural Services </h2>\r\n                    </LabelSui>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Provided or Reffered for Empowerment</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"providedOrRefferedForEmpowerment\"\r\n                          id=\"providedOrRefferedForEmpowerment\"\r\n                          value={\r\n                            structuralServices.recivedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"1\"> Yes </option>\r\n                          <option value=\"0\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                      {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                            id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment\r\n                            }\r\n                            onChange={handleInputChangestructuralServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Legal Aid Service Type</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"legalAidServiceType\"\r\n                          id=\"legalAidServiceType\"\r\n                          value={structuralServices.legalAidServiceType}\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"1\"> Yes </option>\r\n                          <option value=\"0\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.legalAidServiceType !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.legalAidServiceType}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                      {structuralServices.legalAidServiceType === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedLegalAidServiceType\"\r\n                            id=\"facilityRefferedLegalAidServiceType\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedLegalAidServiceType\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {/* END OF First DOSAGE */}\r\n              {saving ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                onClick={handleSubmit}\r\n                disabled={disabledAgeBaseOnAge}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={handleCancel}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport * as moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\n\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, selectedOptions, theme) {\r\n  return {\r\n    fontWeight:\r\n      selectedOptions.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nconst ViewUpdate = (props) => {\r\n  const theme = useTheme();\r\n  const patientObj = props.patientObj;\r\n  const location = useLocation();\r\n\r\n  const kpprevValues = location.state.patientObj;\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [htsCodeVal, setHtsCodeVal] = useState({});\r\n  const [prepCodeVal, setPrepCodeVal] = useState({});\r\n  let temp = { ...errors };\r\n  const classes = useStyles();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const [date, setDate] = useState({\r\n    dateServiceOffered: kpprevValues.dateServiceOffered,\r\n    service_provider: kpprevValues.serviceProvider,\r\n  });\r\n  const [htsServices, setHtsServices] = useState({\r\n    offeredHts: kpprevValues.htsServices.offered_hts,\r\n    acceptedHts: kpprevValues.htsServices.accepted_hts,\r\n    hivTestResult: kpprevValues.htsServices.hiv_test_result,\r\n    referredForArt: kpprevValues.htsServices.referred_for_art,\r\n  });\r\n  const [prepServices, setPrepServices] = useState({\r\n    offeredPrep: kpprevValues.prepServices.offered_prep,\r\n    acceptedPrep: kpprevValues.prepServices.accepted_prep,\r\n    referredForPrep: kpprevValues.prepServices.referred_for_prep,\r\n  });\r\n  const [commodityService, setCommodityService] = useState({\r\n    condomDispensed: kpprevValues.commodityServices.condoms_dispensed,\r\n    lubricantsDispensed: kpprevValues.commodityServices.lubricants_dispensed,\r\n    oralQuickDispensed: kpprevValues.commodityServices.hivst_kits_dispensed,\r\n    newNeedleDispensed: kpprevValues.commodityServices.new_needles_dispensed,\r\n    oldNeedleRetrived: kpprevValues.commodityServices.old_needles_dispensed,\r\n    nalxoneProvided: kpprevValues.commodityServices.naloxane_provided,\r\n    howmanycondomDispensed:\r\n      kpprevValues.commodityServices.how_many_condom_dispensed,\r\n    howmanylubricantsDispensed:\r\n      kpprevValues.commodityServices.how_many_lubricants_dispensed,\r\n    howmanyoralQuickDispensed:\r\n      kpprevValues.commodityServices.how_many_oral_quick_dispensed,\r\n    howmanynewNeedleDispensed:\r\n      kpprevValues.commodityServices.how_many_new_needle_dispensed,\r\n    howmanyoldNeedleRetrived:\r\n      kpprevValues.commodityServices.how_many_old_needle_retrived,\r\n    howmanynalxoneProvided:\r\n      kpprevValues.commodityServices.how_many_nalxone_provided,\r\n  });\r\n  const [hivEducationProvided, setHivEducationProvided] = useState({\r\n    iecMaterial: kpprevValues.hivEducationalServices?.iecMaterial,\r\n    interPersonalCommunication:\r\n      kpprevValues.hivEducationalServices?.interPersonalCommunication,\r\n    peerGroupCommunication:\r\n      kpprevValues.hivEducationalServices?.peerGroupCommunication,\r\n  });\r\n  const [bioMedicalServices, setbioMedicalServices] = useState({\r\n    stiScreening: kpprevValues.biomedicalServices?.sti_screening,\r\n    stiSyndromicManagement:\r\n      kpprevValues.biomedicalServices?.sti_syndromic_management,\r\n    stiTreatment: kpprevValues.biomedicalServices?.sti_treatment,\r\n    screenedForTb: kpprevValues.biomedicalServices?.screened_for_tb,\r\n    providedWithTpt: kpprevValues.biomedicalServices?.provided_with_tpt,\r\n    screenedForViralHepatits:\r\n      kpprevValues.biomedicalServices?.screened_for_viral_hepatitis,\r\n    viralHepatitsScreenResult:\r\n      kpprevValues.biomedicalServices?.viral_hepatitis_screen_result,\r\n    vaccinationForViralHepatits:\r\n      kpprevValues.biomedicalServices?.vaccination_for_viral_hepatitis,\r\n    offeredFamilyPlanningServices:\r\n      kpprevValues.biomedicalServices?.offered_family_planning_services,\r\n    referredForFamilyPlanningServices:\r\n      kpprevValues.biomedicalServices?.referred_for_family_planning_services,\r\n    providedWithDrugRehab:\r\n      kpprevValues.biomedicalServices?.provided_with_drug_rehab,\r\n    offeredMhpss: kpprevValues.biomedicalServices?.offered_mhpss,\r\n    onMedicalAssistedTherapy:\r\n      kpprevValues.biomedicalServices?.medical_assisted_therapy_for_six_months,\r\n    recivedNalxoneForOverdoseTreatment:\r\n      kpprevValues.biomedicalServices?.received_naloxone_for_overdose_treatment,\r\n    stiScreeningResult: kpprevValues.biomedicalServices?.sti_screening_result,\r\n    stifacilityReffered: kpprevValues.biomedicalServices?.sti_facility_referred,\r\n    tbfacilityReffered: kpprevValues.biomedicalServices?.tb_facility_reffered,\r\n    tbtreatmentrefferal: kpprevValues.biomedicalServices?.tb_treatment_refferal,\r\n    typeofMhpss: kpprevValues.biomedicalServices?.type_of_mhpss,\r\n    drugRehabfacilityReffered:\r\n      kpprevValues.biomedicalServices?.drug_rehab_facility_reffered,\r\n    refferedfacilitydrugrehab:\r\n      kpprevValues.biomedicalServices?.referred_facility_drug_rehab,\r\n  });\r\n  const [structuralServices, setstructuralServices] = useState({\r\n    providedOrRefferedForEmpowerment:\r\n      kpprevValues.structuralServices.providedEmpowerment,\r\n    legalAidServiceType: kpprevValues.structuralServices.legalAidServices,\r\n    peerGroupCommunication: \"\",\r\n    typeempowermentprovided:\r\n      kpprevValues.structuralServices.type_empowerment_provided,\r\n    typelegalempowerment: kpprevValues.structuralServices.typelegalempowerment,\r\n    legalprogramreferred: kpprevValues.structuralServices.legalprogramreferred,\r\n  });\r\n  const [facilityRefferedToo, setFacilityRefferedToo] = useState({\r\n    facilityRefferedToStiScreening: \"\",\r\n    facilityRefferedToScreenedTo: \"\",\r\n    facilityRefferedToScreenedForViralHepatits: \"\",\r\n    facilityRefferedToViralHepatitsScreenResult: \"\",\r\n    facilityRefferedToVaccinationForViralHepatits: \"\",\r\n    facilityRefferedToOfferedFamilyPlanningServices: \"\",\r\n    facilityRefferedToReferredForFamilyPlanningServices: \"\",\r\n    facilityRefeRredToProvidedWithDrugRehab: \"\",\r\n    facilityRefferedToOfferedMhpss: \"\",\r\n    facilityRefferedToOnMedicalAssistedTherapy: \"\",\r\n    facilityRefferedToRecievedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setDate({ ...date, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeReferred = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setFacilityRefferedToo({\r\n      ...facilityRefferedToo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeHtsService = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHtsServices({ ...htsServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangePrepServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setPrepServices({ ...prepServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCommodityServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setCommodityService({\r\n      ...commodityService,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangeHivEducationProvided = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHivEducationProvided({\r\n      ...hivEducationProvided,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangebioMedicalServices = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"screenedForTb\" && e.target.value === \"yes\") {\r\n      bioMedicalServices.providedWithTpt = \"\";\r\n    } else if (e.target.name === \"screenedForTb\" && e.target.value === \"no\") {\r\n      bioMedicalServices.tbtreatmentrefferal = \"\";\r\n    }\r\n    setbioMedicalServices({\r\n      ...bioMedicalServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangestructuralServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setstructuralServices({\r\n      ...structuralServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //Validations of the forms\r\n  const validateAttempt = () => {\r\n    temp.dateServiceOffered = date.dateServiceOffered\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  /* Remove  function **/\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateAttempt()) {\r\n      const biomedicalServiceValue = {\r\n        medical_assisted_therapy_for_six_months:\r\n          bioMedicalServices.onMedicalAssistedTherapy,\r\n        offered_family_planning_services:\r\n          bioMedicalServices.offeredFamilyPlanningServices,\r\n        offered_mhpss: bioMedicalServices.offeredMhpss,\r\n        provided_with_drug_rehab: bioMedicalServices.providedWithDrugRehab,\r\n        provided_with_tpt: bioMedicalServices.providedWithTpt,\r\n        received_naloxone_for_overdose_treatment:\r\n          bioMedicalServices.recivedNalxoneForOverdoseTreatment,\r\n        referred_for_family_planning_services:\r\n          bioMedicalServices.referredForFamilyPlanningServices,\r\n        screened_for_tb: bioMedicalServices.screenedForTb,\r\n        screened_for_viral_hepatitis:\r\n          bioMedicalServices.screenedForViralHepatits,\r\n        sti_screening: bioMedicalServices.stiScreening,\r\n        sti_syndromic_management: bioMedicalServices.stiSyndromicManagement,\r\n        sti_treatment: bioMedicalServices.stiTreatment,\r\n        vaccination_for_viral_hepatitis:\r\n          bioMedicalServices.vaccinationForViralHepatits,\r\n        viral_hepatitis_screen_result:\r\n          bioMedicalServices.viralHepatitsScreenResult,\r\n        sti_screening_result: bioMedicalServices.stiScreeningResult,\r\n        sti_facility_referred: bioMedicalServices.stifacilityReffered,\r\n        tb_facility_reffered: bioMedicalServices.tbfacilityReffered,\r\n        type_of_mhpss: bioMedicalServices.typeofMhpss,\r\n        drug_rehab_facility_reffered:\r\n          bioMedicalServices.drugRehabfacilityReffered,\r\n        referred_facility_drug_rehab:\r\n          bioMedicalServices.refferedfacilitydrugrehab,\r\n      };\r\n\r\n      const commodityServicesValue = {\r\n        condoms_dispensed: commodityService.condomDispensed,\r\n        hivst_kits_dispensed: commodityService.oralQuickDispensed,\r\n        lubricants_dispensed: commodityService.lubricantsDispensed,\r\n        naloxane_provided: commodityService.nalxoneProvided,\r\n        new_needles_dispensed: commodityService.newNeedleDispensed,\r\n        old_needles_dispensed: commodityService.oldNeedleRetrived,\r\n        how_many_condom_dispensed: commodityService.howmanycondomDispensed,\r\n        how_many_lubricants_dispensed:\r\n          commodityService.howmanylubricantsDispensed,\r\n        how_many_oral_quick_dispensed:\r\n          commodityService.howmanyoralQuickDispensed,\r\n        how_many_new_needle_dispensed:\r\n          commodityService.howmanynewNeedleDispensed,\r\n        how_many_old_needle_retrived: commodityService.howmanyoldNeedleRetrived,\r\n        how_many_nalxone_provided: commodityService.howmanynalxoneProvided,\r\n      };\r\n\r\n      const htsServicesValue = {\r\n        accepted_hts: htsServices.acceptedHts,\r\n        hiv_test_result: htsServices.hivTestResult,\r\n        offered_hts: htsServices.offeredHts,\r\n        referred_for_art: htsServices.referredForArt,\r\n      };\r\n\r\n      const prepServicesValue = {\r\n        accepted_prep: prepServices.acceptedPrep,\r\n        offered_prep: prepServices.offeredPrep,\r\n        referred_for_prep: prepServices.referredForPrep,\r\n      };\r\n\r\n      const structuralServicesValue = {\r\n        legalAidServices: structuralServices.legalAidServiceType,\r\n        providedEmpowerment:\r\n          structuralServices.providedOrRefferedForEmpowerment,\r\n        type_empowerment_provided: structuralServices.typeempowermentprovided,\r\n        typelegalempowerment: structuralServices.typelegalempowerment,\r\n        legalprogramreferred: structuralServices.legalprogramreferred,\r\n      };\r\n\r\n      const data = {\r\n        htsCode: kpprevValues?.htsCode,\r\n        prepCode: kpprevValues?.prepCode,\r\n        prevCode: kpprevValues.prevCode,\r\n        patientId: kpprevValues.uuid,\r\n        serviceProvider: date.service_provider,\r\n        target_group: kpprevValues.target_group,\r\n        dateServiceOffered: date.dateServiceOffered,\r\n        htsServices: htsServicesValue,\r\n        prepServices: prepServicesValue,\r\n        entryPoint: {},\r\n        bioMedicalServices: biomedicalServiceValue,\r\n        structuralServices: structuralServicesValue,\r\n        commodityServices: commodityServicesValue,\r\n        hivEducationalServices: hivEducationProvided,\r\n      };\r\n      console.log(\"update\", data);\r\n      setSaving(true);\r\n      axios\r\n        .put(`${baseUrl}kpprev/${kpprevValues.id}`, data, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          setSaving(false);\r\n          toast.success(\"Record Updated successfully\");\r\n          setDate({\r\n            dateServiceOffered: \"\",\r\n            service_provider: \"\",\r\n          });\r\n          setHtsServices({\r\n            offeredHts: \"\",\r\n            acceptedHts: \"\",\r\n            hivTestResult: \"\",\r\n            referredForArt: \"\",\r\n          });\r\n          setPrepServices({\r\n            offeredPrep: \"\",\r\n            acceptedPrep: \"\",\r\n            referredForPrep: \"\",\r\n          });\r\n          setCommodityService({\r\n            condomDispensed: \"\",\r\n            lubricantsDispensed: \"\",\r\n            oralQuickDispensed: \"\",\r\n            newNeedleDispensed: \"\",\r\n            oldNeedleRetrived: \"\",\r\n            nalxoneProvided: \"\",\r\n            howmanycondomDispensed: \"\",\r\n            howmanylubricantsDispensed: \"\",\r\n            howmanyoralQuickDispensed: \"\",\r\n            howmanynewNeedleDispensed: \"\",\r\n            howmanyoldNeedleRetrived: \"\",\r\n            howmanynalxoneProvided: \"\",\r\n          });\r\n          setHivEducationProvided({\r\n            iecMaterial: \"\",\r\n            interPersonalCommunication: \"\",\r\n            peerGroupCommunication: \"\",\r\n          });\r\n          setbioMedicalServices({\r\n            stiScreening: \"\",\r\n            stiSyndromicManagement: \"\",\r\n            stiTreatment: \"\",\r\n            screenedForTb: \"\",\r\n            providedWithTpt: \"\",\r\n            screenedForViralHepatits: \"\",\r\n            viralHepatitsScreenResult: \"\",\r\n            vaccinationForViralHepatits: \"\",\r\n            offeredFamilyPlanningServices: \"\",\r\n            referredForFamilyPlanningServices: \"\",\r\n            providedWithDrugRehab: \"\",\r\n            offeredMhpss: \"\",\r\n            onMedicalAssistedTherapy: \"\",\r\n            recivedNalxoneForOverdoseTreatment: \"\",\r\n            stiScreeningResult: \"\",\r\n            stifacilityReffered: \"\",\r\n            tbfacilityReffered: \"\",\r\n            typeofMhpss: \"\",\r\n            drugRehabfacilityReffered: \"\",\r\n          });\r\n          setstructuralServices({\r\n            providedOrRefferedForEmpowerment: \"\",\r\n            legalAidServiceType: \"\",\r\n            peerGroupCommunication: \"\",\r\n            typeempowermentprovided: \"\",\r\n            typelegalempowerment: \"\",\r\n            legalprogramreferred: \"\",\r\n          });\r\n          history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <Row>\r\n            <Link to={\"/\"}>\r\n              <ButtonMui\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2 mr-2 mt-2\"\r\n                //startIcon={<FaUserPlus size=\"10\"/>}\r\n                startIcon={<TiArrowBack />}\r\n                style={{\r\n                  backgroundColor: \"rgb(153, 46, 98)\",\r\n                  color: \"#fff\",\r\n                  height: \"35px\",\r\n                }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n              </ButtonMui>\r\n            </Link>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <form>\r\n              {/* <div className=\"card d-flex\"> */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  KEY POPULATION PREVENTION FORM\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"row d-flex\">\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <br />\r\n                  <FormGroup>\r\n                    <Label>Date Of Service Provisions</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dateServiceOffered\"\r\n                      value={date.dateServiceOffered}\r\n                      onChange={handleInputChange}\r\n                      id=\"dateServiceOffered\"\r\n                      max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    ></Input>\r\n                    {errors.dateServiceOffered !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateServiceOffered}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <br />\r\n                  <FormGroup>\r\n                    <Label>Hospital Number</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"hospitalNumber\"\r\n                      value={\r\n                        kpprevValues.htsCode !== null\r\n                          ? kpprevValues.htsCode\r\n                          : kpprevValues.prepCode\r\n                      }\r\n                      // onChange={handleInputChange}\r\n                      id=\"hospitalNumber\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      readonly\r\n                    ></Input>\r\n                    {errors.dateServiceOffered !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateServiceOffered}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <br />\r\n                  <FormGroup>\r\n                    <Label>Prevention Code</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"PrevCode\"\r\n                      value={kpprevValues.prevCode}\r\n                      // onChange={handleInputChange}\r\n                      id=\"PrevCode\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      readonly\r\n                    ></Input>\r\n                    {errors.dateServiceOffered !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateServiceOffered}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {/* HTS service */}\r\n\r\n                <LabelSui\r\n                  as=\"a\"\r\n                  color=\"teal\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"45px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                  ribbon\r\n                >\r\n                  <h2 style={{ color: \"#fff\" }}>HTS Services</h2>\r\n                </LabelSui>\r\n                <br />\r\n                <br />\r\n\r\n                <div className=\"form-group mb-10 col-xs-6 col-md-3 \">\r\n                  <FormGroup>\r\n                    <Label>Offered HTS</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"offeredHts\"\r\n                      id=\"offeredHts\"\r\n                      onChange={handleInputChangeHtsService}\r\n                      value={htsServices.offeredHts}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                  <FormGroup>\r\n                    <Label>Accepted HTS</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"acceptedHts\"\r\n                      id=\"acceptedHts\"\r\n                      onChange={handleInputChangeHtsService}\r\n                      value={htsServices.acceptedHts}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                {htsServices.acceptedHts === \"1\" ? (\r\n                  <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Hiv Test Result</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"hivTestResult\"\r\n                        id=\"hivTestResult\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.hivTestResult}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"positive\">Positive</option>\r\n                        <option value=\"negative\">Negative</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {htsServices.hivTestResult === \"positive\" ? (\r\n                  <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Reffered for ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"referredForArt\"\r\n                        id=\"referredForArt\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.referredForArt}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <LabelSui\r\n                  as=\"a\"\r\n                  color=\"teal\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"45px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                  ribbon\r\n                >\r\n                  <h2 style={{ color: \"#fff\" }}>PreP Services</h2>\r\n                </LabelSui>\r\n                <br />\r\n                <br />\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <FormGroup>\r\n                    <Label>Offered Prep</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"offeredPrep\"\r\n                      id=\"offeredPrep\"\r\n                      onChange={handleInputChangePrepServices}\r\n                      value={prepServices.offeredPrep}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <FormGroup>\r\n                    <Label>Accepted PreP</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"acceptedPrep\"\r\n                      id=\"acceptedPrep\"\r\n                      onChange={handleInputChangePrepServices}\r\n                      value={prepServices.acceptedPrep}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <FormGroup>\r\n                    <Label>Reffered for Prep</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"referredForPrep\"\r\n                      id=\"referredForPrep\"\r\n                      onChange={handleInputChangePrepServices}\r\n                      value={prepServices.referredForPrep}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"1\">Yes</option>\r\n                      <option value=\"0\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Commodity Service</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Condom Dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"condomDispensed\"\r\n                        id=\"condomDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.condomDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.condomDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Condom Dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanycondomDispensed\"\r\n                          id=\"howmanycondomDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanycondomDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Lubricants Dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"lubricantsDispensed\"\r\n                        id=\"lubricantsDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.lubricantsDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.lubricantsDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>How Many Lubricants Dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanylubricantsDispensed\"\r\n                          id=\"howmanylubricantsDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanylubricantsDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Oral Quick/ HIVST dispensed</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"oralQuickDispensed\"\r\n                        id=\"oralQuickDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oralQuickDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.oralQuickDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Oral Quick/ HIVST dispensed</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanyoralQuickDispensed\"\r\n                          id=\"howmanyoralQuickDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanyoralQuickDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>New Needles/Syringe Dispesend</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"newNeedleDispensed\"\r\n                        id=\"newNeedleDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.newNeedleDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.newNeedleDispensed === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>How Many New Needles/Syringe Dispesend</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanynewNeedleDispensed\"\r\n                          id=\"howmanynewNeedleDispensed\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanynewNeedleDispensed}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Old Needles/Syringe Retrived</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"oldNeedleRetrived\"\r\n                        id=\"oldNeedleRetrived\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oldNeedleRetrived}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.oldNeedleRetrived === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>Old Needles/Syringe Retrived</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanyoldNeedleRetrived\"\r\n                          id=\"howmanyoldNeedleRetrived\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanyoldNeedleRetrived}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Nalxone Provided</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"nalxoneProvided\"\r\n                        id=\"nalxoneProvided\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.nalxoneProvided}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {commodityService.nalxoneProvided === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <FormGroup>\r\n                        <Label>How Many Nalxone Provided</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"howmanynalxoneProvided\"\r\n                          id=\"howmanynalxoneProvided\"\r\n                          onChange={handleInputChangeCommodityServices}\r\n                          value={commodityService.howmanynalxoneProvided}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>HIV Educaton Provided</h2>\r\n                  </LabelSui>\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>IEC materials/pamphlets provided </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"iecMaterial\"\r\n                        id=\"iecMaterial\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.iecMaterial}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>InterPersonal Communication</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"interPersonalCommunication\"\r\n                        id=\"interPersonalCommunication\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.interPersonalCommunication}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>Peer Group Communication</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"peerGroupCommunication\"\r\n                        id=\"peerGroupCommunication\"\r\n                        onChange={handleInputChangeHivEducationProvided}\r\n                        value={hivEducationProvided.peerGroupCommunication}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              {/* <div className='card'> */}\r\n\r\n              <div className=\" row d-flex\">\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Biomedical Services</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Screening</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiScreening\"\r\n                          id=\"stiScreening\"\r\n                          value={bioMedicalServices.stiScreening}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"yes\">Yes</option>\r\n                          <option value=\"no\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.stiScreening === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Screening Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreeningResult\"\r\n                            id=\"stiScreeningResult\"\r\n                            value={bioMedicalServices.stiScreeningResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"positive\">Positive</option>\r\n                            <option value=\"negative\">Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.stiScreeningResult === \"positive\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Treatment/ Referral</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiTreatment\"\r\n                            id=\"stiTreatment\"\r\n                            value={bioMedicalServices.stiTreatment}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.stiTreatment === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"stifacilityReffered\"\r\n                          id=\"stifacilityReffered\"\r\n                          value={bioMedicalServices.stifacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Syndromic Management</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiSyndromicManagement\"\r\n                          id=\"stiSyndromicManagement\"\r\n                          value={bioMedicalServices.stiSyndromicManagement}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Screened for TB</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"screenedForTb\"\r\n                          id=\"screenedForTb\"\r\n                          value={bioMedicalServices.screenedForTb}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.screenedForTb === \"no\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided with TPT</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithTpt\"\r\n                            id=\"providedWithTpt\"\r\n                            value={bioMedicalServices.providedWithTpt}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.screenedForTb === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>TB treatment/referral </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"tbtreatmentrefferal\"\r\n                            id=\"tbtreatmentrefferal\"\r\n                            value={bioMedicalServices.tbtreatmentrefferal}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {bioMedicalServices.tbtreatmentrefferal === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"tbfacilityReffered\"\r\n                          id=\"tbfacilityReffered\"\r\n                          value={bioMedicalServices.tbfacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Screened For Viral Heaptits</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"screenedForViralHepatits\"\r\n                          id=\"screenedForViralHepatits\"\r\n                          value={bioMedicalServices.screenedForViralHepatits}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.screenedForViralHepatits === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Viral Hepatits Screen Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"viralHepatitsScreenResult\"\r\n                            id=\"viralHepatitsScreenResult\"\r\n                            value={bioMedicalServices.viralHepatitsScreenResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"positive\"> Positive </option>\r\n                            <option value=\"negative\"> Negative</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Vaccination For Viral Hepatits</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"vaccinationForViralHepatits\"\r\n                          id=\"vaccinationForViralHepatits\"\r\n                          value={bioMedicalServices.vaccinationForViralHepatits}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"Yes\"> Yes </option>\r\n                          <option value=\"No\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Offered Family Planning Services</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"offeredFamilyPlanningServices\"\r\n                          id=\"offeredFamilyPlanningServices\"\r\n                          value={\r\n                            bioMedicalServices.offeredFamilyPlanningServices\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.offeredFamilyPlanningServices ===\r\n                      \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Refferred For Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForFamilyPlanningServices\"\r\n                            id=\"referredForFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.referredForFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Provided With Drug Rehab</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"providedWithDrugRehab\"\r\n                          id=\"providedWithDrugRehab\"\r\n                          value={bioMedicalServices.providedWithDrugRehab}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered MHPSS</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredMhpss\"\r\n                            id=\"offeredMhpss\"\r\n                            value={bioMedicalServices.offeredMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.offeredMhpss === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Type of MHPSS Provided</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"typeofMhpss\"\r\n                            id=\"typeofMhpss\"\r\n                            value={bioMedicalServices.typeofMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Referred to facility for Drug Rehab </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"refferedfacilitydrugrehab\"\r\n                            id=\"refferedfacilitydrugrehab\"\r\n                            value={bioMedicalServices.refferedfacilitydrugrehab}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"yes\"> Yes </option>\r\n                            <option value=\"no\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    {bioMedicalServices.refferedfacilitydrugrehab === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label>Drug Rehab Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"drugRehabfacilityReffered\"\r\n                          id=\"drugRehabfacilityReffered\"\r\n                          value={bioMedicalServices.drugRehabfacilityReffered}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          On Medical Assisted Therapy (MAT) for atleast 6 months\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"onMedicalAssistedTherapy\"\r\n                          id=\"onMedicalAssistedTherapy\"\r\n                          value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Recived Nalxone for Overdose Treatment</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"recivedNalxoneForOverdoseTreatment\"\r\n                          id=\"recivedNalxoneForOverdoseTreatment\"\r\n                          value={\r\n                            bioMedicalServices.recivedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}> Structural Services </h2>\r\n                  </LabelSui>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Provided or Reffered for Empowerment</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"providedOrRefferedForEmpowerment\"\r\n                        id=\"providedOrRefferedForEmpowerment\"\r\n                        value={\r\n                          structuralServices.providedOrRefferedForEmpowerment\r\n                        }\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                    {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                      \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Type of Empowerment Provided </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"typeempowermentprovided\"\r\n                          id=\"typeempowermentprovided\"\r\n                          value={structuralServices.typeempowermentprovided}\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Legal Aid Service Type</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"legalAidServiceType\"\r\n                        id=\"legalAidServiceType\"\r\n                        value={structuralServices.legalAidServiceType}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {structuralServices.legalAidServiceType === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Label> Type of Legal Empowerment Provided </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"typelegalempowerment\"\r\n                        id=\"typelegalempowerment\"\r\n                        value={structuralServices.typelegalempowerment}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {structuralServices.legalAidServiceType === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <Label> Legal Program referred </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"legalprogramreferred\"\r\n                        id=\"legalprogramreferred\"\r\n                        value={structuralServices.legalprogramreferred}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    style={{\r\n                      width: \"106%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}> Service Provider </h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Name of service provider</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"service_provider\"\r\n                        id=\"service_provider\"\r\n                        value={date.service_provider}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n\r\n                      {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                    </FormGroup>\r\n                    {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                      \"Yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <Label> Facility Refferred to </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                          id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                          value={\r\n                            facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* </div> */}\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                //hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n                onClick={handleSubmit}\r\n                style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n                //disabled={attemptList.length <= 0 && !saving ? true : false}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n              </MatButton>\r\n              {/* </div> */}\r\n            </form>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default ViewUpdate;\r\n","import React from \"react\";\r\nimport { MemoryRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Home from \"./main/webapp/jsx/components/Home\";\r\nimport PatientDetail from \"./main/webapp/jsx/components/Patient/PatientDetail\";\r\nimport RegisterPatientPage from \"./main/webapp/jsx/components/Patient/RegisterPatient\";\r\nimport EnrollPatientPage from \"./main/webapp/jsx/components/Patient/EnrollPatient\";\r\nimport UpdatePatientEnrollment from \"./main/webapp/jsx/components/Patient/UpdatePatientEnrollment\";\r\nimport KpPrev from \"./main/webapp/jsx/components/KpPrev\";\r\nimport ViewUpdate from \"./main/webapp/jsx/components/KpPrev/ViewUpdate\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route>\r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n          <Route path=\"/kp-prev\">\r\n            <KpPrev />\r\n          </Route>\r\n          <Route path=\"/view-kp-prev\">\r\n            <ViewUpdate />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}