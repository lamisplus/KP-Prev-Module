{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/KpPrev/KpPrevEnrolled.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/KpPrev/index.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","calculate_age","dob","today","Date","birthDate","age_now","getFullYear","getMonth","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","get","concat","baseUrl","pageSize","page","search","headers","then","response","result","records","map","row","name","firstName","lastName","hospital_number","participantId","gender","age","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","size","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","KpPrevEnrolled","split","m","getDate","count","Label","vaccinationStatus","divStyle","borderRadius","Home","_useState","useState","_useState2","_slicedToArray","key","setKey","Fragment","className","startIcon","FaUserPlus","textTransform","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","classes","console","log","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","TiArrowBack","dateParts","dateObject","moment","format","identifier","phoneNumber","contactPoint","find","obj","type","value","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","useStyles","navItemText","SubMenu","patientObjs","_useState3","_useState4","Observation","observation","filter","x","catch","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","getAge","Vaccination","errors","setErrors","temp","covidEffect","setCovidEffect","_useState5","_useState6","vaccine","setVaccine","_useState7","adverseEffect","batchNumber","doseNumber","location","patientId","vaccinationFacility","vaccineDate","_useState8","objValues","setObjValues","_useState9","_useState10","saving","setSaving","VACCINE","COVID_ADVERSE_EFFECT","handleInputChange","e","_defineProperty","target","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","CardBody","_Fragment","FormGroup","Input","onChange","InputGroup","max","MatButton","SaveIcon","preventDefault","Object","values","every","post","toast","loadPatients","disabled","CancelIcon","PatientVaccinationHistory","vacinationList","setVaccinationtList","modal","setModal","_React$useState","React","_React$useState2","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","setRecord","patients","_patients","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","vaccineName","position","Dropdown","item","LoadEditModal","IconMenu","LoadDeleteModal","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","VaccinationHistory","PatientnHistory","recentActivities","setRecentActivities","loading","setLoading","useHistory","PatientHistory","personId","activities","LoadViewPage","action","path","actionType","isLoading","date","viewable","Icon","LoadDeletePage","fontFamily","border","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","setDevices","pageLoading","setPageLoading","_React$useState3","_React$useState4","showCapture","setshowCapture","_React$useState5","_React$useState6","setTryAgain","_React$useState7","_React$useState8","setSuccess","_useState11","_useState12","_useState13","_useState14","storedBiometrics","setStoredBiometrics","_useState15","_useState16","capturedFingered","setCapturedFingered","_useState17","_useState18","setSelectedFingers","getPersonBiometrics","bgcolor","green","_ref","_callee3","fingersCodeset","_context3","sent","_ref2","personCapturedFingers","biometricItems","_biometricItems","length","_","uniq","extend","captured","includes","_x","_ref3","_callee2","_context2","_x2","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","finger","_toConsumableArray","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","for","deviceName","selectedDevice","errorType","errorName","required","_ref4","validate","window","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","datatype","responses","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","_useState19","_useState20","chronicMedicationModal","setChronicMedicationModal","_useState21","_useState22","supportiveCareModal","setSupportiveCareModal","_useState23","_useState24","vaccinationHistory","setVaccinationHistory","_useState25","_useState26","inclusionHistory","setInclusionHistory","_useState27","_useState28","demograhicHistory","setDemographicHistory","_useState29","_useState30","vitalHistory","setVitalHistory","_useState31","_useState32","comobitieHistory","setComobitieHistory","_useState33","_useState34","reinfectionHistory","setReinfectionHistory","_useState35","_useState36","signsSymptomsHistory","setSignsSymptomsHistory","_useState37","_useState38","chronicMedicationHistory","setChronicMedicationHistory","_useState39","_useState40","medicationHistory","setMedicationHistory","_useState41","_useState42","supportiveCarenHistory","setSupportiveCareHistory","CardContent","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","Demographic","VitalSign","Comorbitie","SignsSymptoms","flexGrow","KpPrev","useTheme","dateOfObservation","facilityId","visitId","offeredHts","acceptedHts","hivTestResult","refferedForArt","htsService","setHtsService","offeredPrep","acceptedPrep","refferedForPrep","prepServices","setPrepServices","condomDispensed","lubricantsDispensed","oralQuickDispensed","newNeedleDispensed","oldNeedleRetrived","nalxoneProvided","commodityService","setCommodityService","iecMaterial","interPersonalCommunication","peerGroupCommunication","hivEducationProvided","setHivEducationProvided","stiScreening","stiSyndromicManagement","stiTreatment","screenedForTb","providedWithTpt","screenedForViralHepatits","viralHepatitsScreenResult","vaccinationForViralHepatits","offeredFamilyPlanningServices","refferedForFamilyPlanningServices","providedWithDrugRehab","offeredMhpss","onMedicalAssistedTherapy","recivedNalxoneForOverdoseTreatment","bioMedicalService","setBioMedicalService","handleInputChangeHtsService","handleInputChangePrepServices","handleInputChangeCommodityServices","handleInputChangeHivEducationProvided","handleInputChangeBioMedicalServices","facilityRefferedTo","Spinner","art","setArt","activeTab","prepId","PatientCardDetail","AddmissionHome","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","_useState43","active","contact","dateOfBirth","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","middleName","relatives","setRelatives","contacts","setContacts","disabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","patientDTO","userDetail","user","useLocation","showContactCard","setShowContactCard","knownMedicalCondition","medicalCondition","occupation","vaccineId","visitDate","_useState44","_useState45","hospitalNumStatus","setHospitalNumStatus","_useState46","_useState47","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","GetCountry","setStateByCountryId","useCallback","t0","_callee4","_context4","_callee5","_context5","sort","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","_ref6","_callee6","hosiptalNumber","_context6","hospitalNumber","uniqueId","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","_ref7","_callee7","newConatctsInfo","patientForm","_context7","contactInfo","fullName","surname","push","landmark","person","vaccinationEnrollment","POSITION","BOTTOM_CENTER","subErrors","_useState48","_useState49","_useState50","_useState51","_useState52","_useState53","_useState54","_useState55","_useState56","_useState57","replace","slice","handleInputChangePhoneNumber","inputName","NumberValue","checkNumberLimit","onClickContactCard","onClickRelativeCard","autoClose","hideProgressBar","margingRight","min","defaultChecked","ageNumber","currentDate","setDate","setMonth","dobNew","toISOString","Math","abs","maritalStatusOption","occupationOption","educationOption","FaPlus","FaAngleDown","getCountryId","relative","splice","handleEditRelative","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","substr","setDisabledAgeBaseOnAge","settopLevelUnitCountryOptions","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","setSourceReferral","hivStatus","setHivStatus","setEnrollSetting","setTbStatus","setKP","_useState58","_useState59","_useState60","setPregnancyStatus","_useState61","_useState62","_useState63","_useState64","setOvcEnrolled","_useState65","_useState66","getSex","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","identifiers","altphone","country","maritalStatus","employmentStatus","education","getStateId","patientAge","sex","alert","getSexId","dateOfRegistration1","checkPhoneNumberBasic","_ref8","_callee8","_context8","TOP_RIGHT","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","AddIcon","code","maxWidth","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","enrollment","getCharacters","_ref9","_callee9","_context9","hivEnrollment","put","handleCheckBox","checked","floor","random","htmlFor","App","Router","Switch","Route","PatientDetail","RegisterPatientPage","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.dd3db930.chunk.js","sourcesContent":["// export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\n// export const url = '/api/v1/'\r\n\r\nexport const url =  'http://localhost:8383/api/v1/';\r\nexport const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzA5MjExNTE3fQ.cxLi3KOzrFlpKcgm8Vp451gOHEqYgHM8kPsy6fI8flYvAcEYIvkJ_KusVUTBwQZlAIDPobgNvHWSG4oFrIQ2Fw';","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        //const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        // if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        //     age_now--;\r\n        // }\r\n\r\n        // if (age_now === 0) {\r\n        //     return m + \" month(s)\";\r\n        // }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    //count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}> Patient Dashboard </span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst KpPrevEnrolled = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KpPrevEnrolled;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList'\r\n//import PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport KpPrevEnrolled from \"./KpPrev/KpPrevEnrolled\";\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>KP-PREV</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"vaccinated\" title=\"Vaccinated Patients\">                   \r\n                    <PatientVaccinatedLIst />\r\n                  </Tab> */}\r\n                  <Tab eventKey=\"kpprev\" title=\"Kp-Prev\">                   \r\n                    <KpPrevEnrolled />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n    const getPhoneNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(\r\n        (obj) => obj.type === \"phone\"\r\n      );\r\n      return phoneNumber ? phoneNumber.value : \"\";\r\n    };\r\n    const getAddress = (identifier) => {\r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find((obj) => obj.city);\r\n      const houseAddress =\r\n        address && address.line[0] !== null ? address.line[0] : \"\";\r\n      const landMark =\r\n        address && address.city && address.city !== null ? address.city : \"\";\r\n      return address ? houseAddress + \" \" + landMark : \"\";\r\n    };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                        {getPhoneNumber(patientObj.contactPoint)}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)}{\" \"}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    // const loadVaccination = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    // }\r\n    // const loadIcu = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'icu'})\r\n    // }\r\n    // const loadAddmission = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    // }\r\n    // const onClickDischarge = (row) =>{        \r\n    //     props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    // }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadKpPrev = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:\"kp-prev\"})\r\n    }\r\n    // const loadPatientHistory = ()=>{\r\n    //     //setActiveItem('history')\r\n    //     props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    // }\r\n\r\n\r\n    return ( \r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>      \r\n                <Menu.Item onClick={() => loadKpPrev()} > Kp-Prev</Menu.Item>               \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n    console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>       \r\n            <br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Vaccination History \"\r\n              columns={[\r\n                { title: \"Vaccine\", field: \"vaccine\", filtering: false },\r\n                {\r\n                  title: \"Vaccine Date\",\r\n                  field: \"vaccineDate\",\r\n                },\r\n                \r\n                { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                { title: \"Location\", field: \"location\", filtering: false },      \r\n                { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ vacinationList.map((row) => ({\r\n                    vaccine: row.vaccineName,\r\n                    vaccineDate: row.vaccineDate,\r\n                    batchNumber: row.batchNumber,\r\n                    doseNumber: row.doseNumber,\r\n                    location: row.location,\r\n                    vaccinationFacility: row.vaccinationFacility,\r\n                    adverseEffect: row.adverseEffect,\r\n                    actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>\r\n                  \r\n                  }))}\r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { Fragment} from \"react\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Card,CardBody, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Table  } from \"react-bootstrap\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport Select from '@mui/material/Select';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } ,\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n}))\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\n  function getStyles(name, selectedOptions, theme) {\r\n    return {\r\n      fontWeight:\r\n        selectedOptions.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst KpPrev = (props) =>{\r\n    const theme = useTheme();\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    const patientObj = props.patientObj;\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    const classes = useStyles()\r\n   \r\n    const [saving, setSaving] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    // const [optionsForCallOutCome, setOptionsForCallOutCome] = useState([]);\r\n    const [observation, setObservation]=useState({\r\n            data: {},\r\n            dateOfObservation: \"\",\r\n            facilityId: null,\r\n            personId: 0,\r\n            type: \"Client Verificatio n\",\r\n            visitId: null\r\n    })\r\n    const [htsService, setHtsService] = useState({  \r\n            offeredHts:\"\",\r\n            acceptedHts:\"\",\r\n            hivTestResult:\"\",\r\n            refferedForArt:\"\",\r\n            \r\n    \r\n    });\r\n    const [prepServices,setPrepServices]= useState({\r\n            offeredPrep:\"\",\r\n            acceptedPrep:\"\",\r\n            refferedForPrep:\"\"\r\n\r\n\r\n\r\n    })\r\n    const [commodityService, setCommodityService] =useState({\r\n          condomDispensed:\"\",\r\n          lubricantsDispensed:\"\",\r\n          oralQuickDispensed:\"\",\r\n          newNeedleDispensed:\"\",\r\n          oldNeedleRetrived:\"\",\r\n          nalxoneProvided:\"\"\r\n\r\n    })\r\n    const [hivEducationProvided, setHivEducationProvided] =useState({\r\n            iecMaterial:\"\",\r\n            interPersonalCommunication:\"\",\r\n            peerGroupCommunication:\"\"\r\n    })\r\n    const [bioMedicalService, setBioMedicalService] = useState({\r\n        stiScreening:\"\",\r\n        stiSyndromicManagement:\"\",\r\n        stiTreatment:\"\",\r\n        screenedForTb:\"\",\r\n        providedWithTpt:\"\",\r\n        screenedForViralHepatits:\"\",\r\n        viralHepatitsScreenResult:\"\",\r\n        vaccinationForViralHepatits:\"\",\r\n        offeredFamilyPlanningServices:\"\",\r\n        refferedForFamilyPlanningServices:\"\",\r\n        providedWithDrugRehab:\"\",\r\n        offeredMhpss:\"\",\r\n        onMedicalAssistedTherapy:\"\",\r\n        recivedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n    });\r\n\r\n    \r\n    // useEffect(() => {\r\n    //         if(props.activeContent.actionType==='update' || props.activeContent.actionType==='view'){\r\n    //             GetFormDetail(props.activeContent.id)\r\n    //         }\r\n    // }, [props.activeContent.actionType]);\r\n    // const GetFormDetail =(id)=>{\r\n    //     axios\r\n    //         .get(`${baseUrl}observation/${id}`,\r\n    //             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n    //         )\r\n    //         .then((response) => {\r\n    //             const Obj= response.data\r\n    //             setObservation({...Obj})\r\n    //             //setClientVerificationObj({...Obj.data})\r\n    //             setAttemptList([...Obj.data.attempt]);\r\n    //             setSelected([...Obj.data.anyOfTheFollowing])\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             //console.log(error);\r\n    //         });\r\n    // }\r\n\r\n    const handleInputChangeHtsService= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHtsService({...htsService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangePrepServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setPrepServices({...prepServices,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeCommodityServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setCommodityService({...commodityService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeHivEducationProvided = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHivEducationProvided({...hivEducationProvided,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    const handleInputChangeBioMedicalServices = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setBioMedicalService ({...bioMedicalService,  [e.target.name]: e.target.value});\r\n       \r\n    }\r\n\r\n    //Validations of the forms\r\n    // const validateAttempt = () => { \r\n    //     //attempt.verificationAttempts=selected\r\n    //     temp.indicationForClientVerification = selected.length > 0 ? \"\" : \"This field is required\";\r\n    //     temp.dateOfAttempt =attempt.dateOfAttempt?\"\": \"This field is required\"\r\n    //     temp.verificationStatus = attempt.verificationStatus ? \"\" : \"This field is required\"\r\n    //     temp.outcome = attempt.outcome ? \"\" : \"This field is required\"\r\n    //     temp.verificationAttempts = attempt.verificationAttempts ? \"\" : \"This field is required\"\r\n    //     setErrors({\r\n    //         ...temp\r\n    //     })\r\n    //     return Object.values(temp).every(x => x === \"\")\r\n    // }\r\n    // const clientVerificationFormObj = () => {\r\n    //     clientVerificationObj.anyOfTheFollowing=selected\r\n    //     temp.serialEnrollmentNo =clientVerificationObj.serialEnrollmentNo?\"\": \"This field is required\"\r\n    //     temp.discontinuation = clientVerificationObj.discontinuation ? \"\" : \"This field is required\"\r\n    //     temp.anyOfTheFollowing = clientVerificationObj.anyOfTheFollowing ? \"\" : \"This field is required\"\r\n    //     setErrors({\r\n    //         ...temp\r\n    //     })\r\n    //     return Object.values(temp).every(x => x === \"\")\r\n    // }\r\n   \r\n    /* Remove  function **/\r\n    \r\n    \r\n    /**** Submit Button Processing  */\r\n    // const handleSubmit = (e) => {        \r\n    //     e.preventDefault();\r\n    //     clientVerificationObj.attempt=attemptList // Assgining all the attempted list to the ClientVerifiction Object \r\n    //     observation.data=clientVerificationObj\r\n    //     if(clientVerificationFormObj()) {\r\n    //         if (attemptList.length > 0) {\r\n    //             observation.dateOfObservation = observation.dateOfObservation !== \"\" ? observation.dateOfObservation : moment(new Date()).format(\"YYYY-MM-DD\")\r\n    //             observation.personId = patientObj.id\r\n    //             // observation.data=attemptList        \r\n    //             setSaving(true);\r\n    //             if(props.activeContent && props.activeContent.actionType==='update'){//If the the action type is update\r\n    //                 axios.put(`${baseUrl}observation/${props.activeContent.id}`, observation,\r\n    //                     {headers: {\"Authorization\": `Bearer ${token}`}},\r\n    //                 )\r\n    //                     .then(response => {\r\n    //                         setSaving(false);\r\n    //                         toast.success(\"Client Verfication form Save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         props.setActiveContent({...props.activeContent, route: 'recent-history'})\r\n\r\n    //                     })\r\n    //                     .catch(error => {\r\n    //                         setSaving(false);\r\n    //                         if (error.response && error.response.data) {\r\n    //                             let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n    //                             if (error.response.data.apierror && error.response.data.apierror.message !== \"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message !== \"\") {\r\n    //                                 toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             } else {\r\n    //                                 toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             }\r\n    //                         } else {\r\n    //                             toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         }\r\n    //                     });\r\n    //             }else{//this is to call the POST API\r\n    //                 axios.post(`${baseUrl}observation`, observation,\r\n    //                     {headers: {\"Authorization\": `Bearer ${token}`}},\r\n    //                 )\r\n    //                     .then(response => {\r\n    //                         setSaving(false);\r\n    //                         toast.success(\"Client Verfication form Save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         props.setActiveContent({...props.activeContent, route: 'recent-history'})\r\n\r\n    //                     })\r\n    //                     .catch(error => {\r\n    //                         setSaving(false);\r\n    //                         if (error.response && error.response.data) {\r\n    //                             let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n    //                             if (error.response.data.apierror && error.response.data.apierror.message !== \"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message !== \"\") {\r\n    //                                 toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             } else {\r\n    //                                 toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             }\r\n    //                         } else {\r\n    //                             toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         }\r\n    //                     });\r\n    //             }\r\n\r\n    //         } else {\r\n    //             toast.error(\"Attempt to Contact can not be empty\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //         }\r\n    //     }else{\r\n    //         toast.error(\"All fields are required\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //     }\r\n       \r\n    // }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row d-flex\">\r\n              <h2>KEY POPULATION PREVENTION FORM </h2>\r\n              <br />\r\n              <br />\r\n            </div>\r\n\r\n            <div className=\"row d-flex\">\r\n              <h2>Service Provider </h2>\r\n              <br />\r\n              <br />\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Date Of Service Provisions \r\n                </Label>\r\n                <Input\r\n                type=\"date\"\r\n                name=\"dateOfServiceProvisions\"\r\n                value=\"\"\r\n                id=\"dateOfServiceProvisions\"\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <h2>HTS Services</h2>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered HTS\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredHts\"\r\n                id=\"offeredHts\"\r\n                onChange ={handleInputChangeHtsService}\r\n                value={htsService.offeredHts}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted HTS\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedHts\"\r\n                id=\"acceptedHts\"\r\n                onChange=\"handleInputChangeHtsService\"\r\n                value={htsService.acceptedHts}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Hiv Test Result\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"hivTestResult\"\r\n                id=\"hivTestResult\"\r\n                onChange={handleInputChangeHtsService}\r\n                value={htsService.hivTestResult}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for ART\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"refferedForArt\"\r\n                id=\"refferedForArt\"\r\n                onChange={handleInputChangeHtsService}\r\n                value={htsService.refferedForArt}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row d-flex\">\r\n             \r\n              <h2>PreP Services</h2>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredPrep\"\r\n                id=\"offeredPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.offeredPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted PreP\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedPrep\"\r\n                id=\"acceptedPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.acceptedPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              \r\n              {/* <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Hiv Test Result\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"htsService\"\r\n                id=\"htsService\"\r\n                onChange=\"handleInputChangePrepServices\"\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div> */}\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"refferedForPrep\"\r\n                id=\"refferedForPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.refferedForPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n             \r\n             <h2>Commodity Service</h2>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                Condom Dispensed \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"condomDispensed\"\r\n               id=\"condomDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.condomDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               Lubricants Dispensed\r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"lubricantsDispensed\"\r\n               id=\"lubricantsDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.lubricantsDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Oral Quick/ HIVST dispensed \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"oralQuickDispensed\"\r\n               id=\"oralQuickDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.oralQuickDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 New Needles/Syringe Dispesend \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"newNeedleDispensed\"\r\n               id=\"newNeedleDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.newNeedleDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Old Needles/Syringe Retrived  \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"oldNeedleRetrived\"\r\n               id=\"oldNeedleRetrived\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.oldNeedleRetrived}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Nalxone Provided \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"nalxoneProvided\"\r\n               id=\"nalxoneProvided\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.nalxoneProvided}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n           </div>\r\n           <div className=\"row d-flex\">\r\n             \r\n             <h2>HIV Education Provided </h2>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                IEC material/Pamphelt \r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"iecMaterial\"\r\n               id=\"iecMaterial\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.iecMaterial}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                 <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               InterPersonal Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"interPersonalCommunication\"\r\n               id=\"interPersonalCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.interPersonalCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Peer Group Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"peerGroupCommunication\"\r\n               id=\"peerGroupCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.peerGroupCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n           </div>\r\n           <div className=\"row d-flex\">\r\n             \r\n             <h2>Biomedical Services </h2>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI screening\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={bioMedicalService.stiScreening}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiScreening === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  \r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreeningResponse\"\r\n                    id=\"stiScreeningResponse\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Syndromic Management\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiSyndromicManagement\"\r\n                    id=\"stiSyndromicManagement\"\r\n                    value={bioMedicalService.stiSyndromicManagement}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiSyndromicManagement === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    value={bioMedicalService.facilityRefferedTo} \r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Treatment/ Referral\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiTreatment\"\r\n                    id=\"stiTreatment\"\r\n                    value={bioMedicalService.stiTreatment}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={ioMedicalServices.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened for TB\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForTb\"\r\n                    id=\"screenedForTb\"\r\n                    value={bioMedicalService.screenedForTb}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.screenedForTb === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided with TPT\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithTpt\"\r\n                    id=\"providedWithTpt\"\r\n                    value={bioMedicalService.providedWithTpt}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened For Viral Heaptits \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForViralHepatits\"\r\n                    id=\"screenedForViralHepatits\"\r\n                    value={bioMedicalService.screenedForViralHepatits}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.screenedForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Viral Hepatits Screen Result \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"viralHepatitsScreenResult\"\r\n                    id=\"viralHepatitsScreenResult\"\r\n                    value={bioMedicalService.viralHepatitsScreenResult}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Positive\"> Positive </option>\r\n                    <option value=\"Negative\"> Negative</option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.viralHepatitsScreenResult === \"Positive\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Vaccination For Viral Hepatits\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"vaccinationForViralHepatits\"\r\n                    id=\"vaccinationForViralHepatits\"\r\n                    value={bioMedicalService.vaccinationForViralHepatits}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.vaccinationForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredFamilyPlanningServices\"\r\n                    id=\"offeredFamilyPlanningServices\"\r\n                    value={bioMedicalService.offeredFamilyPlanningServices}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.offeredFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Refferred For Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"refferedForFamilyPlanningServices\"\r\n                    id=\"refferedForFamilyPlanningServices\"\r\n                    value={bioMedicalService.refferedForFamilyPlanningServices}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.refferedForFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided With Drug Rehab\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithDrugRehab\"\r\n                    id=\"providedWithDrugRehab\"\r\n                    value={bioMedicalService.providedWithDrugRehab}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.providedWithDrugRehab === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered MHPSS\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredMhpss\"\r\n                    id=\"offeredMhpss\"\r\n                    value={bioMedicalService.offeredMhpss}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.offeredMhpss === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label>Facility Refferred to </Label> Type  of MHpss \r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                  \r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  On Medical Assisted Therapy (MAT) for atleast\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"onMedicalAssistedTherapy\"\r\n                    id=\"onMedicalAssistedTherapy\"\r\n                    value={bioMedicalService.onMedicalAssistedTherapy}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.onMedicalAssistedTherapy === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Recived Nalxone for Overdose Treatment \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"recivedNalxoneForOverdoseTreatment\"\r\n                    id=\"recivedNalxoneForOverdoseTreatment\"\r\n                    value={bioMedicalService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n             </div>\r\n\r\n             <div className=\"row d-flex\">\r\n             \r\n                <h2>Structural Services </h2>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided or Reffered for Empowerment\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedOrRefferedForEmpowerment\"\r\n                    id=\"providedOrRefferedForEmpowerment\"\r\n                    //value={structuralService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {/* {structuralService.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )} */}\r\n\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                 Legal Aid Service Type\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"legalAidServiceType\"\r\n                    id=\"legalAidServiceType\"\r\n                    //value={structuralService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {/* {structuralService.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )} */}\r\n\r\n                </div>\r\n             </div>\r\n\r\n\r\n\r\n             </div>\r\n            {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n\r\n            {/* <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n              disabled={attemptList.length <= 0 && !saving ? true : false}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {\" \"}\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update\"\r\n                    : \"Save\"}\r\n                </span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update...\"\r\n                    : \"Save...\"}\r\n                </span>\r\n              )}\r\n            </MatButton> */}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default KpPrev;\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\nimport KpPrev from '../KpPrev';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >KP-PREV /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}  \r\n\r\n          {activeContent.route==='kp-prev' &&(<KpPrev patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}       \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        COVID_ADVERSE_EFFECT()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    //COVID_ADVERSE_EFFECT\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n        }\r\n                \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value === \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value === \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const [htsService, setHtsService] = useState({  \r\n        offeredHts:\"\",\r\n        acceptedHts:\"\",\r\n        hivTestResult:\"\",\r\n        refferedForArt:\"\",\r\n        \r\n\r\n});\r\nconst [prepServices,setPrepServices]= useState({\r\n        offeredPrep:\"\",\r\n        acceptedPrep:\"\",\r\n        refferedForPrep:\"\"\r\n\r\n\r\n\r\n})\r\nconst [commodityService, setCommodityService] =useState({\r\n      condomDispensed:\"\",\r\n      lubricantsDispensed:\"\",\r\n      oralQuickDispensed:\"\",\r\n      newNeedleDispensed:\"\",\r\n      oldNeedleRetrived:\"\",\r\n      nalxoneProvided:\"\"\r\n\r\n})\r\nconst [hivEducationProvided, setHivEducationProvided] =useState({\r\n        iecMaterial:\"\",\r\n        interPersonalCommunication:\"\",\r\n        peerGroupCommunication:\"\"\r\n})\r\nconst [bioMedicalService, setBioMedicalService] = useState({\r\n    stiScreening:\"\",\r\n    stiSyndromicManagement:\"\",\r\n    stiTreatment:\"\",\r\n    screenedForTb:\"\",\r\n    providedWithTpt:\"\",\r\n    screenedForViralHepatits:\"\",\r\n    viralHepatitsScreenResult:\"\",\r\n    vaccinationForViralHepatits:\"\",\r\n    offeredFamilyPlanningServices:\"\",\r\n    refferedForFamilyPlanningServices:\"\",\r\n    providedWithDrugRehab:\"\",\r\n    offeredMhpss:\"\",\r\n    onMedicalAssistedTherapy:\"\",\r\n    recivedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n});\r\n\r\n    \r\n    const handleInputChangeHtsService= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHtsService({...htsService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangePrepServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setPrepServices({...prepServices,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeCommodityServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setCommodityService({...commodityService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeHivEducationProvided = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHivEducationProvided({...hivEducationProvided,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    const handleInputChangeBioMedicalServices = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setBioMedicalService ({...bioMedicalService,  [e.target.name]: e.target.value});\r\n       \r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Kp-Prev /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration===\"\" ? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        \r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"5\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <p><b style={{color:\"red\"}}>{basicInfo.age!==\"\" && basicInfo.age< 5 ? \"The minimum age is 5\" : \" \"} </b></p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                    {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showContactCard && (\r\n                                  <div className=\"card-body\">\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'phoneNumber')}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                                  {errors.phoneNumber !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                      ) : \"\" }\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Alt. Phone Number</Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"altPhonenumber\"\r\n                                                    id=\"altPhonenumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'altPhonenumber')}}\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                 />\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Email</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"email\"\r\n                                                      name=\"email\"\r\n                                                      id=\"email\"\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      value={basicInfo.email}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      required\r\n                                                  />\r\n                                                \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Street Address <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"address\"\r\n                                                      id=\"address\"\r\n                                                      value={basicInfo.address}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                  />\r\n                                                {errors.address !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.address}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Landmark</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"landmark\"\r\n                                                      id=\"landmark\"\r\n                                                      value={basicInfo.landmark}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      \r\n                                                  />\r\n                                                  \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                    {showRelative===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showRelative && (\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                                                        <Input\r\n                                                                            type=\"text\"\r\n                                                                            name=\"phone\"\r\n                                                                            id=\"phone\"\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                            value={relatives.phone}\r\n                                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {errors.phone !==\"\" ? (\r\n                                                                            <span className={classes.error}>{errors.phone}</span>\r\n                                                                            ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                                    {/* </div> */}\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Adding First DOSAGE FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Key Population Prevention </h5>\r\n                                </div>\r\n\r\n                                \r\n            <div className=\"row d-flex\">\r\n              <h2>Service Provider </h2>\r\n              <br />\r\n              <br />\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Date Of Service Provisions \r\n                </Label>\r\n                <Input\r\n                type=\"date\"\r\n                name=\"dateOfServiceProvisions\"\r\n                value=\"\"\r\n                id=\"dateOfServiceProvisions\"\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <h2>HTS Services</h2>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered HTS\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredHts\"\r\n                id=\"offeredHts\"\r\n                onChange ={handleInputChangeHtsService}\r\n                value={htsService.offeredHts}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted HTS\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedHts\"\r\n                id=\"acceptedHts\"\r\n                onChange=\"handleInputChangeHtsService\"\r\n                value={htsService.acceptedHts}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Hiv Test Result\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"hivTestResult\"\r\n                id=\"hivTestResult\"\r\n                onChange={handleInputChangeHtsService}\r\n                value={htsService.hivTestResult}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for ART\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"refferedForArt\"\r\n                id=\"refferedForArt\"\r\n                onChange={handleInputChangeHtsService}\r\n                value={htsService.refferedForArt}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row d-flex\">\r\n             \r\n              <h2>PreP Services</h2>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredPrep\"\r\n                id=\"offeredPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.offeredPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted PreP\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedPrep\"\r\n                id=\"acceptedPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.acceptedPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              \r\n              {/* <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Hiv Test Result\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"htsService\"\r\n                id=\"htsService\"\r\n                onChange=\"handleInputChangePrepServices\"\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div> */}\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"refferedForPrep\"\r\n                id=\"refferedForPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.refferedForPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n             \r\n             <h2>Commodity Service</h2>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                Condom Dispensed \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"condomDispensed\"\r\n               id=\"condomDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.condomDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               Lubricants Dispensed\r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"lubricantsDispensed\"\r\n               id=\"lubricantsDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.lubricantsDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Oral Quick/ HIVST dispensed \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"oralQuickDispensed\"\r\n               id=\"oralQuickDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.oralQuickDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 New Needles/Syringe Dispesend \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"newNeedleDispensed\"\r\n               id=\"newNeedleDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.newNeedleDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Old Needles/Syringe Retrived  \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"oldNeedleRetrived\"\r\n               id=\"oldNeedleRetrived\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.oldNeedleRetrived}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Nalxone Provided \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"nalxoneProvided\"\r\n               id=\"nalxoneProvided\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.nalxoneProvided}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n           </div>\r\n           <div className=\"row d-flex\">\r\n             \r\n             <h2>HIV Education Provided </h2>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                IEC material/Pamphelt \r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"iecMaterial\"\r\n               id=\"iecMaterial\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.iecMaterial}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                 <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               InterPersonal Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"interPersonalCommunication\"\r\n               id=\"interPersonalCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.interPersonalCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Peer Group Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"peerGroupCommunication\"\r\n               id=\"peerGroupCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.peerGroupCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n           </div>\r\n           <div className=\"row d-flex\">\r\n             \r\n             <h2>Biomedical Services </h2>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI screening\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={bioMedicalService.stiScreening}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiScreening === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  \r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreeningResponse\"\r\n                    id=\"stiScreeningResponse\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Syndromic Management\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiSyndromicManagement\"\r\n                    id=\"stiSyndromicManagement\"\r\n                    value={bioMedicalService.stiSyndromicManagement}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiSyndromicManagement === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    value={bioMedicalService.facilityRefferedTo} \r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Treatment/ Referral\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiTreatment\"\r\n                    id=\"stiTreatment\"\r\n                    value={bioMedicalService.stiTreatment}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={ioMedicalServices.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened for TB\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForTb\"\r\n                    id=\"screenedForTb\"\r\n                    value={bioMedicalService.screenedForTb}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.screenedForTb === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided with TPT\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithTpt\"\r\n                    id=\"providedWithTpt\"\r\n                    value={bioMedicalService.providedWithTpt}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened For Viral Heaptits \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForViralHepatits\"\r\n                    id=\"screenedForViralHepatits\"\r\n                    value={bioMedicalService.screenedForViralHepatits}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.screenedForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Viral Hepatits Screen Result \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"viralHepatitsScreenResult\"\r\n                    id=\"viralHepatitsScreenResult\"\r\n                    value={bioMedicalService.viralHepatitsScreenResult}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Positive\"> Positive </option>\r\n                    <option value=\"Negative\"> Negative</option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.viralHepatitsScreenResult === \"Positive\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Vaccination For Viral Hepatits\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"vaccinationForViralHepatits\"\r\n                    id=\"vaccinationForViralHepatits\"\r\n                    value={bioMedicalService.vaccinationForViralHepatits}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.vaccinationForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredFamilyPlanningServices\"\r\n                    id=\"offeredFamilyPlanningServices\"\r\n                    value={bioMedicalService.offeredFamilyPlanningServices}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.offeredFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Refferred For Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"refferedForFamilyPlanningServices\"\r\n                    id=\"refferedForFamilyPlanningServices\"\r\n                    value={bioMedicalService.refferedForFamilyPlanningServices}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.refferedForFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided With Drug Rehab\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithDrugRehab\"\r\n                    id=\"providedWithDrugRehab\"\r\n                    value={bioMedicalService.providedWithDrugRehab}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.providedWithDrugRehab === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered MHPSS\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredMhpss\"\r\n                    id=\"offeredMhpss\"\r\n                    value={bioMedicalService.offeredMhpss}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.offeredMhpss === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label>Facility Refferred to </Label> Type  of MHpss \r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                  \r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  On Medical Assisted Therapy (MAT) for atleast\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"onMedicalAssistedTherapy\"\r\n                    id=\"onMedicalAssistedTherapy\"\r\n                    value={bioMedicalService.onMedicalAssistedTherapy}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.onMedicalAssistedTherapy === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Recived Nalxone for Overdose Treatment \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"recivedNalxoneForOverdoseTreatment\"\r\n                    id=\"recivedNalxoneForOverdoseTreatment\"\r\n                    value={bioMedicalService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n             </div>\r\n\r\n             <div className=\"row d-flex\">\r\n             \r\n                <h2>Structural Services </h2>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided or Reffered for Empowerment\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedOrRefferedForEmpowerment\"\r\n                    id=\"providedOrRefferedForEmpowerment\"\r\n                    //value={structuralService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {/* {structuralService.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )} */}\r\n\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                 Legal Aid Service Type\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"legalAidServiceType\"\r\n                    id=\"legalAidServiceType\"\r\n                    //value={structuralService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {/* {structuralService.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )} */}\r\n\r\n                </div>\r\n             </div>\r\n\r\n\r\n\r\n             </div>\r\n\r\n                            \r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport KpPrev from \"./main/webapp/jsx/components/KpPrev\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n          <Route path=\"/kp-prev\">\r\n            <KpPrev />\r\n          </Route>\r\n\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}