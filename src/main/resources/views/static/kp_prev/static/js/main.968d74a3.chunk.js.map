{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/utils/index.js","main/webapp/jsx/components/KpPrev/KpPrevEnrolled.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/KpPrev/KpPrevHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/KpPrev/index.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","calculate_age","dob","today","Date","birthDate","split","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","concat","baseUrl","pageSize","page","headers","then","response","result","records","map","row","name","firstName","lastName","hospital_number","gender","age","dateOfBirth","undefined","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","size","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","todayMonth","todayYear","todayDate","birthDateMonth","birthDateYear","birthdateDate","assumedAge","monthGap","dateGap","monthOld","KpPrevEnrolled","Authorization","participantId","count","Label","vaccinationStatus","divStyle","borderRadius","Home","_useState","useState","_useState2","_slicedToArray","key","setKey","Fragment","className","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","classes","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","startIcon","TiArrowBack","textTransform","phoneNumber","contactPoint","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","useStyles","navItemText","SubMenu","patientObjs","_useState3","_useState4","Observation","observation","filter","x","catch","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","getAge","Vaccination","errors","setErrors","temp","covidEffect","setCovidEffect","_useState5","_useState6","vaccine","setVaccine","_useState7","adverseEffect","batchNumber","doseNumber","patientId","vaccinationFacility","vaccineDate","_useState8","objValues","setObjValues","_useState9","_useState10","saving","setSaving","VACCINE","COVID_ADVERSE_EFFECT","handleInputChange","e","_defineProperty","target","dateParts","dateObject","moment","format","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","CardBody","_Fragment","FormGroup","Input","onChange","InputGroup","max","MatButton","SaveIcon","preventDefault","Object","values","every","post","toast","loadPatients","disabled","CancelIcon","KpPrevHistory","setVaccinationtList","modal","setModal","_React$useState","React","_React$useState2","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","patients","_patients","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","render","rowData","position","Dropdown","item","Icon","dateOfServicesProvided","action","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","setRecentActivities","setLoadingRecent","RecentActivities","fontFamily","border","marginLeft","lineHeight","Biometrics","InclusionCriteria","useHistory","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","for","datatype","required","responses","_ref3","_ref4","entries","_ref","_ref2","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","history","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","_useState11","_useState12","vitalSignModal","setVitalSignModal","_useState13","_useState14","reInfectionModal","setReinfectionModal","_useState15","_useState16","signsSymptomsModal","setSignsSymptomsModal","_useState17","_useState18","medicationModal","setMedicationModal","_useState19","_useState20","chronicMedicationModal","setChronicMedicationModal","_useState21","_useState22","supportiveCareModal","setSupportiveCareModal","_useState23","_useState24","vaccinationHistory","setVaccinationHistory","_useState25","_useState26","inclusionHistory","setInclusionHistory","_useState27","_useState28","demograhicHistory","setDemographicHistory","_useState29","_useState30","vitalHistory","setVitalHistory","_useState31","_useState32","comobitieHistory","setComobitieHistory","_useState33","_useState34","reinfectionHistory","setReinfectionHistory","_useState35","_useState36","signsSymptomsHistory","setSignsSymptomsHistory","_useState37","_useState38","chronicMedicationHistory","setChronicMedicationHistory","_useState39","_useState40","medicationHistory","setMedicationHistory","_useState41","_useState42","supportiveCarenHistory","setSupportiveCareHistory","CardContent","Grid","padded","Column","Segment","raised","as","ribbon","cursor","List","divided","Content","floated","Demographic","VitalSign","Comorbitie","SignsSymptoms","flexGrow","KpPrev","useTheme","_htsCodeVal$htsClient3","_prepCodeVal$prepDtoL","htsCodeVal","setHtsCodeVal","prepCodeVal","setPrepCodeVal","console","log","htsCode","clientCode","hivStatus","hivPositive","htsClientDtoList","prevCode","uniqueId","prepStatus","prepDtoList","dateServiceOffered","service_provider","date","setDate","offeredHts","acceptedHts","hivTestResult","referredForArt","htsServices","setHtsServices","offeredPrep","acceptedPrep","referredForPrep","prepServices","setPrepServices","condomDispensed","lubricantsDispensed","oralQuickDispensed","newNeedleDispensed","oldNeedleRetrived","nalxoneProvided","howmanycondomDispensed","howmanylubricantsDispensed","howmanyoralQuickDispensed","howmanynewNeedleDispensed","howmanyoldNeedleRetrived","howmanynalxoneProvided","commodityService","setCommodityService","iecMaterial","interPersonalCommunication","peerGroupCommunication","hivEducationProvided","setHivEducationProvided","stiScreening","stiSyndromicManagement","stiTreatment","screenedForTb","providedWithTpt","screenedForViralHepatits","viralHepatitsScreenResult","vaccinationForViralHepatits","offeredFamilyPlanningServices","referredForFamilyPlanningServices","providedWithDrugRehab","offeredMhpss","onMedicalAssistedTherapy","recivedNalxoneForOverdoseTreatment","stiScreeningResult","stifacilityReffered","tbfacilityReffered","typeofMhpss","drugRehabfacilityReffered","bioMedicalServices","setbioMedicalServices","providedOrRefferedForEmpowerment","legalAidServiceType","typeempowermentprovided","typelegalempowerment","legalprogramreferred","structuralServices","setstructuralServices","facilityRefferedToStiScreening","facilityRefferedToScreenedTo","facilityRefferedToScreenedForViralHepatits","facilityRefferedToViralHepatitsScreenResult","facilityRefferedToVaccinationForViralHepatits","facilityRefferedToOfferedFamilyPlanningServices","facilityRefferedToReferredForFamilyPlanningServices","facilityRefeRredToProvidedWithDrugRehab","facilityRefferedToOfferedMhpss","facilityRefferedToOnMedicalAssistedTherapy","facilityRefferedToRecievedNalxoneForOverdoseTreatment","facilityRefferedToo","handleInputChangeHtsService","handleInputChangePrepServices","handleInputChangeCommodityServices","handleInputChangeHivEducationProvided","handleInputChangebioMedicalServices","tbtreatmentrefferal","handleInputChangestructuralServices","length","LabelSui","refferedfacilitydrugrehab","Spinner","_htsCodeVal$htsClient","_htsCodeVal$htsClient2","biomedicalServiceValue","medical_assisted_therapy_for_six_months","offered_family_planning_services","offered_mhpss","provided_with_drug_rehab","provided_with_tpt","received_naloxone_for_overdose_treatment","referred_for_family_planning_services","screened_for_tb","screened_for_viral_hepatitis","sti_screening","sti_syndromic_management","sti_treatment","vaccination_for_viral_hepatitis","viral_hepatitis_screen_result","sti_screening_result","sti_facility_reffered","tb_facility_reffered","type_of_mhpss","drug_rehab_facility_reffered","commodityServicesValue","condoms_dispensed","hivst_kits_dispensed","lubricants_dispensed","naloxane_provided","new_needles_dispensed","old_needles_dispensed","how_many_condom_dispensed","how_many_lubricants_dispensed","how_many_oral_quick_dispensed","how_many_new_needle_dispensed","how_many_old_needle_retrived","how_many_nalxone_provided","htsServicesValue","accepted_hts","hiv_test_result","offered_hts","referred_for_art","prepServicesValue","accepted_prep","offered_prep","referred_for_prep","structuralServicesValue","legalAidServices","providedEmpowerment","type_empowerment_provided","randomString","characters","i","charAt","Math","floor","random","generateRandomString","prepCode","uuid","serviceProvider","target_group","targetGroup","entryPoint","commodityServices","hivEducationalServices","actionType","art","setArt","activeTab","prepId","PatientCardDetail","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","_useState43","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","middleName","relatives","setRelatives","contacts","setContacts","disabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","person","vaccinationEnrollment","patientDTO","userDetail","user","useLocation","showContactCard","setShowContactCard","knownMedicalCondition","medicalCondition","occupation","vaccineId","visitDate","_useState44","_useState45","hospitalNumStatus","setHospitalNumStatus","_useState46","_useState47","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","GetCountry","setStateByCountryId","useCallback","sent","t0","_callee2","_context2","_callee3","_context3","_callee4","_context4","_callee5","_context5","sort","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","_ref6","_callee6","hosiptalNumber","_context6","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","_ref7","_callee7","newConatctsInfo","patientForm","_context7","contactInfo","fullName","surname","push","landmark","organisationUnitId","postalCode","assignerId","htsService","POSITION","BOTTOM_CENTER","subErrors","_x","_useState48","_useState49","_useState50","_useState51","_useState52","refferedForPrep","_useState53","_useState54","_useState55","_useState56","_useState57","_useState58","_useState59","_useState60","_useState61","_useState62","_useState63","setFacilityRefferedToo","handleInputChangeReferred","replace","slice","handleInputChangePhoneNumber","inputName","NumberValue","checkNumberLimit","onClickContactCard","onClickRelativeCard","ToastContainer","autoClose","hideProgressBar","margingRight","min","index","defaultChecked","ageNumber","currentDate","setMonth","dobNew","toISOString","abs","maritalStatusOption","occupationOption","educationOption","FaPlus","FaAngleDown","getCountryId","relative","splice","handleEditRelative","FontAwesomeIcon","_toConsumableArray","handleDeleteRelative","checkPhoneNumber","validateRelatives","stiScreeningResponse","facilityReferredTo","facilityRefferedLegalAidServiceType","substr","setDisabledAgeBaseOnAge","settopLevelUnitCountryOptions","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","personId","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","setSourceReferral","setHivStatus","setEnrollSetting","setTbStatus","setKP","setPregnancyStatus","_useState64","setOvcEnrolled","_useState65","_useState66","getSex","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","identifiers","altphone","country","maritalStatus","employmentStatus","education","getStateId","patientAge","sex","alert","getSexId","validate","dateOfRegistration1","checkPhoneNumberBasic","_ref8","_callee8","_context8","TOP_RIGHT","_x2","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","AddIcon","code","maxWidth","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","enrollment","getCharacters","_ref9","_callee9","_context9","hivEnrollment","put","handleCheckBox","checked","htmlFor","App","Router","Switch","Route","path","PatientDetail","RegisterPatientPage","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.968d74a3.chunk.js","sourcesContent":["export const token = new URLSearchParams(window.location.search).get(\"jwt\");\r\nexport const url = \"/api/v1/\";\r\n\r\n//export const url = \"http://localhost:8383/api/v1/\";\r\n//export const token =\r\n//  \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzEwMDM5ODY4fQ.6tI1yjSTRWEPmWgjlTLM5xyJ2yWRI7Mnna3Kr1WhnNTVEYE7zOVl5NewPkpBBRiQr34wdSLwTvnVJVzclWdJxw\";\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    // const calculate_age = (dob) => {\r\n    //     const today = new Date();\r\n    //     //const dateParts = dob.split(\"-\");\r\n    //     const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    //     let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    //     const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    //     // if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n    //     //     age_now--;\r\n    //     // }\r\n\r\n    //     // if (age_now === 0) {\r\n    //     //     return m + \" month(s)\";\r\n    //     // }\r\n    //     return age_now + \" year(s)\";\r\n    // };\r\n\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Status\", field: \"v_status\", filtering: false },\r\n            //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}patient?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: getHospitalNumber(row.identifier),\r\n                                   \r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                   age: (row.dateOfBirth === 0 ||\r\n                                    row.dateOfBirth === undefined ||\r\n                                    row.dateOfBirth === null ||\r\n                                    row.dateOfBirth === \"\" )\r\n                                    ? 0\r\n                                    : calculate_age(row.dateOfBirth),\r\n                                    \r\n                                    //count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}> Patient Dashboard </span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","export const calculate_age = (dob) => {\r\n  if (dob !== null && dob != \"\") {\r\n    //Check if the DOB is not null or empty\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob);\r\n\r\n    // get the day, month and year of today\r\n    let todayMonth = today.getMonth();\r\n    let todayYear = today.getFullYear();\r\n    let todayDate = today.getDate();\r\n\r\n    // get the day, month and year from date of birth\r\n    let birthDateMonth = birthDate.getMonth();\r\n    let birthDateYear = birthDate.getFullYear();\r\n    let birthdateDate = birthDate.getDate();\r\n\r\n    // substract birthdate year from today year  ie todayYear - birthdateYear which  will give  \"AssumedAge\" is the age  we assume the patient will clock this year\r\n\r\n    let assumedAge = todayYear - birthDateYear;\r\n    if (assumedAge > 0) {\r\n      //Checking the month to confirm if the age has been cloocked\r\n\r\n      let monthGap = todayMonth - birthDateMonth;\r\n\r\n      // If 'monthGap'> 0, the age has been clocked, 'monthGap'< 0, the age has not been clocked, 'monthGap'= 0, we are in the month then check date to confirm clocked age\r\n\r\n      if (monthGap > 0) {\r\n        return assumedAge + \" year(s)\";\r\n      } else if (monthGap < 0) {\r\n        let confirmedAge = assumedAge - 1;\r\n        return confirmedAge + \" year(s)\";\r\n      } else if (monthGap === 0) {\r\n        let dateGap = todayDate - birthdateDate;\r\n\r\n        if (dateGap > 0) {\r\n          return assumedAge + \" year(s)\";\r\n        } else if (dateGap < 0) {\r\n          let confirmedAge = assumedAge - 1;\r\n          return confirmedAge + \" year(s)\";\r\n        }\r\n      }\r\n    } else {\r\n      let monthGap = todayMonth - birthDateMonth;\r\n      let dateGap = todayDate - birthdateDate;\r\n\r\n      let monthOld = monthGap > 0 ? monthGap : 0;\r\n      let DayOld = dateGap > 0 ? dateGap : 0;\r\n\r\n      let result = monthOld ? monthOld + \"month(s)\" : DayOld + \"day(s)\";\r\n      return result;\r\n    }\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { calculate_age } from \"../../../utils\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst KpPrevEnrolled = (props) => {\r\n  // const calculate_age = (dob) => {\r\n  //     const today = new Date();\r\n  //     const dateParts = dob.split(\"-\");\r\n  //     const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n  //     let age_now = today.getFullYear() - birthDate.getFullYear();\r\n  //     const m = today.getMonth() - birthDate.getMonth();\r\n\r\n  //     if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n  //         age_now--;\r\n  //     }\r\n\r\n  //     if (age_now === 0) {\r\n  //         return m + \" month(s)\";\r\n  //     }\r\n  //     return age_now + \" year(s)\";\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n          { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        //isLoading={loading}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}patient?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data:\r\n                    result.data.records &&\r\n                    result.data.records !== null &&\r\n                    result.data.records.map((row) => ({\r\n                      name: row.firstName + \" \" + row.lastName,\r\n                      hospital_number: row.participantId,\r\n                      gender: row.gender !== null ? row.gender.display : \"\",\r\n                      age: calculate_age(row.dateOfBirth),\r\n\r\n                      count: (\r\n                        <Label color=\"blue\" size=\"mini\">\r\n                          {row.vaccinationStatus}\r\n                        </Label>\r\n                      ),\r\n\r\n                      actions: (\r\n                        <div>\r\n                          <Link\r\n                            to={{\r\n                              pathname: \"/patient-history\",\r\n                              state: { patientObj: row },\r\n                            }}\r\n                          >\r\n                            <ButtonGroup\r\n                              variant=\"contained\"\r\n                              aria-label=\"split button\"\r\n                              style={{\r\n                                backgroundColor: \"rgb(153, 46, 98)\",\r\n                                height: \"30px\",\r\n                                width: \"215px\",\r\n                              }}\r\n                              size=\"large\"\r\n                            >\r\n                              <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                aria-label=\"select merge strategy\"\r\n                                aria-haspopup=\"menu\"\r\n                                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                              >\r\n                                <MdDashboard />\r\n                              </Button>\r\n                              <Button\r\n                                style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                              >\r\n                                <span\r\n                                  style={{\r\n                                    fontSize: \"12px\",\r\n                                    color: \"#fff\",\r\n                                    fontWeight: \"bolder\",\r\n                                  }}\r\n                                >\r\n                                  Patient Dashboard\r\n                                </span>\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                          </Link>\r\n                        </div>\r\n                      ),\r\n                    })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KpPrevEnrolled;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport PatientList from \"./Patient/PatientList\";\r\n//import PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport KpPrevEnrolled from \"./KpPrev/KpPrevEnrolled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState(\"home\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>KP-PREV</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      {/* <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link> */}\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n\r\n                  <Tab eventKey=\"kpprev\" title=\"KP_PrEV Patients\">\r\n                    <KpPrevEnrolled />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { calculate_age } from \"../../../utils\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CaptureBiometric from \"./CaptureBiometric\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj;\r\n\r\n  //console.log(\"in\", patientObj);\r\n\r\n  useEffect(() => {}, [props.patientObj]);\r\n\r\n  const get_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n  // const calculate_age = dob => {\r\n  //   var today = new Date();\r\n  //   var dateParts = dob.split(\"-\");\r\n  //   var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n  //   var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n  //   var age_now = today.getFullYear() - birthDate.getFullYear();\r\n  //   var m = today.getMonth() - birthDate.getMonth();\r\n  //       if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n  //               age_now--;\r\n  //           }\r\n  //       if (age_now === 0) {\r\n  //               return m + \" month(s)\";\r\n  //           }\r\n  //           return age_now + \" year(s)\";\r\n  // };\r\n  const getPhoneNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers.contactPoint.find(\r\n      (obj) => obj.type === \"phone\"\r\n    );\r\n    return phoneNumber ? phoneNumber.value : \"\";\r\n  };\r\n  const getAddress = (identifier) => {\r\n    const identifiers = identifier;\r\n    const address = identifiers.address.find((obj) => obj.city);\r\n    const houseAddress =\r\n      address && address.line[0] !== null ? address.line[0] : \"\";\r\n    const landMark =\r\n      address && address.city && address.city !== null ? address.city : \"\";\r\n    return address ? houseAddress + \" \" + landMark : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    {patientObj.firstName + \" \" + patientObj.lastName}\r\n                  </b>\r\n                  <Link to={\"/\"}>\r\n                    <ButtonMui\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-end ms-2 mr-2 mt-2\"\r\n                      //startIcon={<FaUserPlus size=\"10\"/>}\r\n                      startIcon={<TiArrowBack />}\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                        color: \"#fff\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                    </ButtonMui>\r\n                  </Link>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Patient ID :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>{patientObj.id}</b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>{patientObj.dateOfBirth}</b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {calculate_age(patientObj.dateOfBirth)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Gender :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj.gender !== null\r\n                        ? patientObj.gender.display\r\n                        : \"\"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getPhoneNumber(patientObj.contactPoint)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getAddress(patientObj.address)}{\" \"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    // const loadVaccination = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    // }\r\n    // const loadIcu = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'icu'})\r\n    // }\r\n    // const loadAddmission = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    // }\r\n    // const onClickDischarge = (row) =>{        \r\n    //     props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    // }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadKpPrev = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:\"kp-prev\"})\r\n    }\r\n    // const loadPatientHistory = ()=>{\r\n    //     //setActiveItem('history')\r\n    //     props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    // }\r\n\r\n\r\n    return ( \r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>      \r\n                <Menu.Item onClick={() => loadKpPrev()} > Kp-Prev</Menu.Item>               \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from \"semantic-ui-react\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Vaccination from \"./../Vaccination/AddViccination\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n  const [vacinationList, setVaccinationtList] = useState([]);\r\n  const patientObj = props && props.patientObj ? props.patientObj : [];\r\n  const [modal, setModal] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [openDeleteModal, setOpenDeleteModal] = React.useState(false);\r\n  const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n  const [record, setRecord] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients Vaccinations\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setVaccinationtList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const loadVaccinationModal = (row) => {\r\n    setModal(!modal);\r\n  };\r\n  const LoadEditModal = (row) => {\r\n    setRecord(row);\r\n    toggle();\r\n  };\r\n  const LoadDeleteModal = (row) => {\r\n    toggleDeleteModal();\r\n    setRecord(row);\r\n  };\r\n\r\n  const dummyData = [\r\n    {\r\n      dateOfServicesProvided: \"2023-10-15\", // Dummy date for the first column\r\n      action: \"Sample Action\", // Dummy data for the second column\r\n    },\r\n    {\r\n      dateOfServicesProvided: \"2023-11-20\", // Another dummy date\r\n      action: \"Another Action\", // Another dummy action\r\n    },\r\n    // Add more objects for additional rows as needed\r\n  ];\r\n  const handleAction = (rowData) => {\r\n    // Define your action handling logic here\r\n    console.log(\"Action clicked for:\", rowData);\r\n  };\r\n\r\n  const LoadVie43wPage = (row, action) => {\r\n    // Placeholder function\r\n    console.log(\"View page loaded for:\", row);\r\n  };\r\n\r\n  //console.log(record)\r\n  const LoadDeletePage = () => {\r\n    setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}covid/vaccinations/${record.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        patients();\r\n        toggleDeleteModal();\r\n        setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <MaterialTable\r\n            icons={tableIcons}\r\n            title=\"Patient Historys \"\r\n            columns={[\r\n              {\r\n                title: \"Date Of Services Provided\",\r\n                field: \"dateOfServicesProvided\",\r\n              },\r\n              {\r\n                title: \"Action\",\r\n                field: \"action\",\r\n                filtering: false,\r\n                render: (rowData) => (\r\n                  <div>\r\n                    <Menu.Menu position=\"right\">\r\n                      <Menu.Item>\r\n                        <Button\r\n                          style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                          primary\r\n                        >\r\n                          <Dropdown\r\n                            item\r\n                            text=\"Action\"\r\n                            style={{ color: \"white\" }}\r\n                          >\r\n                            <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                              <Dropdown.Item\r\n                              //onClick={() => LoadViewPage(rowData, \"view\")}\r\n                              >\r\n                                {\" \"}\r\n                                <Icon name=\"eye\" />\r\n                                View{\" \"}\r\n                              </Dropdown.Item>\r\n\r\n                              <Dropdown.Item\r\n                              // onClick={() => LoadViewPage(rowData, \"update\")}\r\n                              >\r\n                                <Icon name=\"edit\" />\r\n                                Edit\r\n                              </Dropdown.Item>\r\n\r\n                              <Dropdown.Item\r\n                              //onClick={() => LoadModal(rowData, \"delete\")}\r\n                              >\r\n                                {\" \"}\r\n                                <Icon name=\"trash\" /> Delete\r\n                              </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                          </Dropdown>\r\n                        </Button>\r\n                      </Menu.Item>\r\n                    </Menu.Menu>\r\n                  </div>\r\n                ),\r\n              },\r\n\r\n              // { title: \"Dose Number\", field: \"doseNumber\", filtering: false },\r\n              // { title: \"Location\", field: \"location\", filtering: false },\r\n              // { title: \"Batch Number\", field: \"batchNumber\", filtering: false },\r\n              // { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n              // { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false },\r\n              // { title: \"Actions\", field: \"actions\", filtering: false },\r\n            ]}\r\n            //   data={ vacinationList.map((row) => ({\r\n\r\n            //         //dateOfServicesProvided: row\r\n            //        // vaccine: row.vaccineName,\r\n            //         //vaccineDate: row.vaccineDate,\r\n            //         //batchNumber: row.batchNumber,\r\n            //         //doseNumber: row.doseNumber,\r\n            //        // location: row.location,\r\n            //         //vaccinationFacility: row.vaccinationFacility,\r\n            //         //adverseEffect: row.adverseEffect,\r\n            //         actions:\r\n\r\n            //         <div>\r\n            //             <Menu.Menu position='right'  >\r\n            //             <Menu.Item >\r\n            //                 <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n            //                 <Dropdown item text='Action'>\r\n\r\n            //                 <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n            //                     <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n            //                     <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n            //                 </Dropdown.Menu>\r\n            //             </Dropdown>\r\n            //                 </Button>\r\n            //             </Menu.Item>\r\n            //             </Menu.Menu>\r\n            //         </div>\r\n\r\n            //       }))}\r\n            data={dummyData}\r\n            //columns={columns}\r\n\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n              },\r\n              searchFieldStyle: {\r\n                width: \"200%\",\r\n                margingLeft: \"250px\",\r\n              },\r\n              filtering: false,\r\n              exportButton: false,\r\n              searchFieldAlignment: \"left\",\r\n              pageSizeOptions: [10, 20, 100],\r\n              pageSize: 10,\r\n              debounceInterval: 400,\r\n            }}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <Vaccination\r\n        toggle={toggle}\r\n        showModal={modal}\r\n        patientObj={props.patientObj}\r\n        loadPatients={patients}\r\n        records={record}\r\n      />\r\n      <Modal\r\n        show={openDeleteModal}\r\n        toggle={toggleDeleteModal}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete -{\" \"}\r\n            <b>{record && record.batchNumber}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? \"Yes\" : \"Deleting...\"}\r\n          </Button>\r\n          <Button\r\n            onClick={toggleDeleteModal}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientVaccinationHistory;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from \"semantic-ui-react\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Vaccination from \"./../Vaccination/AddViccination\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst KpPrevHistory = (props) => {\r\n  const [vacinationList, setVaccinationtList] = useState([]);\r\n  const patientObj = props && props.patientObj ? props.patientObj : [];\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [openDeleteModal, setOpenDeleteModal] = React.useState(false);\r\n  const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n  const [record, setRecord] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  ///GET LIST OF Patients Vaccinations\r\n  async function patients() {\r\n    axios\r\n      .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setVaccinationtList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  const loadVaccinationModal = (row) => {\r\n    setModal(!modal);\r\n  };\r\n  const LoadEditModal = (row) => {\r\n    setRecord(row);\r\n    toggle();\r\n  };\r\n  const LoadDeleteModal = (row) => {\r\n    toggleDeleteModal();\r\n    setRecord(row);\r\n  };\r\n\r\n  const dummyData = [\r\n    {\r\n      dateOfServicesProvided: \"2023-10-15\", // Dummy date for the first column\r\n      action: \"Sample Action\", // Dummy data for the second column\r\n    },\r\n    {\r\n      dateOfServicesProvided: \"2023-11-20\", // Another dummy date\r\n      action: \"Another Action\", // Another dummy action\r\n    },\r\n    // Add more objects for additional rows as needed\r\n  ];\r\n  const handleAction = (rowData) => {\r\n    // Define your action handling logic here\r\n    console.log(\"Action clicked for:\", rowData);\r\n  };\r\n\r\n  const LoadVie43wPage = (row, action) => {\r\n    // Placeholder function\r\n    console.log(\"View page loaded for:\", row);\r\n  };\r\n\r\n  //console.log(record)\r\n  const LoadDeletePage = () => {\r\n    setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}covid/vaccinations/${record.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        patients();\r\n        toggleDeleteModal();\r\n        setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <MaterialTable\r\n            icons={tableIcons}\r\n            title=\"Patient Historys \"\r\n            columns={[\r\n              {\r\n                title: \"Date Of Services Provided\",\r\n                field: \"dateOfServicesProvided\",\r\n              },\r\n              {\r\n                title: \"Action\",\r\n                field: \"action\",\r\n                filtering: false,\r\n                render: (rowData) => (\r\n                  <div>\r\n                    <Menu.Menu position=\"right\">\r\n                      <Menu.Item>\r\n                        <Button\r\n                          style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                          primary\r\n                        >\r\n                          <Dropdown\r\n                            item\r\n                            text=\"Action\"\r\n                            style={{ color: \"white\" }}\r\n                          >\r\n                            <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                              <Dropdown.Item\r\n                              //onClick={() => LoadViewPage(rowData, \"view\")}\r\n                              >\r\n                                {\" \"}\r\n                                <Icon name=\"eye\" />\r\n                                View{\" \"}\r\n                              </Dropdown.Item>\r\n\r\n                              <Dropdown.Item\r\n                              // onClick={() => LoadViewPage(rowData, \"update\")}\r\n                              >\r\n                                <Icon name=\"edit\" />\r\n                                Edit\r\n                              </Dropdown.Item>\r\n\r\n                              <Dropdown.Item\r\n                              //onClick={() => LoadModal(rowData, \"delete\")}\r\n                              >\r\n                                {\" \"}\r\n                                <Icon name=\"trash\" /> Delete\r\n                              </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                          </Dropdown>\r\n                        </Button>\r\n                      </Menu.Item>\r\n                    </Menu.Menu>\r\n                  </div>\r\n                ),\r\n              },\r\n\r\n              // { title: \"Dose Number\", field: \"doseNumber\", filtering: false },\r\n              // { title: \"Location\", field: \"location\", filtering: false },\r\n              // { title: \"Batch Number\", field: \"batchNumber\", filtering: false },\r\n              // { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n              // { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false },\r\n              // { title: \"Actions\", field: \"actions\", filtering: false },\r\n            ]}\r\n            //   data={ vacinationList.map((row) => ({\r\n\r\n            //         //dateOfServicesProvided: row\r\n            //        // vaccine: row.vaccineName,\r\n            //         //vaccineDate: row.vaccineDate,\r\n            //         //batchNumber: row.batchNumber,\r\n            //         //doseNumber: row.doseNumber,\r\n            //        // location: row.location,\r\n            //         //vaccinationFacility: row.vaccinationFacility,\r\n            //         //adverseEffect: row.adverseEffect,\r\n            //         actions:\r\n\r\n            //         <div>\r\n            //             <Menu.Menu position='right'  >\r\n            //             <Menu.Item >\r\n            //                 <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n            //                 <Dropdown item text='Action'>\r\n\r\n            //                 <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n            //                     <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n            //                     <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n            //                 </Dropdown.Menu>\r\n            //             </Dropdown>\r\n            //                 </Button>\r\n            //             </Menu.Item>\r\n            //             </Menu.Menu>\r\n            //         </div>\r\n\r\n            //       }))}\r\n            data={dummyData}\r\n            //columns={columns}\r\n\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n              },\r\n              searchFieldStyle: {\r\n                width: \"200%\",\r\n                margingLeft: \"250px\",\r\n              },\r\n              filtering: false,\r\n              exportButton: false,\r\n              searchFieldAlignment: \"left\",\r\n              pageSizeOptions: [10, 20, 100],\r\n              pageSize: 10,\r\n              debounceInterval: 400,\r\n            }}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <Vaccination\r\n        toggle={toggle}\r\n        showModal={modal}\r\n        patientObj={props.patientObj}\r\n        loadPatients={patients}\r\n        records={record}\r\n      />\r\n      <Modal\r\n        show={openDeleteModal}\r\n        toggle={toggleDeleteModal}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete -{\" \"}\r\n            <b>{record && record.batchNumber}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? \"Yes\" : \"Deleting...\"}\r\n          </Button>\r\n          <Button\r\n            onClick={toggleDeleteModal}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KpPrevHistory;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport VaccinationHistory from \"./../Vaccination/VaccinationHistory\";\r\nimport KpPrevHistory from \"./../KpPrev/KpPrevHistory\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\nconst RecentHistory = (props) => {\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [loadingRecent, setLoadingRecent] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (props.patientObj && props.patientObj !== null) {\r\n      RecentActivities();\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  // const RecentActivities = () => {\r\n  //   axios\r\n  //   .put('/api/v1/kpprev', data, {\r\n  //     headers: { Authorization: `Bearer ${token}` },\r\n  //   })\r\n  //     .then((response) => {\r\n  //       setLoadingRecent(false);\r\n  //       setRecentActivities(response.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       setLoadingRecent(false);\r\n  //       //console.log(error);\r\n  //     });\r\n  // };\r\n  //Get list of LaboratoryHistory\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}api/v1/kpprev/retrieve ${props.patientObj.id}/activities?full=false`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoadingRecent(false);\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setLoadingRecent(false);\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === \"\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"kp-prevention\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row\">\r\n        <KpPrevHistory patientObj={props.patientObj} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='kp-prev'){\r\n            props.setActiveContent({...props.activeContent, route:'kp-prevention', id:row.id, actionType:action})\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        } else if(row.path==='kp-prev'){\r\n            //props.setActiveContent({...props.activeContent, route:'kp-prev-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}api/v1/kpprev/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport Select from \"@mui/material/Select\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport { dateFormat } from \"highcharts\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, selectedOptions, theme) {\r\n  return {\r\n    fontWeight:\r\n      selectedOptions.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nconst KpPrev = (props) => {\r\n  const theme = useTheme();\r\n  const patientObj = props.patientObj;\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [htsCodeVal, setHtsCodeVal] = useState({});\r\n  const [prepCodeVal, setPrepCodeVal] = useState({});\r\n  let temp = { ...errors };\r\n  const classes = useStyles();\r\n\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const getHTScode = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${patientObj?.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"hts\", response);\r\n        setHtsCodeVal({\r\n          htsCode: response.data.clientCode,\r\n          hivStatus: response.data.hivPositive,\r\n          htsClientDtoList: response.data.htsClientDtoList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPrepCode = () => {\r\n    axios\r\n      .get(`${baseUrl}prep/persons/${patientObj?.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"prep\", response.data);\r\n        setPrepCodeVal({\r\n          prevCode: response.data.uniqueId,\r\n          prepStatus: response.data.prepStatus,\r\n          prepDtoList: response.data.prepDtoList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHTScode();\r\n    getPrepCode();\r\n  }, []);\r\n\r\n  const [date, setDate] = useState({\r\n    dateServiceOffered: \"\",\r\n    service_provider: \"\",\r\n  });\r\n  const [htsServices, setHtsServices] = useState({\r\n    offeredHts: \"\",\r\n    acceptedHts: \"\",\r\n    hivTestResult: \"\",\r\n    referredForArt: \"\",\r\n  });\r\n  const [prepServices, setPrepServices] = useState({\r\n    offeredPrep: \"\",\r\n    acceptedPrep: \"\",\r\n    referredForPrep: \"\",\r\n  });\r\n  const [commodityService, setCommodityService] = useState({\r\n    condomDispensed: \"\",\r\n    lubricantsDispensed: \"\",\r\n    oralQuickDispensed: \"\",\r\n    newNeedleDispensed: \"\",\r\n    oldNeedleRetrived: \"\",\r\n    nalxoneProvided: \"\",\r\n    howmanycondomDispensed: \"\",\r\n    howmanylubricantsDispensed: \"\",\r\n    howmanyoralQuickDispensed: \"\",\r\n    howmanynewNeedleDispensed: \"\",\r\n    howmanyoldNeedleRetrived: \"\",\r\n    howmanynalxoneProvided: \"\",\r\n  });\r\n  const [hivEducationProvided, setHivEducationProvided] = useState({\r\n    iecMaterial: \"\",\r\n    interPersonalCommunication: \"\",\r\n    peerGroupCommunication: \"\",\r\n  });\r\n  const [bioMedicalServices, setbioMedicalServices] = useState({\r\n    stiScreening: \"\",\r\n    stiSyndromicManagement: \"\",\r\n    stiTreatment: \"\",\r\n    screenedForTb: \"\",\r\n    providedWithTpt: \"\",\r\n    screenedForViralHepatits: \"\",\r\n    viralHepatitsScreenResult: \"\",\r\n    vaccinationForViralHepatits: \"\",\r\n    offeredFamilyPlanningServices: \"\",\r\n    referredForFamilyPlanningServices: \"\",\r\n    providedWithDrugRehab: \"\",\r\n    offeredMhpss: \"\",\r\n    onMedicalAssistedTherapy: \"\",\r\n    recivedNalxoneForOverdoseTreatment: \"\",\r\n    stiScreeningResult: \"\",\r\n    stifacilityReffered: \"\",\r\n    tbfacilityReffered: \"\",\r\n    typeofMhpss: \"\",\r\n    drugRehabfacilityReffered: \"\",\r\n  });\r\n  const [structuralServices, setstructuralServices] = useState({\r\n    providedOrRefferedForEmpowerment: \"\",\r\n    legalAidServiceType: \"\",\r\n    peerGroupCommunication: \"\",\r\n    typeempowermentprovided: \"\",\r\n    typelegalempowerment: \"\",\r\n    legalprogramreferred: \"\",\r\n  });\r\n  const [facilityRefferedToo, setFacilityRefferedToo] = useState({\r\n    facilityRefferedToStiScreening: \"\",\r\n    facilityRefferedToScreenedTo: \"\",\r\n    facilityRefferedToScreenedForViralHepatits: \"\",\r\n    facilityRefferedToViralHepatitsScreenResult: \"\",\r\n    facilityRefferedToVaccinationForViralHepatits: \"\",\r\n    facilityRefferedToOfferedFamilyPlanningServices: \"\",\r\n    facilityRefferedToReferredForFamilyPlanningServices: \"\",\r\n    facilityRefeRredToProvidedWithDrugRehab: \"\",\r\n    facilityRefferedToOfferedMhpss: \"\",\r\n    facilityRefferedToOnMedicalAssistedTherapy: \"\",\r\n    facilityRefferedToRecievedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setDate({ ...date, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeReferred = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setFacilityRefferedToo({\r\n      ...facilityRefferedToo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeHtsService = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHtsServices({ ...htsServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangePrepServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setPrepServices({ ...prepServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCommodityServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setCommodityService({\r\n      ...commodityService,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangeHivEducationProvided = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHivEducationProvided({\r\n      ...hivEducationProvided,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangebioMedicalServices = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"screenedForTb\" && e.target.value === \"yes\") {\r\n      bioMedicalServices.providedWithTpt = \"\";\r\n    } else if (e.target.name === \"screenedForTb\" && e.target.value === \"no\") {\r\n      bioMedicalServices.tbtreatmentrefferal = \"\";\r\n    }\r\n    setbioMedicalServices({\r\n      ...bioMedicalServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangestructuralServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setstructuralServices({\r\n      ...structuralServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //Validations of the forms\r\n  const validateAttempt = () => {\r\n    temp.dateServiceOffered = date.dateServiceOffered\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  /* Remove  function **/\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateAttempt()) {\r\n      const generateRandomString = (length) => {\r\n        const characters =\r\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        let result = \"\";\r\n        for (let i = 0; i < length; i++) {\r\n          result += characters.charAt(\r\n            Math.floor(Math.random() * characters.length)\r\n          );\r\n        }\r\n        return result;\r\n      };\r\n      const biomedicalServiceValue = {\r\n        medical_assisted_therapy_for_six_months:\r\n          bioMedicalServices.onMedicalAssistedTherapy,\r\n        offered_family_planning_services:\r\n          bioMedicalServices.offeredFamilyPlanningServices,\r\n        offered_mhpss: bioMedicalServices.offeredMhpss,\r\n        provided_with_drug_rehab: bioMedicalServices.providedWithDrugRehab,\r\n        provided_with_tpt: bioMedicalServices.providedWithTpt,\r\n        received_naloxone_for_overdose_treatment:\r\n          bioMedicalServices.recivedNalxoneForOverdoseTreatment,\r\n        referred_for_family_planning_services:\r\n          bioMedicalServices.referredForFamilyPlanningServices,\r\n        screened_for_tb: bioMedicalServices.screenedForTb,\r\n        screened_for_viral_hepatitis:\r\n          bioMedicalServices.screenedForViralHepatits,\r\n        sti_screening: bioMedicalServices.stiScreening,\r\n        sti_syndromic_management: bioMedicalServices.stiSyndromicManagement,\r\n        sti_treatment: bioMedicalServices.stiTreatment,\r\n        vaccination_for_viral_hepatitis:\r\n          bioMedicalServices.vaccinationForViralHepatits,\r\n        viral_hepatitis_screen_result:\r\n          bioMedicalServices.viralHepatitsScreenResult,\r\n        sti_screening_result: bioMedicalServices.stiScreeningResult,\r\n        sti_facility_reffered: bioMedicalServices.stifacilityReffered,\r\n        tb_facility_reffered: bioMedicalServices.tbfacilityReffered,\r\n        type_of_mhpss: bioMedicalServices.typeofMhpss,\r\n        drug_rehab_facility_reffered:\r\n          bioMedicalServices.drugRehabfacilityReffered,\r\n      };\r\n\r\n      const commodityServicesValue = {\r\n        condoms_dispensed: commodityService.condomDispensed,\r\n        hivst_kits_dispensed: commodityService.oralQuickDispensed,\r\n        lubricants_dispensed: commodityService.lubricantsDispensed,\r\n        naloxane_provided: commodityService.nalxoneProvided,\r\n        new_needles_dispensed: commodityService.newNeedleDispensed,\r\n        old_needles_dispensed: commodityService.oldNeedleRetrived,\r\n        how_many_condom_dispensed: commodityService.howmanycondomDispensed,\r\n        how_many_lubricants_dispensed:\r\n          commodityService.howmanylubricantsDispensed,\r\n        how_many_oral_quick_dispensed:\r\n          commodityService.howmanyoralQuickDispensed,\r\n        how_many_new_needle_dispensed:\r\n          commodityService.howmanynewNeedleDispensed,\r\n        how_many_old_needle_retrived: commodityService.howmanyoldNeedleRetrived,\r\n        how_many_nalxone_provided: commodityService.howmanynalxoneProvided,\r\n      };\r\n\r\n      const htsServicesValue = {\r\n        accepted_hts: htsServices.acceptedHts,\r\n        hiv_test_result: htsServices.hivTestResult,\r\n        offered_hts: htsServices.offeredHts,\r\n        referred_for_art: htsServices.referredForArt,\r\n      };\r\n\r\n      const prepServicesValue = {\r\n        accepted_prep: prepServices.acceptedPrep,\r\n        offered_prep: prepServices.offeredPrep,\r\n        referred_for_prep: prepServices.referredForPrep,\r\n      };\r\n\r\n      const structuralServicesValue = {\r\n        legalAidServices: structuralServices.legalAidServiceType,\r\n        providedEmpowerment:\r\n          structuralServices.providedOrRefferedForEmpowerment,\r\n        type_empowerment_provided: structuralServices.typeempowermentprovided,\r\n        typelegalempowerment: structuralServices.typelegalempowerment,\r\n        legalprogramreferred: structuralServices.legalprogramreferred,\r\n      };\r\n      const randomString = generateRandomString(10);\r\n      const data = {\r\n        htsCode: htsCodeVal?.htsCode,\r\n        prepCode: prepCodeVal?.prevCode,\r\n        prevCode: `kp_kprev-${randomString}`,\r\n        patientId: patientObj.uuid,\r\n        serviceProvider: date.service_provider,\r\n        target_group:\r\n          htsCodeVal?.htsClientDtoList?.length > 0\r\n            ? htsCodeVal?.htsClientDtoList[0]?.targetGroup\r\n            : prepCodeVal?.prepDtoList[0].targetGroup,\r\n        dateServiceOffered: date.dateServiceOffered,\r\n        htsServices: htsServicesValue,\r\n        prepServices: prepServicesValue,\r\n        entryPoint: {},\r\n        bioMedicalServices: biomedicalServiceValue,\r\n        structuralServices: structuralServicesValue,\r\n        commodityServices: commodityServicesValue,\r\n        hivEducationalServices: hivEducationProvided,\r\n      };\r\n      console.log(data);\r\n      setSaving(true);\r\n      axios\r\n        .post(`${baseUrl}kpprev`, data, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          setSaving(false);\r\n          toast.success(\"Record save successfully\");\r\n          setDate({\r\n            dateServiceOffered: \"\",\r\n            service_provider: \"\",\r\n          });\r\n          setHtsServices({\r\n            offeredHts: \"\",\r\n            acceptedHts: \"\",\r\n            hivTestResult: \"\",\r\n            referredForArt: \"\",\r\n          });\r\n          setPrepServices({\r\n            offeredPrep: \"\",\r\n            acceptedPrep: \"\",\r\n            referredForPrep: \"\",\r\n          });\r\n          setCommodityService({\r\n            condomDispensed: \"\",\r\n            lubricantsDispensed: \"\",\r\n            oralQuickDispensed: \"\",\r\n            newNeedleDispensed: \"\",\r\n            oldNeedleRetrived: \"\",\r\n            nalxoneProvided: \"\",\r\n            howmanycondomDispensed: \"\",\r\n            howmanylubricantsDispensed: \"\",\r\n            howmanyoralQuickDispensed: \"\",\r\n            howmanynewNeedleDispensed: \"\",\r\n            howmanyoldNeedleRetrived: \"\",\r\n            howmanynalxoneProvided: \"\",\r\n          });\r\n          setHivEducationProvided({\r\n            iecMaterial: \"\",\r\n            interPersonalCommunication: \"\",\r\n            peerGroupCommunication: \"\",\r\n          });\r\n          setbioMedicalServices({\r\n            stiScreening: \"\",\r\n            stiSyndromicManagement: \"\",\r\n            stiTreatment: \"\",\r\n            screenedForTb: \"\",\r\n            providedWithTpt: \"\",\r\n            screenedForViralHepatits: \"\",\r\n            viralHepatitsScreenResult: \"\",\r\n            vaccinationForViralHepatits: \"\",\r\n            offeredFamilyPlanningServices: \"\",\r\n            referredForFamilyPlanningServices: \"\",\r\n            providedWithDrugRehab: \"\",\r\n            offeredMhpss: \"\",\r\n            onMedicalAssistedTherapy: \"\",\r\n            recivedNalxoneForOverdoseTreatment: \"\",\r\n            stiScreeningResult: \"\",\r\n            stifacilityReffered: \"\",\r\n            tbfacilityReffered: \"\",\r\n            typeofMhpss: \"\",\r\n            drugRehabfacilityReffered: \"\",\r\n          });\r\n          setstructuralServices({\r\n            providedOrRefferedForEmpowerment: \"\",\r\n            legalAidServiceType: \"\",\r\n            peerGroupCommunication: \"\",\r\n            typeempowermentprovided: \"\",\r\n            typelegalempowerment: \"\",\r\n            legalprogramreferred: \"\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            {/* <div className=\"card d-flex\"> */}\r\n            <div\r\n              className=\"card-header\"\r\n              style={{\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n                fontWeight: \"bolder\",\r\n                borderRadius: \"0.2rem\",\r\n              }}\r\n            >\r\n              <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                KEY POPULATION PREVENTION FORM\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"row d-flex\">\r\n              <div className=\"form-group mb-3 col-md-4 \">\r\n                <br />\r\n                <FormGroup>\r\n                  <Label>Date Of Service Provisions</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dateServiceOffered\"\r\n                    value={date.dateServiceOffered}\r\n                    onChange={handleInputChange}\r\n                    id=\"dateServiceOffered\"\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  ></Input>\r\n                  {errors.dateServiceOffered !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateServiceOffered}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* HTS service */}\r\n              {htsCodeVal.htsClientDtoList?.length > 0 && (\r\n                <>\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"teal\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"45px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>HTS Services</h2>\r\n                  </LabelSui>\r\n                  <br />\r\n                  <br />\r\n\r\n                  <div className=\"form-group mb-10 col-xs-6 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Offered HTS</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"offeredHts\"\r\n                        id=\"offeredHts\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.offeredHts}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>Accepted HTS</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"acceptedHts\"\r\n                        id=\"acceptedHts\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.acceptedHts}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {htsServices.acceptedHts === \"1\" ? (\r\n                    <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>Hiv Test Result</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"hivTestResult\"\r\n                          id=\"hivTestResult\"\r\n                          onChange={handleInputChangeHtsService}\r\n                          value={htsServices.hivTestResult}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"positive\">Positive</option>\r\n                          <option value=\"negative\">Negative</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {htsServices.hivTestResult === \"positive\" ? (\r\n                    <div className=\"form-group mb-3 col-xs-6 col-md-3 \">\r\n                      <FormGroup>\r\n                        <Label>Reffered for ART</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"referredForArt\"\r\n                          id=\"referredForArt\"\r\n                          onChange={handleInputChangeHtsService}\r\n                          value={htsServices.referredForArt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {prepCodeVal.prepDtoList?.length > 0 ||\r\n                (htsServices.hivTestResult === \"negative\" && (\r\n                  <>\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"teal\"\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"45px\",\r\n                        marginBottom: \"10px\",\r\n                      }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}>PreP Services</h2>\r\n                    </LabelSui>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>Offered Prep</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"offeredPrep\"\r\n                          id=\"offeredPrep\"\r\n                          onChange={handleInputChangePrepServices}\r\n                          value={prepServices.offeredPrep}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>Accepted PreP</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"acceptedPrep\"\r\n                          id=\"acceptedPrep\"\r\n                          onChange={handleInputChangePrepServices}\r\n                          value={prepServices.acceptedPrep}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>Reffered for Prep</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"referredForPrep\"\r\n                          id=\"referredForPrep\"\r\n                          onChange={handleInputChangePrepServices}\r\n                          value={prepServices.referredForPrep}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"1\">Yes</option>\r\n                          <option value=\"0\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                ))}\r\n\r\n              <div className=\"row\">\r\n                <LabelSui\r\n                  as=\"a\"\r\n                  color=\"blue\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"45px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                  ribbon\r\n                >\r\n                  <h2 style={{ color: \"#fff\" }}>Commodity Service</h2>\r\n                </LabelSui>\r\n\r\n                <div className=\"form-group mb-3 col-md-3 \">\r\n                  <FormGroup>\r\n                    <Label>Condom Dispensed</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"condomDispensed\"\r\n                      id=\"condomDispensed\"\r\n                      onChange={handleInputChangeCommodityServices}\r\n                      value={commodityService.condomDispensed}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"yes\">Yes</option>\r\n                      <option value=\"no\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                {commodityService.condomDispensed === \"yes\" && (\r\n                  <div className=\"form-group mb-3 col-md-3\">\r\n                    <FormGroup>\r\n                      <Label>How Many Condom Dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"howmanycondomDispensed\"\r\n                        id=\"howmanycondomDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.howmanycondomDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group mb-3 col-md-3 \">\r\n                  <FormGroup>\r\n                    <Label>Lubricants Dispensed</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"lubricantsDispensed\"\r\n                      id=\"lubricantsDispensed\"\r\n                      onChange={handleInputChangeCommodityServices}\r\n                      value={commodityService.lubricantsDispensed}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"yes\">Yes</option>\r\n                      <option value=\"no\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                {commodityService.lubricantsDispensed === \"yes\" && (\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>How Many Lubricants Dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"howmanylubricantsDispensed\"\r\n                        id=\"howmanylubricantsDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.howmanylubricantsDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group mb-3 col-md-3 \">\r\n                  <FormGroup>\r\n                    <Label>Oral Quick/ HIVST dispensed</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"oralQuickDispensed\"\r\n                      id=\"oralQuickDispensed\"\r\n                      onChange={handleInputChangeCommodityServices}\r\n                      value={commodityService.oralQuickDispensed}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"yes\">Yes</option>\r\n                      <option value=\"no\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                {commodityService.oralQuickDispensed === \"yes\" && (\r\n                  <div className=\"form-group mb-3 col-md-3\">\r\n                    <FormGroup>\r\n                      <Label>How Many Oral Quick/ HIVST dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"howmanyoralQuickDispensed\"\r\n                        id=\"howmanyoralQuickDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.howmanyoralQuickDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group mb-3 col-md-3 \">\r\n                  <FormGroup>\r\n                    <Label>New Needles/Syringe Dispesend</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"newNeedleDispensed\"\r\n                      id=\"newNeedleDispensed\"\r\n                      onChange={handleInputChangeCommodityServices}\r\n                      value={commodityService.newNeedleDispensed}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"yes\">Yes</option>\r\n                      <option value=\"no\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                {commodityService.newNeedleDispensed === \"yes\" && (\r\n                  <div className=\"form-group mb-3 col-md-3 \">\r\n                    <FormGroup>\r\n                      <Label>How Many New Needles/Syringe Dispesend</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"howmanynewNeedleDispensed\"\r\n                        id=\"howmanynewNeedleDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.howmanynewNeedleDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group mb-3 col-md-3 \">\r\n                  <FormGroup>\r\n                    <Label>Old Needles/Syringe Retrived</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"oldNeedleRetrived\"\r\n                      id=\"oldNeedleRetrived\"\r\n                      onChange={handleInputChangeCommodityServices}\r\n                      value={commodityService.oldNeedleRetrived}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"yes\">Yes</option>\r\n                      <option value=\"no\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                {commodityService.oldNeedleRetrived === \"yes\" && (\r\n                  <div className=\"form-group mb-3 col-md-3\">\r\n                    <FormGroup>\r\n                      <Label>Old Needles/Syringe Retrived</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"howmanyoldNeedleRetrived\"\r\n                        id=\"howmanyoldNeedleRetrived\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.howmanyoldNeedleRetrived}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group mb-3 col-md-3 \">\r\n                  <FormGroup>\r\n                    <Label>Nalxone Provided</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"nalxoneProvided\"\r\n                      id=\"nalxoneProvided\"\r\n                      onChange={handleInputChangeCommodityServices}\r\n                      value={commodityService.nalxoneProvided}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"yes\">Yes</option>\r\n                      <option value=\"no\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                {commodityService.nalxoneProvided === \"yes\" && (\r\n                  <div className=\"form-group mb-3 col-md-3\">\r\n                    <FormGroup>\r\n                      <Label>How Many Nalxone Provided</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"howmanynalxoneProvided\"\r\n                        id=\"howmanynalxoneProvided\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.howmanynalxoneProvided}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <LabelSui\r\n                  as=\"a\"\r\n                  color=\"blue\"\r\n                  style={{\r\n                    width: \"106%\",\r\n                    height: \"45px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                  ribbon\r\n                >\r\n                  <h2 style={{ color: \"#fff\" }}>HIV Educaton Provided</h2>\r\n                </LabelSui>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <FormGroup>\r\n                    <Label>IEC materials/pamphlets provided </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"iecMaterial\"\r\n                      id=\"iecMaterial\"\r\n                      onChange={handleInputChangeHivEducationProvided}\r\n                      value={hivEducationProvided.iecMaterial}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\">Yes</option>\r\n                      <option value=\"No\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <FormGroup>\r\n                    <Label>InterPersonal Communication</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"interPersonalCommunication\"\r\n                      id=\"interPersonalCommunication\"\r\n                      onChange={handleInputChangeHivEducationProvided}\r\n                      value={hivEducationProvided.interPersonalCommunication}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\">Yes</option>\r\n                      <option value=\"No\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4 \">\r\n                  <FormGroup>\r\n                    <Label>Peer Group Communication</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"peerGroupCommunication\"\r\n                      id=\"peerGroupCommunication\"\r\n                      onChange={handleInputChangeHivEducationProvided}\r\n                      value={hivEducationProvided.peerGroupCommunication}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\">Yes</option>\r\n                      <option value=\"No\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            {/* <div className='card'> */}\r\n\r\n            <div className=\" row d-flex\">\r\n              <div className=\"row\">\r\n                <LabelSui\r\n                  as=\"a\"\r\n                  color=\"blue\"\r\n                  style={{\r\n                    width: \"106%\",\r\n                    height: \"45px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                  ribbon\r\n                >\r\n                  <h2 style={{ color: \"#fff\" }}>Biomedical Services</h2>\r\n                </LabelSui>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>STI Screening</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"stiScreening\"\r\n                        id=\"stiScreening\"\r\n                        value={bioMedicalServices.stiScreening}\r\n                        onChange={handleInputChangebioMedicalServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"yes\">Yes</option>\r\n                        <option value=\"no\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {bioMedicalServices.stiScreening === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Screening Result</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiScreeningResult\"\r\n                          id=\"stiScreeningResult\"\r\n                          value={bioMedicalServices.stiScreeningResult}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"positive\">Positive</option>\r\n                          <option value=\"negative\">Negative</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {bioMedicalServices.stiScreeningResult === \"positive\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>STI Treatment/ Referral</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"stiTreatment\"\r\n                          id=\"stiTreatment\"\r\n                          value={bioMedicalServices.stiTreatment}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  {bioMedicalServices.stiTreatment === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <Label> Facility Refferred to </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"stifacilityReffered\"\r\n                        id=\"stifacilityReffered\"\r\n                        value={bioMedicalServices.stifacilityReffered}\r\n                        onChange={handleInputChangebioMedicalServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>STI Syndromic Management</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"stiSyndromicManagement\"\r\n                        id=\"stiSyndromicManagement\"\r\n                        value={bioMedicalServices.stiSyndromicManagement}\r\n                        onChange={handleInputChangebioMedicalServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Screened for TB</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"screenedForTb\"\r\n                        id=\"screenedForTb\"\r\n                        value={bioMedicalServices.screenedForTb}\r\n                        onChange={handleInputChangebioMedicalServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {bioMedicalServices.screenedForTb === \"no\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Provided with TPT</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"providedWithTpt\"\r\n                          id=\"providedWithTpt\"\r\n                          value={bioMedicalServices.providedWithTpt}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {bioMedicalServices.screenedForTb === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>TB treatment/referral </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"tbtreatmentrefferal\"\r\n                          id=\"tbtreatmentrefferal\"\r\n                          value={bioMedicalServices.tbtreatmentrefferal}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                  {bioMedicalServices.tbtreatmentrefferal === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <Label> Facility Refferred to </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"tbfacilityReffered\"\r\n                        id=\"tbfacilityReffered\"\r\n                        value={bioMedicalServices.tbfacilityReffered}\r\n                        onChange={handleInputChangebioMedicalServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Screened For Viral Heaptits</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"screenedForViralHepatits\"\r\n                        id=\"screenedForViralHepatits\"\r\n                        value={bioMedicalServices.screenedForViralHepatits}\r\n                        onChange={handleInputChangebioMedicalServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {bioMedicalServices.screenedForViralHepatits === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Viral Hepatits Screen Result</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"viralHepatitsScreenResult\"\r\n                          id=\"viralHepatitsScreenResult\"\r\n                          value={bioMedicalServices.viralHepatitsScreenResult}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"positive\"> Positive </option>\r\n                          <option value=\"negative\"> Negative</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Vaccination For Viral Hepatits</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"vaccinationForViralHepatits\"\r\n                        id=\"vaccinationForViralHepatits\"\r\n                        value={bioMedicalServices.vaccinationForViralHepatits}\r\n                        onChange={handleInputChangebioMedicalServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"Yes\"> Yes </option>\r\n                        <option value=\"No\"> No </option>\r\n                      </Input>\r\n                      {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Offered Family Planning Services</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"offeredFamilyPlanningServices\"\r\n                        id=\"offeredFamilyPlanningServices\"\r\n                        value={bioMedicalServices.offeredFamilyPlanningServices}\r\n                        onChange={handleInputChangebioMedicalServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {bioMedicalServices.offeredFamilyPlanningServices ===\r\n                    \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Refferred For Family Planning Services</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"referredForFamilyPlanningServices\"\r\n                          id=\"referredForFamilyPlanningServices\"\r\n                          value={\r\n                            bioMedicalServices.referredForFamilyPlanningServices\r\n                          }\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"Yes\"> Yes </option>\r\n                          <option value=\"No\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Provided With Drug Rehab</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"providedWithDrugRehab\"\r\n                        id=\"providedWithDrugRehab\"\r\n                        value={bioMedicalServices.providedWithDrugRehab}\r\n                        onChange={handleInputChangebioMedicalServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Offered MHPSS</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"offeredMhpss\"\r\n                          id=\"offeredMhpss\"\r\n                          value={bioMedicalServices.offeredMhpss}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  {bioMedicalServices.offeredMhpss === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Type of MHPSS Provided</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"typeofMhpss\"\r\n                          id=\"typeofMhpss\"\r\n                          value={bioMedicalServices.typeofMhpss}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  {bioMedicalServices.providedWithDrugRehab === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Referred to facility for Drug Rehab </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"refferedfacilitydrugrehab\"\r\n                          id=\"refferedfacilitydrugrehab\"\r\n                          value={bioMedicalServices.refferedfacilitydrugrehab}\r\n                          onChange={handleInputChangebioMedicalServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"yes\"> Yes </option>\r\n                          <option value=\"no\"> No </option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n\r\n                  {bioMedicalServices.refferedfacilitydrugrehab === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <Label>Drug Rehab Facility Refferred to </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"drugRehabfacilityReffered\"\r\n                        id=\"drugRehabfacilityReffered\"\r\n                        value={bioMedicalServices.drugRehabfacilityReffered}\r\n                        onChange={handleInputChangebioMedicalServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        On Medical Assisted Therapy (MAT) for atleast 6 months\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"onMedicalAssistedTherapy\"\r\n                        id=\"onMedicalAssistedTherapy\"\r\n                        value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                        onChange={handleInputChangebioMedicalServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Recived Nalxone for Overdose Treatment</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"recivedNalxoneForOverdoseTreatment\"\r\n                        id=\"recivedNalxoneForOverdoseTreatment\"\r\n                        value={\r\n                          bioMedicalServices.recivedNalxoneForOverdoseTreatment\r\n                        }\r\n                        onChange={handleInputChangebioMedicalServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select </option>\r\n                        <option value=\"yes\"> Yes </option>\r\n                        <option value=\"no\"> No </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <LabelSui\r\n                  as=\"a\"\r\n                  color=\"blue\"\r\n                  style={{\r\n                    width: \"106%\",\r\n                    height: \"45px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                  ribbon\r\n                >\r\n                  <h2 style={{ color: \"#fff\" }}> Structural Services </h2>\r\n                </LabelSui>\r\n                <br />\r\n                <br />\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Provided or Reffered for Empowerment</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"providedOrRefferedForEmpowerment\"\r\n                      id=\"providedOrRefferedForEmpowerment\"\r\n                      value={\r\n                        structuralServices.providedOrRefferedForEmpowerment\r\n                      }\r\n                      onChange={handleInputChangestructuralServices}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\"> Select </option>\r\n                      <option value=\"yes\"> Yes </option>\r\n                      <option value=\"no\"> No </option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                    \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <Label> Type of Empowerment Provided </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"typeempowermentprovided\"\r\n                        id=\"typeempowermentprovided\"\r\n                        value={structuralServices.typeempowermentprovided}\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Legal Aid Service Type</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"legalAidServiceType\"\r\n                      id=\"legalAidServiceType\"\r\n                      value={structuralServices.legalAidServiceType}\r\n                      onChange={handleInputChangestructuralServices}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\"> Select </option>\r\n                      <option value=\"yes\"> Yes </option>\r\n                      <option value=\"no\"> No </option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n                {structuralServices.legalAidServiceType === \"yes\" && (\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <Label> Type of Legal Empowerment Provided </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"typelegalempowerment\"\r\n                      id=\"typelegalempowerment\"\r\n                      value={structuralServices.typelegalempowerment}\r\n                      onChange={handleInputChangestructuralServices}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n                {structuralServices.legalAidServiceType === \"yes\" && (\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <Label> Legal Program referred </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"legalprogramreferred\"\r\n                      id=\"legalprogramreferred\"\r\n                      value={structuralServices.legalprogramreferred}\r\n                      onChange={handleInputChangestructuralServices}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <LabelSui\r\n                  as=\"a\"\r\n                  color=\"blue\"\r\n                  style={{\r\n                    width: \"106%\",\r\n                    height: \"45px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                  ribbon\r\n                >\r\n                  <h2 style={{ color: \"#fff\" }}> Service Provider </h2>\r\n                </LabelSui>\r\n\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Name of service provider</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"service_provider\"\r\n                      id=\"service_provider\"\r\n                      value={date.service_provider}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n\r\n                    {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                  </FormGroup>\r\n                  {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                    \"Yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <Label> Facility Refferred to </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                        id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                        value={\r\n                          facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment\r\n                        }\r\n                        onChange={handleInputChangestructuralServices}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              {/* </div> */}\r\n            </div>\r\n            {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              //hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n              //disabled={attemptList.length <= 0 && !saving ? true : false}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {\" \"}\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update\"\r\n                    : \"Save\"}\r\n                </span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update...\"\r\n                    : \"Save...\"}\r\n                </span>\r\n              )}\r\n            </MatButton>\r\n            {/* </div> */}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default KpPrev;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport PatientCardDetail from \"./PatientCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport RecentHistory from \"./../History/RecentHistory\";\r\nimport PatientHistory from \"./../History/PatientHistory\";\r\nimport Biometrics from \"./Biometric\";\r\nimport AddmissionHome from \"./../Admission/AddmissionHome\";\r\nimport PatientVaccinationHistory from \"./../Vaccination/VaccinationHistory\";\r\nimport KpPrev from \"../KpPrev\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [art, setArt] = useState(false);\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: \"recent-history\",\r\n    id: \"\",\r\n    activeTab: \"home\",\r\n    actionType: \"create\",\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n  const patientObj =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const prepId =\r\n    history.location && history.location.state\r\n      ? history.location.state.prepId\r\n      : {};\r\n  //console.log(patientObj)\r\n  useEffect(() => {}, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>KP-PREV /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <PatientCardDetail\r\n            patientObj={patientObj}\r\n            setArt={setArt}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <SubMenu\r\n            patientObj={patientObj}\r\n            art={art}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <br />\r\n          {activeContent.route === \"recent-history\" && (\r\n            <RecentHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n          {/* {activeContent.route === \"biometrics\" && (\r\n            <Biometrics\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"addmission\" && (\r\n            <AddmissionHome\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"vaccination\" && (\r\n            <PatientVaccinationHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"discharge\" && (\r\n            <AddmissionHome\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"icu\" && (\r\n            <AddmissionHome\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n          {/* {activeContent.route === \"patient-history\" && (\r\n            <PatientHistory\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )} */}\r\n\r\n          {activeContent.route === \"kp-prev\" && (\r\n            <KpPrev\r\n              patientObj={patientObj}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n          {/* History Pages */}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { FaPlus, FaAngleDown } from \"react-icons/fa\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"./patient.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport { Icon, List, Label as LabelSui } from \"semantic-ui-react\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst UserRegistration = (props) => {\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: \"\",\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: \"\",\r\n    genderId: \"\",\r\n    identifier: \"\",\r\n    otherName: \"\",\r\n    maritalStatusId: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    dateOfRegistration: \"\",\r\n    isDateOfBirthEstimated: null,\r\n    age: \"\",\r\n    phoneNumber: \"\",\r\n    altPhonenumber: \"\",\r\n    dob: \"\",\r\n    countryId: 1,\r\n    stateId: \"\",\r\n    district: \"\",\r\n    sexId: \"\",\r\n    ninNumber: \"\",\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: \"\",\r\n    phone: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    relationshipId: \"\",\r\n    lastName: \"\",\r\n    middleName: \"\",\r\n  });\r\n  const [contacts, setContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  //const [editRelative, setEditRelative] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [covidEffect, setCovidEffect] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: \"\",\r\n    vaccinationEnrollment: \"\",\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //HIV INFORMATION\r\n  const [showContactCard, setShowContactCard] = useState(true);\r\n  const [vaccine, setVaccine] = useState([]);\r\n  //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n  const [objValues, setObjValues] = useState({\r\n    adverseEffect: \"\",\r\n    batchNumber: \"\",\r\n    doseNumber: \"\",\r\n    location: \"\",\r\n    patientId: \"\",\r\n    vaccinationFacility: \"\",\r\n    vaccine: \"\",\r\n    vaccineDate: \"\",\r\n    knownMedicalCondition: \"\",\r\n    medicalCondition: \"\",\r\n    occupation: \"\",\r\n    vaccineId: \"\",\r\n    visitDate: \"\",\r\n    patientId: \"\",\r\n    visitId: \"\",\r\n    workInHealthSector: \"\",\r\n  });\r\n\r\n  //status for hospital Number\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [hospitalNumStatus2, setHospitalNumStatus2] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  patientId = locationState ? locationState.patientId : null;\r\n  let temp = { ...errors };\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    VACCINE();\r\n    GetCountry();\r\n    setStateByCountryId();\r\n    COVID_ADVERSE_EFFECT();\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      toast.error(\"Date of registration can not be earlier than date of birth\");\r\n    }\r\n  }, [basicInfo.dateOfRegistration]);\r\n  //covid/codeset?category=VACCINE\r\n  const VACCINE = () => {\r\n    axios\r\n      .get(`${baseUrl}covid/codeset?category=VACCINE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setVaccine(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const COVID_ADVERSE_EFFECT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setCovidEffect(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //COVID_ADVERSE_EFFECT\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  // const loadTopLevelCountry = useCallback(async () => {\r\n  //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n  //     settopLevelUnitCountryOptions(response.data);\r\n  // }, []);\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get States from selected country\r\n  const getStates = (e) => {\r\n    const getCountryId = e.target.value;\r\n    setStateByCountryId(1);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId() {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setStates(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: \"\" });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n    if (basicInfo.age !== \"\" && basicInfo.age >= 60) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value === \"Actual\") {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value === \"Estimated\") {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    const ageNumber = e.target.value.replace(/\\D/g, \"\");\r\n    if (!ageDisabled && ageNumber) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(ageNumber * -1, \"years\");\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n      if (ageNumber !== \"\" && ageNumber >= 60) {\r\n        toggle();\r\n      }\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: Math.abs(e.target.value) });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  //Handle Input Change for Basic Infor\r\n  const handleInputChangeBasic = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"ninNumber\" && e.target.value !== \"\") {\r\n      const ninNumberValue = checkNINLimit(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: ninNumberValue });\r\n    }\r\n    if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n          setObjValues({ ...objValues, uniqueId: e.target.value });\r\n          setHospitalNumStatus2(true);\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n          setHospitalNumStatus2(false);\r\n        }\r\n      }\r\n      getHosiptalNumber();\r\n    }\r\n  };\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? \"\" : \"First Name is required\";\r\n    temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\";\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? \"\"\r\n      : \"Relationship Type is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = (e) => {\r\n    if (validateRelatives()) {\r\n      setContacts([...contacts, relatives]);\r\n      setRelatives({\r\n        address: \"\",\r\n        phone: \"\",\r\n        firstName: \"\",\r\n        email: \"\",\r\n        relationshipId: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n      });\r\n    }\r\n  };\r\n  const handleDeleteRelative = (index) => {\r\n    contacts.splice(index, 1);\r\n    setContacts([...contacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    contacts.splice(index, 1);\r\n  };\r\n  const getRelationship = (relationshipId) => {\r\n    const relationship = relationshipOptions.find(\r\n      (obj) => obj.id == relationshipId\r\n    );\r\n    return relationship ? relationship.display : \"\";\r\n  };\r\n  const handleInputChangeRelatives = (e) => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\";\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? \"\"\r\n      : \"Hospital Number  is required.\";\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n    // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n    temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\";\r\n    temp.dateOfRegistration = basicInfo.dateOfRegistration\r\n      ? \"\"\r\n      : \"Date of Registration is required.\";\r\n    //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n    temp.address = basicInfo.address ? \"\" : \"Address is required.\";\r\n    temp.phoneNumber = basicInfo.phoneNumber\r\n      ? \"\"\r\n      : \"Phone Number  is required.\";\r\n    temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\";\r\n    temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\";\r\n    temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\";\r\n    //VACCINATION FORM VALIDATION\r\n    temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\";\r\n    temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\";\r\n    //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n    temp.location = objValues.location ? \"\" : \"This field is required\";\r\n    temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\";\r\n    temp.adverseEffect = objValues.adverseEffect\r\n      ? \"\"\r\n      : \"This field is required\";\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    console.log(handleSubmit);\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts &&\r\n        contacts.length > 0 &&\r\n        contacts.map((x) => {\r\n          const contactInfo = {\r\n            address: {\r\n              line: [x.address],\r\n            },\r\n            contactPoint: {\r\n              type: \"phone\",\r\n              value: x.phone,\r\n            },\r\n            firstName: x.firstName,\r\n            fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n            relationshipId: x.relationshipId,\r\n            surname: x.lastName,\r\n            otherName: x.middleName,\r\n          };\r\n\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.address,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: \"\",\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: newConatctsInfo,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.sexId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n        const phone = {\r\n          type: \"phone\",\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: \"email\",\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: \"altphone\",\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        //patientForm.id = patientId;\r\n        patientDTO.person = patientForm;\r\n        patientDTO.vaccinationEnrollment = objValues;\r\n        const observationData = {\r\n          observation: {\r\n            data: {},\r\n            date: date.dateServiceOffered,\r\n            htsService: htsServices,\r\n            prepServices: prepServices,\r\n          },\r\n          commodityService: commodityService,\r\n          hivEducationProvided: hivEducationProvided,\r\n          bioMedicalServices: bioMedicalServices,\r\n          structuralServices: structuralServices,\r\n        };\r\n\r\n        const response = await axios.post(\r\n          `${baseUrl}/api/v1/kpprev`,\r\n          patientDTO,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        toast.success(\"Patient Register successfully\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n        setSaving(false);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          if (\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\" &&\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.subErrors[0].message !== \"\"\r\n          ) {\r\n            toast.error(\r\n              error.response.data.apierror.message +\r\n                \" : \" +\r\n                error.response.data.apierror.subErrors[0].field +\r\n                \" \" +\r\n                error.response.data.apierror.subErrors[0].message,\r\n              { position: toast.POSITION.BOTTOM_CENTER }\r\n            );\r\n          } else {\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const [date, setDate] = useState({\r\n    dateServiceOffered: \"\",\r\n  });\r\n\r\n  const [htsServices, setHtsServices] = useState({\r\n    offeredHts: \"\",\r\n    acceptedHts: \"\",\r\n    hivTestResult: \"\",\r\n    referredForArt: \"\",\r\n  });\r\n  const [prepServices, setPrepServices] = useState({\r\n    offeredPrep: \"\",\r\n    acceptedPrep: \"\",\r\n    refferedForPrep: \"\",\r\n  });\r\n  const [commodityService, setCommodityService] = useState({\r\n    condomDispensed: \"\",\r\n    lubricantsDispensed: \"\",\r\n    oralQuickDispensed: \"\",\r\n    newNeedleDispensed: \"\",\r\n    oldNeedleRetrived: \"\",\r\n    nalxoneProvided: \"\",\r\n  });\r\n  const [hivEducationProvided, setHivEducationProvided] = useState({\r\n    iecMaterial: \"\",\r\n    interPersonalCommunication: \"\",\r\n    peerGroupCommunication: \"\",\r\n  });\r\n  const [bioMedicalServices, setbioMedicalServices] = useState({\r\n    stiScreening: \"\",\r\n    stiSyndromicManagement: \"\",\r\n    stiTreatment: \"\",\r\n    screenedForTb: \"\",\r\n    providedWithTpt: \"\",\r\n    screenedForViralHepatits: \"\",\r\n    viralHepatitsScreenResult: \"\",\r\n    vaccinationForViralHepatits: \"\",\r\n    offeredFamilyPlanningServices: \"\",\r\n    referredForFamilyPlanningServices: \"\",\r\n    providedWithDrugRehab: \"\",\r\n    offeredMhpss: \"\",\r\n    onMedicalAssistedTherapy: \"\",\r\n    recivedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n  const [structuralServices, setstructuralServices] = useState({\r\n    providedOrRefferedForEmpowerment: \"\",\r\n    legalAidServiceType: \"\",\r\n    peerGroupCommunication: \"\",\r\n  });\r\n  const [facilityRefferedToo, setFacilityRefferedToo] = useState({\r\n    facilityRefferedToStiScreening: \"\",\r\n    facilityRefferedToScreenedTo: \"\",\r\n    facilityRefferedToScreenedForViralHepatits: \"\",\r\n    facilityRefferedToViralHepatitsScreenResult: \"\",\r\n    facilityRefferedToVaccinationForViralHepatits: \"\",\r\n    facilityRefferedToOfferedFamilyPlanningServices: \"\",\r\n    facilityRefferedToReferredForFamilyPlanningServices: \"\",\r\n    facilityRefeRredToProvidedWithDrugRehab: \"\",\r\n    facilityRefferedToOfferedMhpss: \"\",\r\n    facilityRefferedToOnMedicalAssistedTherapy: \"\",\r\n    facilityRefferedToRecievedNalxoneForOverdoseTreatment: \"\",\r\n  });\r\n\r\n  const handleInputChan4Date = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setDate({ ...date, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeReferred = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setFacilityRefferedToo({\r\n      ...facilityRefferedToo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeHtsService = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHtsServices({ ...htsServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangePrepServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setPrepServices({ ...prepServices, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCommodityServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setCommodityService({\r\n      ...commodityService,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangeHivEducationProvided = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setHivEducationProvided({\r\n      ...hivEducationProvided,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangebioMedicalServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setbioMedicalServices({\r\n      ...bioMedicalServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleInputChangestructuralServices = (e) => {\r\n    //console.log(e.target.value)\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setstructuralServices({\r\n      ...structuralServices,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"location\" && objValues.location !== \"Facility\") {\r\n      objValues.vaccinationFacility = \"\";\r\n      setObjValues({ ...objValues, [\"vaccinationFacility\"]: \"\" });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setRelatives({ ...relatives, [inputName]: NumberValue });\r\n  };\r\n  // const checkPhoneNumberBasic=(e, inputName)=>{\r\n  //     const limit = 10;\r\n  //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});\r\n  // }\r\n  const checkNINLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n  const handleCheckBoxworkInHealthSector = (e) => {\r\n    if (e.target.checked) {\r\n      setObjValues({ ...objValues, [\"workInHealthSector\"]: e.target.checked });\r\n      //setOvcEnrolled(true)\r\n    } else {\r\n      setObjValues({ ...objValues, [\"workInHealthSector\"]: false });\r\n    }\r\n  };\r\n\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setBasicInfo({ ...basicInfo, [inputName]: NumberValue });\r\n  };\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  const handleCheckBoxknownMedicalCondition = (e) => {\r\n    if (e.target.checked) {\r\n      setObjValues({\r\n        ...objValues,\r\n        [\"knownMedicalCondition\"]: e.target.checked,\r\n      });\r\n      //setOvcEnrolled(true)\r\n    } else {\r\n      setObjValues({ ...objValues, [\"knownMedicalCondition\"]: false });\r\n    }\r\n  };\r\n  const onClickContactCard = () => {\r\n    setShowContactCard(!showContactCard);\r\n  };\r\n  const onClickRelativeCard = () => {\r\n    setShowRelative(!showRelative);\r\n  };\r\n  const handleCancel = () => {\r\n    history.push({ pathname: \"/\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Kp-Prev /</Link> Patient Registration\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/\",\r\n          state: \"users\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mr-10 pr-10\"\r\n          style={{\r\n            backgroundColor: \"#014d88\",\r\n            fontWeight: \"bolder\",\r\n            margingRight: \"-40px\",\r\n          }}\r\n          startIcon={<TiArrowBack />}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n            Back{\" \"}\r\n          </span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    {userDetail === null\r\n                      ? \"Basic Information\"\r\n                      : \"Edit User Information\"}\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            min=\"1983-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            value={basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.dateOfRegistration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            Hospital Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hospitalNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {\"Hospital number already exist\"}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"ninNumber\">\r\n                            National Identity Number (NIN){\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"ninNumber\"\r\n                            value={basicInfo.ninNumber}\r\n                            id=\"ninNumber\"\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">\r\n                            First Names <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.firstName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Last Name <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.lastName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Sex <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.id}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Date Of Birth{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dob\"\r\n                            min=\"1940-01-01\"\r\n                            id=\"dob\"\r\n                            max={\r\n                              basicInfo.dateOfRegistration === \"\"\r\n                                ? moment(new Date()).format(\"YYYY-MM-DD\")\r\n                                : basicInfo.dateOfRegistration\r\n                            }\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            className=\"form-control\"\r\n                            id=\"age\"\r\n                            min=\"5\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                        <p>\r\n                          <b style={{ color: \"red\" }}>\r\n                            {basicInfo.age !== \"\" && basicInfo.age < 5\r\n                              ? \"The minimum age is 5\"\r\n                              : \" \"}{\" \"}\r\n                          </b>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Employment Status </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Education Level </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Contact Details\r\n                  </h5>\r\n                  {showContactCard === false ? (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickContactCard}\r\n                      >\r\n                        <FaPlus />\r\n                      </span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickContactCard}\r\n                      >\r\n                        <FaAngleDown />\r\n                      </span>{\" \"}\r\n                    </>\r\n                  )}\r\n                </div>\r\n                {showContactCard && (\r\n                  <div className=\"card-body\">\r\n                    <div className={\"row\"}>\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Phone Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"phoneNumber\"\r\n                            id=\"phoneNumber\"\r\n                            onChange={(e) => {\r\n                              handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                            }}\r\n                            value={basicInfo.phoneNumber}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            required\r\n                          />\r\n                          {errors.phoneNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.phoneNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Alt. Phone Number</Label>\r\n                          {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"altPhonenumber\"\r\n                            id=\"altPhonenumber\"\r\n                            onChange={(e) => {\r\n                              handleInputChangePhoneNumber(e, \"altPhonenumber\");\r\n                            }}\r\n                            value={basicInfo.altPhonenumber}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            required\r\n                          />\r\n                          {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Email</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.email}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            required\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Country <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"countryId\"\r\n                            id=\"countryId\"\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            value={basicInfo.countryId}\r\n                            disabled\r\n                            onChange={getStates}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {countries.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.countryId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.countryId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            State <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"stateId\"\r\n                            id=\"stateId\"\r\n                            value={basicInfo.stateId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            onChange={getProvinces}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {states.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.stateId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.stateId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Province/District/LGA{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"district\"\r\n                            id=\"district\"\r\n                            value={basicInfo.district}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            onChange={handleInputChangeBasic}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {provinces.map((value, index) => (\r\n                              <option key={index} value={value.id}>\r\n                                {value.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.district !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.district}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Street Address{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            id=\"address\"\r\n                            value={basicInfo.address}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.address !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.address}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Landmark</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"landmark\"\r\n                            id=\"landmark\"\r\n                            value={basicInfo.landmark}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                  {showRelative === false ? (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickRelativeCard}\r\n                      >\r\n                        <FaPlus />\r\n                      </span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span\r\n                        className=\"float-end\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={onClickRelativeCard}\r\n                      >\r\n                        <FaAngleDown />\r\n                      </span>{\" \"}\r\n                    </>\r\n                  )}\r\n                </div>\r\n                {showRelative && (\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      {contacts && contacts.length > 0 && (\r\n                        <div className=\"col-xl-12 col-lg-12\">\r\n                          <table style={{ width: \"100%\" }} className=\"mb-3\">\r\n                            <thead className=\"mb-3\">\r\n                              <tr>\r\n                                <th>Relationship Type</th>\r\n                                <th>Name</th>\r\n                                <th>Phone</th>\r\n                                <th>Address</th>\r\n                                <th>Actions</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"mb-3\">\r\n                              {contacts.map((item, index) => {\r\n                                return (\r\n                                  <tr key={item.index} className=\"mb-3\">\r\n                                    <td>\r\n                                      {getRelationship(item.relationshipId)}\r\n                                    </td>\r\n                                    <td>\r\n                                      {item.firstName +\r\n                                        \" \" +\r\n                                        item.middleName +\r\n                                        \" \" +\r\n                                        item.lastName}\r\n                                    </td>\r\n                                    <td>{item.phone}</td>\r\n                                    <td>{item.address}</td>\r\n                                    <td>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                        onClick={() =>\r\n                                          handleEditRelative(item, index)\r\n                                        }\r\n                                      >\r\n                                        <FontAwesomeIcon icon=\"edit\" />\r\n                                      </button>\r\n                                      &nbsp;&nbsp;\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-danger btn-sm removeRow\"\r\n                                        onClick={(e) =>\r\n                                          handleDeleteRelative(index)\r\n                                        }\r\n                                      >\r\n                                        <FontAwesomeIcon icon=\"trash\" />\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        {showRelative && (\r\n                          <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"relationshipType\">\r\n                                      Relationship Type{\" \"}\r\n                                      <span style={{ color: \"red\" }}> *</span>\r\n                                    </Label>\r\n                                    <select\r\n                                      className=\"form-control\"\r\n                                      name=\"relationshipId\"\r\n                                      id=\"relationshipId\"\r\n                                      value={relatives.relationshipId}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    >\r\n                                      <option value={\"\"}>Select</option>\r\n                                      {relationshipOptions.map(\r\n                                        (relative, index) => (\r\n                                          <option\r\n                                            key={relative.id}\r\n                                            value={relative.id}\r\n                                          >\r\n                                            {relative.display}\r\n                                          </option>\r\n                                        )\r\n                                      )}\r\n                                    </select>\r\n                                    {errors.relationshipId !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.relationshipId}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"cfirstName\">\r\n                                      First Name{\" \"}\r\n                                      <span style={{ color: \"red\" }}> *</span>\r\n                                    </Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"firstName\"\r\n                                      value={relatives.firstName}\r\n                                      id=\"firstName\"\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {errors.firstName !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.firstName}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label>Middle Name</Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"middleName\"\r\n                                      id=\"middleName\"\r\n                                      value={relatives.middleName}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label>\r\n                                      Last Name{\" \"}\r\n                                      <span style={{ color: \"red\" }}> *</span>\r\n                                    </Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"lastName\"\r\n                                      id=\"lastName\"\r\n                                      value={relatives.lastName}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {errors.lastName !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.lastName}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"contactPhoneNumber\">\r\n                                      Phone Number\r\n                                    </Label>\r\n                                    {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      name=\"phone\"\r\n                                      id=\"phone\"\r\n                                      onChange={(e) => {\r\n                                        checkPhoneNumber(e, \"phone\");\r\n                                      }}\r\n                                      value={relatives.phone}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      required\r\n                                    />\r\n                                    {errors.phone !== \"\" ? (\r\n                                      <span className={classes.error}>\r\n                                        {errors.phone}\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"contactEmail\">Email</Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"email\"\r\n                                      name=\"email\"\r\n                                      id=\"email\"\r\n                                      value={relatives.email}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                      required\r\n                                    />\r\n                                    {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                  </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                  <FormGroup>\r\n                                    <Label for=\"contactAddress\">Address</Label>\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"text\"\r\n                                      name=\"address\"\r\n                                      id=\"address\"\r\n                                      value={relatives.address}\r\n                                      style={{\r\n                                        border: \"1px solid #014D88\",\r\n                                        borderRadius: \"0.2rem\",\r\n                                      }}\r\n                                      onChange={handleInputChangeRelatives}\r\n                                    />\r\n                                    {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                  </FormGroup>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"row\">\r\n                                <div className=\"col-1\">\r\n                                  <MatButton\r\n                                    type=\"button\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    onClick={handleSaveRelationship}\r\n                                  >\r\n                                    Add\r\n                                  </MatButton>\r\n                                </div>\r\n\r\n                                <div className=\"col-1\">\r\n                                  <MatButton\r\n                                    type=\"button\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.button}\r\n                                    onClick={handleCancelSaveRelationship}\r\n                                  >\r\n                                    Cancel\r\n                                  </MatButton>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\"></div>\r\n                    {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                    {/* </div> */}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/* Adding First DOSAGE FORM HERE */}\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Key Population Prevention{\" \"}\r\n                  </h5>\r\n                </div>\r\n\r\n                {/* <div className=\"card d-flex\"> */}\r\n\r\n                <div className=\"row d-flex\">\r\n                  <h2>Service Provider </h2>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-md-4 \">\r\n                    <FormGroup>\r\n                      <Label>Date Of Service Provisions</Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"dateServiceOffered\"\r\n                        value={date.dateServiceOffered}\r\n                        onChange={handleInputChan4Date}\r\n                        id=\"dateServiceOffered\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                      {errors.dateServiceOffered !== \"\" ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateServiceOffered}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* <div className='card'> */}\r\n\r\n                  <div\r\n                    className=\"card-header\"\r\n                    style={{\r\n                      backgroundColor: \"teal\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bolder\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>HTS Services</h2>\r\n                  </div>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Offered HTS</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"offeredHts\"\r\n                        id=\"offeredHts\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.offeredHts}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Accepted HTS</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"acceptedHts\"\r\n                        id=\"acceptedHts\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.acceptedHts}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Hiv Test Result</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"hivTestResult\"\r\n                        id=\"hivTestResult\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.hivTestResult}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Reffered for ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"referredForArt\"\r\n                        id=\"referredForArt\"\r\n                        onChange={handleInputChangeHtsService}\r\n                        value={htsServices.referredForArt}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  {/* </div> */}\r\n\r\n                  <br />\r\n\r\n                  {/* <div className='card'> */}\r\n\r\n                  {/* <div className=\"row d-flex\"> */}\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"teal\"\r\n                    style={{ width: \"100%\", height: \"45px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>PreP Services</h2>\r\n                  </LabelSui>\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Offered Prep</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"offeredPrep\"\r\n                        id=\"offeredPrep\"\r\n                        onChange={handleInputChangePrepServices}\r\n                        value={prepServices.offeredPrep}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Accepted PreP</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"acceptedPrep\"\r\n                        id=\"acceptedPrep\"\r\n                        onChange={handleInputChangePrepServices}\r\n                        value={prepServices.acceptedPrep}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \">\r\n                    <FormGroup>\r\n                      <Label>Reffered for Prep</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"referredForPrep\"\r\n                        id=\"referredForPrep\"\r\n                        onChange={handleInputChangePrepServices}\r\n                        value={prepServices.referredForPrep}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"0\">No</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* </div> */}\r\n\r\n                  {/* <div className='card'> */}\r\n                  <LabelSui\r\n                    as=\"a\"\r\n                    color=\"teal\"\r\n                    style={{ width: \"100%\", height: \"45px\" }}\r\n                    ribbon\r\n                  >\r\n                    <h2 style={{ color: \"#fff\" }}>Commodity Service</h2>\r\n                  </LabelSui>\r\n\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Condom Dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"condomDispensed\"\r\n                        id=\"condomDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.condomDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Lubricants Dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"lubricantsDispensed\"\r\n                        id=\"lubricantsDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.lubricantsDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Oral Quick/ HIVST dispensed</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"oralQuickDispensed\"\r\n                        id=\"oralQuickDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oralQuickDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>New Needles/Syringe Dispesend</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"newNeedleDispensed\"\r\n                        id=\"newNeedleDispensed\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.newNeedleDispensed}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Old Needles/Syringe Retrived</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"oldNeedleRetrived\"\r\n                        id=\"oldNeedleRetrived\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.oldNeedleRetrived}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <Label>Nalxone Provided</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"nalxoneProvided\"\r\n                        id=\"nalxoneProvided\"\r\n                        onChange={handleInputChangeCommodityServices}\r\n                        value={commodityService.nalxoneProvided}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {/* </div> */}\r\n                  <div className=\"row d-flex\">\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"blue\"\r\n                      style={{ width: \"106%\", height: \"45px\" }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}>HIV Educaton Provided</h2>\r\n                    </LabelSui>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>IEC material/Pamphelt</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"iecMaterial\"\r\n                          id=\"iecMaterial\"\r\n                          onChange={handleInputChangeHivEducationProvided}\r\n                          value={hivEducationProvided.iecMaterial}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>InterPersonal Communication</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"interPersonalCommunication\"\r\n                          id=\"interPersonalCommunication\"\r\n                          onChange={handleInputChangeHivEducationProvided}\r\n                          value={\r\n                            hivEducationProvided.interPersonalCommunication\r\n                          }\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4 \">\r\n                      <FormGroup>\r\n                        <Label>Peer Group Communication</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"peerGroupCommunication\"\r\n                          id=\"peerGroupCommunication\"\r\n                          onChange={handleInputChangeHivEducationProvided}\r\n                          value={hivEducationProvided.peerGroupCommunication}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                          <option value=\"No\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                {/* <div className='card'> */}\r\n\r\n                <div className=\" row d-flex\">\r\n                  <div className=\"row d-flex\">\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"blue\"\r\n                      style={{ width: \"106%\", height: \"45px\" }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}>Biomedical Services</h2>\r\n                    </LabelSui>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Screening</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreening\"\r\n                            id=\"stiScreening\"\r\n                            value={bioMedicalServices.stiScreening}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.stiScreening === \"1\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiScreeningResponse\"\r\n                            id=\"stiScreeningResponse\"\r\n                            value={bioMedicalServices.stiScreeningResponse}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Syndromic Management</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiSyndromicManagement\"\r\n                            id=\"stiSyndromicManagement\"\r\n                            value={bioMedicalServices.stiSyndromicManagement}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"1\">Yes</option>\r\n                            <option value=\"0\">No</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.stiSyndromicManagement === \"1\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label>Facility Referred to</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityReferredTo\"\r\n                            id=\"facilityReferredTo\"\r\n                            value={bioMedicalServices.facilityReferredTo}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>STI Treatment/ Referral</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"stiTreatment\"\r\n                            id=\"stiTreatment\"\r\n                            value={bioMedicalServices.stiTreatment}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"1\"> Yes </option>\r\n                            <option value=\"0\"> No </option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.stiTreatment === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to Sti Screening </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToStiScreening\"\r\n                            id=\"facilityRefferedToStiScreening\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToStiScreening\r\n                            }\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Screened for TB</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"screenedForTb\"\r\n                            id=\"screenedForTb\"\r\n                            value={bioMedicalServices.screenedForTb}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.screenedForTb === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToScreenedTo\"\r\n                            id=\"facilityRefferedToScreenedTo\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToScreenedTo\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided with TPT</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithTpt\"\r\n                            id=\"providedWithTpt\"\r\n                            value={bioMedicalServices.providedWithTpt}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Screened For Viral Heaptits</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"screenedForViralHepatits\"\r\n                            id=\"screenedForViralHepatits\"\r\n                            value={bioMedicalServices.screenedForViralHepatits}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"1\"> Yes </option>\r\n                            <option value=\"0\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.screenedForViralHepatits ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToScreenedForViralHepatits\"\r\n                            id=\"facilityRefferedToScreenedFclientVerificationObjorViralHepatits\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToScreenedForViralHepatits\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Viral Hepatits Screen Result</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"viralHepatitsScreenResult\"\r\n                            id=\"viralHepatitsScreenResult\"\r\n                            value={bioMedicalServices.viralHepatitsScreenResult}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Positive\"> Positive </option>\r\n                            <option value=\"Negative\"> Negative</option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.viralHepatitsScreenResult ===\r\n                        \"Positive\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                            id=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToViralHepatitsScreenResult\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Vaccination For Viral Hepatits</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"vaccinationForViralHepatits\"\r\n                            id=\"vaccinationForViralHepatits\"\r\n                            value={\r\n                              bioMedicalServices.vaccinationForViralHepatits\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.vaccinationForViralHepatits ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                            id=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToVaccinationForViralHepatits\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredFamilyPlanningServices\"\r\n                            id=\"offeredFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.offeredFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.offeredFamilyPlanningServices ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                            id=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToOfferedFamilyPlanningServices\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Refferred For Family Planning Services</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"referredForFamilyPlanningServices\"\r\n                            id=\"referredForFamilyPlanningServices\"\r\n                            value={\r\n                              bioMedicalServices.referredForFamilyPlanningServices\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.referredForFamilyPlanningServices ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                            id=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToReferredForFamilyPlanningServices\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Provided With Drug Rehab</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"providedWithDrugRehab\"\r\n                            id=\"providedWithDrugRehab\"\r\n                            value={bioMedicalServices.providedWithDrugRehab}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.providedWithDrugRehab === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                            id=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefeRredToProvidedWithDrugRehab\r\n                            }\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Offered MHPSS</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"offeredMhpss\"\r\n                            id=\"offeredMhpss\"\r\n                            value={bioMedicalServices.offeredMhpss}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.offeredMhpss === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label>Facility Refferred to </Label> Type of MHpss\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToOfferedMhpss\"\r\n                            id=\"facilityRefferedToOfferedMhpss\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToOfferedMhpss\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            On Medical Assisted Therapy (MAT) for atleast\r\n                          </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"onMedicalAssistedTherapy\"\r\n                            id=\"onMedicalAssistedTherapy\"\r\n                            value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {bioMedicalServices.onMedicalAssistedTherapy ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                            id=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToOnMedicalAssistedTherapy\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Recived Nalxone for Overdose Treatment</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"recivedNalxoneForOverdoseTreatment\"\r\n                            id=\"recivedNalxoneForOverdoseTreatment\"\r\n                            value={\r\n                              bioMedicalServices.recivedNalxoneForOverdoseTreatment\r\n                            }\r\n                            onChange={handleInputChangebioMedicalServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select </option>\r\n                            <option value=\"Yes\"> Yes </option>\r\n                            <option value=\"No\"> No </option>\r\n                          </Input>\r\n                          {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row d-flex\">\r\n                    <LabelSui\r\n                      as=\"a\"\r\n                      color=\"blue\"\r\n                      style={{ width: \"106%\", height: \"45px\" }}\r\n                      ribbon\r\n                    >\r\n                      <h2 style={{ color: \"#fff\" }}> Structural Services </h2>\r\n                    </LabelSui>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Provided or Reffered for Empowerment</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"providedOrRefferedForEmpowerment\"\r\n                          id=\"providedOrRefferedForEmpowerment\"\r\n                          value={\r\n                            structuralServices.recivedNalxoneForOverdoseTreatment\r\n                          }\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"1\"> Yes </option>\r\n                          <option value=\"0\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                      {structuralServices.recivedNalxoneForOverdoseTreatment ===\r\n                        \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                            id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment\r\n                            }\r\n                            onChange={handleInputChangestructuralServices}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Legal Aid Service Type</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"legalAidServiceType\"\r\n                          id=\"legalAidServiceType\"\r\n                          value={structuralServices.legalAidServiceType}\r\n                          onChange={handleInputChangestructuralServices}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\"> Select </option>\r\n                          <option value=\"1\"> Yes </option>\r\n                          <option value=\"0\"> No </option>\r\n                        </Input>\r\n                        {/* {errors.legalAidServiceType !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.legalAidServiceType}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                      </FormGroup>\r\n                      {structuralServices.legalAidServiceType === \"Yes\" && (\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <Label> Facility Refferred to </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityRefferedLegalAidServiceType\"\r\n                            id=\"facilityRefferedLegalAidServiceType\"\r\n                            value={\r\n                              facilityRefferedToo.facilityRefferedLegalAidServiceType\r\n                            } //  min={enrollDate}\r\n                            onChange={handleInputChangeReferred}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {/* END OF First DOSAGE */}\r\n              {saving ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                onClick={handleSubmit}\r\n                disabled={disabledAgeBaseOnAge}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={handleCancel}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport KpPrev from \"./main/webapp/jsx/components/KpPrev\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n          <Route path=\"/kp-prev\">\r\n            <KpPrev />\r\n          </Route>\r\n\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}