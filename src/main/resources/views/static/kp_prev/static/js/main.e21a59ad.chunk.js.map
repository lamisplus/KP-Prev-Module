{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/KpPrev/KpPrevEnrolled.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/KpPrev/index.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","Patients","calculate_age","dob","today","Date","birthDate","split","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","concat","baseUrl","pageSize","page","headers","then","response","result","records","map","row","name","firstName","lastName","hospital_number","gender","age","dateOfBirth","undefined","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","size","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","KpPrevEnrolled","participantId","count","Label","vaccinationStatus","divStyle","borderRadius","Home","key","setKey","useState","Fragment","className","startIcon","FaUserPlus","textTransform","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","classes","console","log","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","TiArrowBack","dateParts","dateObject","moment","format","phoneNumber","contactPoint","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","useStyles","navItemText","SubMenu","patientObjs","setpatientObj","genderType","setGenderType","Observation","observation","filter","x","catch","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","getAge","Vaccination","errors","setErrors","temp","covidEffect","setCovidEffect","vaccine","setVaccine","objValues","setObjValues","adverseEffect","batchNumber","doseNumber","patientId","vaccinationFacility","vaccineDate","saving","setSaving","VACCINE","COVID_ADVERSE_EFFECT","handleInputChange","e","target","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","CardBody","_Fragment","FormGroup","Input","onChange","InputGroup","max","MatButton","SaveIcon","preventDefault","Object","values","every","post","toast","loadPatients","disabled","CancelIcon","PatientVaccinationHistory","vacinationList","setVaccinationtList","modal","setModal","open","setOpen","React","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","setRecord","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","async","patients","render","rowData","position","Dropdown","item","Icon","dateOfServicesProvided","action","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","recentActivities","setRecentActivities","loadingRecent","setLoadingRecent","RecentActivities","Authorization","VaccinationHistory","PatientnHistory","loading","setLoading","useHistory","PatientHistory","personId","activities","LoadViewPage","path","actionType","isLoading","date","viewable","LoadDeletePage","fontFamily","border","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","green","fingersCodeset","length","personCapturedFingers","_","uniq","biometricItems","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","deleteBiometric","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","for","deviceName","selectedDevice","errorType","errorName","required","_ref","validate","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","datatype","responses","_ref2","_ref3","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","chronicMedicationModal","setChronicMedicationModal","supportiveCareModal","setSupportiveCareModal","vaccinationHistory","setVaccinationHistory","inclusionHistory","setInclusionHistory","demograhicHistory","setDemographicHistory","vitalHistory","setVitalHistory","comobitieHistory","setComobitieHistory","reinfectionHistory","setReinfectionHistory","signsSymptomsHistory","setSignsSymptomsHistory","chronicMedicationHistory","setChronicMedicationHistory","medicationHistory","setMedicationHistory","supportiveCarenHistory","setSupportiveCareHistory","CardContent","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","inclusionCriteriaToggle","Demographic","demographicToggle","ViccinationToggle","VitalSign","VitalSignToggle","Comorbitie","ComorbitieToggle","ReinfectionToggle","ChronicMedicationToggle","MedicationToggle","SignsSymptoms","SignsSymptomsToggle","SupportiveCareToggle","flexGrow","KpPrev","useTheme","selectedOptions","setSelectedOptions","selected","setSelected","setObservation","htsService","prepServices","setDate","dateServiceOffered","htsServices","setHtsServices","offeredHts","acceptedHts","hivTestResult","referredForArt","setPrepServices","offeredPrep","acceptedPrep","referredForPrep","commodityService","setCommodityService","condomDispensed","lubricantsDispensed","oralQuickDispensed","newNeedleDispensed","oldNeedleRetrived","nalxoneProvided","hivEducationProvided","setHivEducationProvided","iecMaterial","interPersonalCommunication","peerGroupCommunication","bioMedicalServices","setbioMedicalServices","stiScreening","stiSyndromicManagement","stiTreatment","screenedForTb","providedWithTpt","screenedForViralHepatits","viralHepatitsScreenResult","vaccinationForViralHepatits","offeredFamilyPlanningServices","referredForFamilyPlanningServices","providedWithDrugRehab","offeredMhpss","onMedicalAssistedTherapy","recivedNalxoneForOverdoseTreatment","structuralServices","setstructuralServices","providedOrRefferedForEmpowerment","legalAidServiceType","facilityRefferedToo","setFacilityRefferedToo","facilityRefferedToStiScreening","facilityRefferedToScreenedTo","facilityRefferedToScreenedForViralHepatits","facilityRefferedToViralHepatitsScreenResult","facilityRefferedToVaccinationForViralHepatits","facilityRefferedToOfferedFamilyPlanningServices","facilityRefferedToReferredForFamilyPlanningServices","facilityRefeRredToProvidedWithDrugRehab","facilityRefferedToOfferedMhpss","facilityRefferedToOnMedicalAssistedTherapy","facilityRefferedToRecievedNalxoneForOverdoseTreatment","handleInputChangeReferred","handleInputChangeHtsService","handleInputChangePrepServices","handleInputChangeCommodityServices","handleInputChangeHivEducationProvided","handleInputChangebioMedicalServices","handleInputChangestructuralServices","LabelSui","stiScreeningResponse","facilityReferredTo","facilityRefferedLegalAidServiceType","Spinner","art","setArt","activeTab","prepId","PatientCardDetail","AddmissionHome","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","basicInfo","setBasicInfo","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","relatives","setRelatives","phone","email","relationshipId","middleName","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","patientDTO","setPatientDTO","userDetail","user","useLocation","showContactCard","setShowContactCard","knownMedicalCondition","medicalCondition","occupation","vaccineId","visitDate","visitId","workInHealthSector","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","GetCountry","setStateByCountryId","useCallback","sort","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","uniqueId","getRelationship","relationship","handleInputChangeRelatives","refferedForPrep","replace","slice","handleInputChangePhoneNumber","inputName","NumberValue","checkNumberLimit","onClickContactCard","onClickRelativeCard","autoClose","hideProgressBar","margingRight","min","defaultChecked","ageNumber","currentDate","setMonth","dobNew","toISOString","Math","abs","maritalStatusOption","occupationOption","educationOption","FaPlus","FaAngleDown","getCountryId","landmark","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","newConatctsInfo","contactInfo","fullName","surname","push","patientForm","person","vaccinationEnrollment","POSITION","BOTTOM_CENTER","subErrors","handleCancel","setToday","substr","editRelative","setEditRelative","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","femaleStatus","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","sourceReferral","setSourceReferral","hivStatus","setHivStatus","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","newSex","setNewSex","pregnancyStatus","setPregnancyStatus","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","hideTargetGroup","setHideTargetGroup","getSex","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","identifiers","altphone","country","maritalStatus","employmentStatus","education","getStateId","patientAge","sex","alert","getSexId","checkPhoneNumberBasic","dateOfRegistration1","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","AddIcon","handleAddRelative","code","TOP_RIGHT","maxWidth","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","enrollment","getCharacters","handleCheckBox","checked","floor","random","htmlFor","hivEnrollment","put","App","Router","Switch","Route","PatientDetail","RegisterPatientPage","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","label","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.e21a59ad.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n\r\n// export const url =  'http://localhost:8383/api/v1/';\r\n// export const  token = 'eJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzA5NjA0MzY3fQ.bx1-8c47O04PH6hx6K4R8Ad-ZfoMewg1BzYi5q3O5P5u-FRx-xLb35iBzfgRGuAjogSheZQUUG1ggkw7QoBvKw';","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    // const calculate_age = (dob) => {\r\n    //     const today = new Date();\r\n    //     //const dateParts = dob.split(\"-\");\r\n    //     const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    //     let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    //     const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    //     // if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n    //     //     age_now--;\r\n    //     // }\r\n\r\n    //     // if (age_now === 0) {\r\n    //     //     return m + \" month(s)\";\r\n    //     // }\r\n    //     return age_now + \" year(s)\";\r\n    // };\r\n\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Status\", field: \"v_status\", filtering: false },\r\n            //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}patient?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: getHospitalNumber(row.identifier),\r\n                                   \r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                   age: (row.dateOfBirth === 0 ||\r\n                                    row.dateOfBirth === undefined ||\r\n                                    row.dateOfBirth === null ||\r\n                                    row.dateOfBirth === \"\" )\r\n                                    ? 0\r\n                                    : calculate_age(row.dateOfBirth),\r\n                                    \r\n                                    //count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}> Patient Dashboard </span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst KpPrevEnrolled = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KpPrevEnrolled;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList'\r\n//import PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport KpPrevEnrolled from \"./KpPrev/KpPrevEnrolled\";\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>KP-PREV</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"vaccinated\" title=\"Vaccinated Patients\">                   \r\n                    <PatientVaccinatedLIst />\r\n                  </Tab> */}\r\n                  <Tab eventKey=\"kpprev\" title=\"Kp-Prev\">                   \r\n                    <KpPrevEnrolled />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n    const getPhoneNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(\r\n        (obj) => obj.type === \"phone\"\r\n      );\r\n      return phoneNumber ? phoneNumber.value : \"\";\r\n    };\r\n    const getAddress = (identifier) => {\r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find((obj) => obj.city);\r\n      const houseAddress =\r\n        address && address.line[0] !== null ? address.line[0] : \"\";\r\n      const landMark =\r\n        address && address.city && address.city !== null ? address.city : \"\";\r\n      return address ? houseAddress + \" \" + landMark : \"\";\r\n    };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                        {getPhoneNumber(patientObj.contactPoint)}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)}{\" \"}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    // const loadVaccination = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    // }\r\n    // const loadIcu = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'icu'})\r\n    // }\r\n    // const loadAddmission = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    // }\r\n    // const onClickDischarge = (row) =>{        \r\n    //     props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    // }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadKpPrev = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:\"kp-prev\"})\r\n    }\r\n    // const loadPatientHistory = ()=>{\r\n    //     //setActiveItem('history')\r\n    //     props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    // }\r\n\r\n\r\n    return ( \r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>      \r\n                <Menu.Item onClick={() => loadKpPrev()} > Kp-Prev</Menu.Item>               \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n    const LoadModal = (row) => {\r\n        toggle();\r\n        setRecord(row);\r\n      };\r\n\r\n\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n\r\n    const dummyData = [\r\n        {\r\n          dateOfServicesProvided: \"2023-10-15\", // Dummy date for the first column\r\n          action: \"Sample Action\" // Dummy data for the second column\r\n        },\r\n        {\r\n          dateOfServicesProvided: \"2023-11-20\", // Another dummy date\r\n          action: \"Another Action\" // Another dummy action\r\n        },\r\n        // Add more objects for additional rows as needed\r\n      ];\r\n       const handleAction = (rowData) => {\r\n    // Define your action handling logic here\r\n    console.log(\"Action clicked for:\", rowData);\r\n  };\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    // Placeholder function\r\n    console.log(\"View page loaded for:\", row);\r\n  };\r\n\r\n    \r\n    //console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            {/* <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>        */}\r\n            <br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                  {\r\n                      title: \"Date Of Services Provided\",\r\n                      field: \"dateOfServicesProvided\",\r\n                    },\r\n                    {  title: \"Action\", \r\n                    field: \"action\", \r\n                    filtering: false,\r\n                    render: rowData => \r\n                    <div>\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item>\r\n                            <Button \r\n                             style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                             primary \r\n                             >  \r\n                             <Dropdown item text=\"Action\" style= {{color:\"white\"}}> \r\n                             <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                               \r\n                                 <Dropdown.Item\r\n                                   //onClick={() => LoadViewPage(rowData, \"view\")}\r\n                                 >\r\n                                   {\" \"}\r\n                                   <Icon name=\"eye\" />\r\n                                   View{\" \"}\r\n                                 </Dropdown.Item>\r\n                               \r\n                               \r\n                                 <Dropdown.Item\r\n                                  // onClick={() => LoadViewPage(rowData, \"update\")}\r\n                                 >\r\n                                   <Icon name=\"edit\" />\r\n                                   Edit\r\n                                 </Dropdown.Item>\r\n                               \r\n                               \r\n                                 <Dropdown.Item\r\n                                   //onClick={() => LoadModal(rowData, \"delete\")}\r\n                                 >\r\n                                   {\" \"}\r\n                                   <Icon name=\"trash\" /> Delete\r\n                                 </Dropdown.Item>\r\n                               \r\n                             </Dropdown.Menu>\r\n                           </Dropdown>\r\n                             \r\n                             </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>  \r\n                },\r\n                \r\n                // { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                // { title: \"Location\", field: \"location\", filtering: false },      \r\n                // { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                // { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                // { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                // { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              \r\n              \r\n            //   data={ vacinationList.map((row) => ({\r\n\r\n                \r\n            //         //dateOfServicesProvided: row\r\n            //        // vaccine: row.vaccineName,\r\n            //         //vaccineDate: row.vaccineDate,\r\n            //         //batchNumber: row.batchNumber,\r\n            //         //doseNumber: row.doseNumber,\r\n            //        // location: row.location,\r\n            //         //vaccinationFacility: row.vaccinationFacility,\r\n            //         //adverseEffect: row.adverseEffect,\r\n            //         actions:\r\n                    \r\n            \r\n            //         <div>\r\n            //             <Menu.Menu position='right'  >\r\n            //             <Menu.Item >\r\n            //                 <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n            //                 <Dropdown item text='Action'>\r\n\r\n            //                 <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n            //                     <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n            //                     <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n            //                 </Dropdown.Menu>\r\n            //             </Dropdown>\r\n            //                 </Button>\r\n            //             </Menu.Item>\r\n            //             </Menu.Menu>\r\n            //         </div>\r\n                  \r\n            //       }))}\r\n            data ={dummyData}\r\n        \r\n       //columns={columns}\r\n\r\n        \r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { useState,useEffect,Fragment} from \"react\";\r\nimport axios from \"axios\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [loadingRecent, setLoadingRecent] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (props.patientObj && props.patientObj !== null) {\r\n      RecentActivities();\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  // const RecentActivities = () => {\r\n  //   axios\r\n  //   .put('/api/v1/kpprev', data, {\r\n  //     headers: { Authorization: `Bearer ${token}` },\r\n  //   })\r\n  //     .then((response) => {\r\n  //       setLoadingRecent(false);\r\n  //       setRecentActivities(response.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       setLoadingRecent(false);\r\n  //       //console.log(error);\r\n  //     });\r\n  // };\r\n  //Get list of LaboratoryHistory\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/api/v1/kpprev/retrieve ${props.patientObj.id}/activities?full=false`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoadingRecent(false);\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setLoadingRecent(false);\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === \"\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"kp-prevention\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='kp-prev'){\r\n            props.setActiveContent({...props.activeContent, route:'kp-prevention', id:row.id, actionType:action})\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        } else if(row.path==='kp-prev'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}/api/v1/kpprev/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Card,CardBody,Form, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Table  } from \"react-bootstrap\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport Select from '@mui/material/Select';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } ,\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n}))\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\n  function getStyles(name, selectedOptions, theme) {\r\n    return {\r\n      fontWeight:\r\n        selectedOptions.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst KpPrev = (props) =>{\r\n    const theme = useTheme();\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    const patientObj = props.patientObj;\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    const classes = useStyles()\r\n   \r\n    const [saving, setSaving] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    // const [optionsForCallOutCome, setOptionsForCallOutCome] = useState([]);\r\n    const [observation, setObservation]=useState({\r\n            data: {},\r\n            date: \"\",\r\n            htsService:\"\",\r\n            prepServices:\"\",\r\n            personId: 0,\r\n            type: \"\",\r\n           \r\n    })\r\n    const [date, setDate]=useState({\r\n      dateServiceOffered:\"\"\r\n    })\r\n    const [htsServices, setHtsServices] = useState({  \r\n            offeredHts:\"\",\r\n            acceptedHts:\"\",\r\n            hivTestResult:\"\",\r\n            referredForArt:\"\",\r\n    });\r\n    const [prepServices,setPrepServices]= useState({\r\n            offeredPrep:\"\",\r\n            acceptedPrep:\"\",\r\n            referredForPrep:\"\"\r\n    })\r\n    const [commodityService, setCommodityService] =useState({\r\n          condomDispensed:\"\",\r\n          lubricantsDispensed:\"\",\r\n          oralQuickDispensed:\"\",\r\n          newNeedleDispensed:\"\",\r\n          oldNeedleRetrived:\"\",\r\n          nalxoneProvided:\"\"\r\n\r\n    })\r\n    const [hivEducationProvided, setHivEducationProvided] =useState({\r\n            iecMaterial:\"\",\r\n            interPersonalCommunication:\"\",\r\n            peerGroupCommunication:\"\"\r\n    })\r\n    const [bioMedicalServices, setbioMedicalServices] = useState({\r\n        stiScreening:\"\",\r\n        stiSyndromicManagement:\"\",\r\n        stiTreatment:\"\",\r\n        screenedForTb:\"\",\r\n        providedWithTpt:\"\",\r\n        screenedForViralHepatits:\"\",\r\n        viralHepatitsScreenResult:\"\",\r\n        vaccinationForViralHepatits:\"\",\r\n        offeredFamilyPlanningServices:\"\",\r\n        referredForFamilyPlanningServices:\"\",\r\n        providedWithDrugRehab:\"\",\r\n        offeredMhpss:\"\",\r\n        onMedicalAssistedTherapy:\"\",\r\n        recivedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n    });\r\n    const [structuralServices, setstructuralServices] =useState({\r\n      providedOrRefferedForEmpowerment:\"\",\r\n      legalAidServiceType:\"\",\r\n      peerGroupCommunication:\"\"\r\n})\r\n const [facilityRefferedToo, setFacilityRefferedToo]=useState({\r\n  facilityRefferedToStiScreening:\"\",\r\n  facilityRefferedToScreenedTo:\"\",\r\n  facilityRefferedToScreenedForViralHepatits:\"\",\r\n  facilityRefferedToViralHepatitsScreenResult:\"\",\r\n  facilityRefferedToVaccinationForViralHepatits:\"\",\r\n  facilityRefferedToOfferedFamilyPlanningServices:\"\",\r\n  facilityRefferedToReferredForFamilyPlanningServices:\"\",\r\n  facilityRefeRredToProvidedWithDrugRehab:\"\",\r\n  facilityRefferedToOfferedMhpss:\"\",\r\n  facilityRefferedToOnMedicalAssistedTherapy:\"\",\r\n  facilityRefferedToRecievedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n  \r\n })\r\n\r\n    \r\n    // useEffect(() => {\r\n    //         if(props.activeContent.actionType==='update' || props.activeContent.actionType==='view'){\r\n    //             GetFormDetail(props.activeContent.id)\r\n    //         }\r\n    // }, [props.activeContent.actionType]);\r\n    // const GetFormDetail =(id)=>{\r\n    //     axios\r\n    //         .get(`${baseUrl}observation/${id}`,\r\n    //             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n    //         )\r\n    //         .then((response) => {\r\n    //             const Obj= response.data\r\n    //             setObservation({...Obj})\r\n    //             //setClientVerificationObj({...Obj.data})\r\n    //             setAttemptList([...Obj.data.attempt]);\r\n    //             setSelected([...Obj.data.anyOfTheFollowing])\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             //console.log(error);\r\n    //         });\r\n    // }\r\n    const handleInputChange= e => {\r\n      //console.log(e.target.value)\r\n      setErrors({...temp, [e.target.name]:\"\"})\r\n      setDate({...date,  [e.target.name]: e.target.value});\r\n      \r\n  }\r\n  const handleInputChangeReferred = e => {\r\n    //console.log(e.target.value)\r\n    setErrors({...temp, [e.target.name]:\"\"})\r\n    setFacilityRefferedToo({...facilityRefferedToo,  [e.target.name]: e.target.value});\r\n    \r\n}\r\n  \r\n    const handleInputChangeHtsService= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHtsServices({...htsServices,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangePrepServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setPrepServices({...prepServices,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeCommodityServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setCommodityService({...commodityService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeHivEducationProvided = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHivEducationProvided({...hivEducationProvided,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    const handleInputChangebioMedicalServices = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setbioMedicalServices ({...bioMedicalServices,  [e.target.name]: e.target.value});\r\n       \r\n    }\r\n    const handleInputChangestructuralServices = e => {\r\n      //console.log(e.target.value)\r\n      setErrors({...temp, [e.target.name]:\"\"})\r\n      setstructuralServices ({...structuralServices,  [e.target.name]: e.target.value});\r\n     \r\n  }\r\n\r\n    //Validations of the forms\r\n    const validateAttempt = () => { \r\n        \r\n         temp.dateServiceOffered =date.dateServiceOffered?\"\": \"This field is required\"\r\n         setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n  \r\n    \r\n   \r\n    /* Remove  function **/\r\n    \r\n    \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if (validateAttempt()) {\r\n        const data = {\r\n          observation: {\r\n            data: {},\r\n            date: date.dateServiceOffered,\r\n            htsService: htsServices,\r\n            prepServices: prepServices,\r\n            personId: observation.personId,\r\n            type: observation.type,\r\n            //visitId: observation.visitId,\r\n          },\r\n          commodityService: commodityService,\r\n          hivEducationProvided: hivEducationProvided,\r\n          bioMedicalServices: bioMedicalServices,\r\n          structuralServices: structuralServices,\r\n        };\r\n        console.log(data)\r\n        setSaving(true);\r\n        axios\r\n          .post('/api/v1/kpprev', data, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            toast.success(\"Record save successful\");\r\n            // Handle any other logic here\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n          });\r\n      }\r\n    };\r\n    \r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            \r\n            {/* <div className=\"card d-flex\"> */}\r\n            <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n            >\r\n                    <h5 className='card-title' style={{color:\"#fff\"}}>\r\n                      KEY POPULATION PREVENTION FORM\r\n                    </h5>\r\n                  \r\n            </div>\r\n            <div className=\"row d-flex\">\r\n              <h2>Service Provider </h2>\r\n              <br />\r\n              <br />\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Date Of Service Provisions \r\n                  </Label>\r\n                  <Input\r\n                  type=\"date\"\r\n                  name=\"dateServiceOffered\"\r\n                  value={date.dateServiceOffered}\r\n                  onChange={handleInputChange}\r\n                  id=\"dateServiceOffered\"\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                   {errors.dateServiceOffered !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateServiceOffered}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            {/* <div className='card'> */}\r\n                \r\n                <div \r\n                  className=\"card-header\"\r\n                  style={{\r\n                  backgroundColor: \"teal\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",}} \r\n                  \r\n                >\r\n                    <h2 style={{color:'#fff'}}>HTS Services</h2>\r\n                </div>\r\n                    <br />\r\n                    <br />                \r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered HTS\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"offeredHts\"\r\n                  id=\"offeredHts\"\r\n                  onChange ={handleInputChangeHtsService}\r\n                  value={htsServices.offeredHts}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Accepted HTS\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"acceptedHts\"\r\n                  id=\"acceptedHts\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsServices.acceptedHts}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Hiv Test Result\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"hivTestResult\"\r\n                  id=\"hivTestResult\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsServices.hivTestResult}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Reffered for ART\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"referredForArt\"\r\n                  id=\"referredForArt\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsServices.referredForArt}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n            \r\n            {/* </div> */}\r\n            \r\n            <br />\r\n\r\n            {/* <div className='card'> */}\r\n\r\n            {/* <div className=\"row d-flex\"> */}\r\n            <LabelSui as='a' color='teal' style={{width:'100%', height:'45px'}} ribbon>\r\n                  <h2 style={{color:'#fff'}}>PreP Services</h2>\r\n            </LabelSui> \r\n            <br />\r\n            <br />\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredPrep\"\r\n                id=\"offeredPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.offeredPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"1\">Yes</option> \r\n                  <option value=\"0\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted PreP\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedPrep\"\r\n                id=\"acceptedPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.acceptedPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"1\">Yes</option> \r\n                  <option value=\"0\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"referredForPrep\"\r\n                id=\"referredForPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.referredForPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"1\">Yes</option> \r\n                  <option value=\"0\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            {/* </div> */}\r\n\r\n            {/* <div className='card'> */}\r\n                <LabelSui as='a' color='teal' style={{width:'100%', height:'45px'}} ribbon>\r\n                    <h2 style={{color:'#fff'}}>Commodity Service</h2>\r\n                </LabelSui> \r\n                    <br />\r\n                    <br />\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Condom Dispensed \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"condomDispensed\"\r\n                  id=\"condomDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.condomDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Lubricants Dispensed\r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"lubricantsDispensed\"\r\n                  id=\"lubricantsDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.lubricantsDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Oral Quick/ HIVST dispensed \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"oralQuickDispensed\"\r\n                  id=\"oralQuickDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.oralQuickDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    New Needles/Syringe Dispesend \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"newNeedleDispensed\"\r\n                  id=\"newNeedleDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.newNeedleDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Old Needles/Syringe Retrived  \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"oldNeedleRetrived\"\r\n                  id=\"oldNeedleRetrived\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.oldNeedleRetrived}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Nalxone Provided \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"nalxoneProvided\"\r\n                  id=\"nalxoneProvided\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.nalxoneProvided}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                {/* </div> */}\r\n                <div className=\"row d-flex\">\r\n             \r\n                <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n                  <h2 style={{color:'#fff'}}>HIV Educaton Provided</h2>\r\n                </LabelSui>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                IEC material/Pamphelt \r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"iecMaterial\"\r\n               id=\"iecMaterial\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.iecMaterial}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                 <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               InterPersonal Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"interPersonalCommunication\"\r\n               id=\"interPersonalCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.interPersonalCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Peer Group Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"peerGroupCommunication\"\r\n               id=\"peerGroupCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.peerGroupCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n           </div>\r\n           </div>\r\n           <br/>\r\n           {/* <div className='card'> */}\r\n           \r\n           \r\n\r\n           <div className=\" row d-flex\">\r\n           <div className=\"row d-flex\">\r\n        <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n          <h2 style={{color:'#fff'}}>Biomedical Services</h2>\r\n        </LabelSui>\r\n        <br />\r\n        <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    STI Screening\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={bioMedicalServices.stiScreening}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"1\">Yes</option>\r\n                    <option value=\"0\">No</option>\r\n                  </Input>\r\n                </FormGroup>    \r\n              </div>\r\n                {bioMedicalServices.stiScreening === \"1\" && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"stiScreeningResponse\"\r\n                      id=\"stiScreeningResponse\"\r\n                      value={bioMedicalServices.stiScreeningResponse}\r\n                      onChange={handleInputChangebioMedicalServices}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    STI Syndromic Management\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiSyndromicManagement\"\r\n                    id=\"stiSyndromicManagement\"\r\n                    value={bioMedicalServices.stiSyndromicManagement}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"1\">Yes</option>\r\n                    <option value=\"0\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>      \r\n                {bioMedicalServices.stiSyndromicManagement === \"1\" && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <Label>Facility Referred to</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"facilityReferredTo\"\r\n                      id=\"facilityReferredTo\"\r\n                      value={bioMedicalServices.facilityReferredTo}\r\n                      onChange={handleInputChangebioMedicalServices}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n             \r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Treatment/ Referral\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiTreatment\"\r\n                    id=\"stiTreatment\"\r\n                    value={bioMedicalServices.stiTreatment}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.stiTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to Sti Screening </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToStiScreening\"\r\n                    id=\"facilityRefferedToStiScreening\"\r\n                    value={facilityRefferedToo.facilityRefferedToStiScreening}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                      Screened for TB                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForTb\"\r\n                    id=\"screenedForTb\"\r\n                    value={bioMedicalServices.screenedForTb}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.screenedForTb === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToScreenedTo\"\r\n                    id=\"facilityRefferedToScreenedTo\"\r\n                    value={facilityRefferedToo.facilityRefferedToScreenedTo} \r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided with TPT      \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithTpt\"\r\n                    id=\"providedWithTpt\"\r\n                    value={bioMedicalServices.providedWithTpt}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened For Viral Heaptits \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForViralHepatits\"\r\n                    id=\"screenedForViralHepatits\"\r\n                    value={bioMedicalServices.screenedForViralHepatits}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.screenedForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToScreenedForViralHepatits\"\r\n                    id=\"facilityRefferedToScreenedFclientVerificationObjorViralHepatits\"\r\n                    value={facilityRefferedToo.facilityRefferedToScreenedForViralHepatits} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Viral Hepatits Screen Result \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"viralHepatitsScreenResult\"\r\n                    id=\"viralHepatitsScreenResult\"\r\n                    value={bioMedicalServices.viralHepatitsScreenResult}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Positive\"> Positive </option>\r\n                    <option value=\"Negative\"> Negative</option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.viralHepatitsScreenResult === \"Positive\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                    id=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                    value={facilityRefferedToo.facilityRefferedToViralHepatitsScreenResult} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Vaccination For Viral Hepatits\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"vaccinationForViralHepatits\"\r\n                    id=\"vaccinationForViralHepatits\"\r\n                    value={bioMedicalServices.vaccinationForViralHepatits}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.vaccinationForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                    id=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                    value={facilityRefferedToo.facilityRefferedToVaccinationForViralHepatits} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredFamilyPlanningServices\"\r\n                    id=\"offeredFamilyPlanningServices\"\r\n                    value={bioMedicalServices.offeredFamilyPlanningServices}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.offeredFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                    id=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                    value={facilityRefferedToo.facilityRefferedToOfferedFamilyPlanningServices} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Refferred For Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"referredForFamilyPlanningServices\"\r\n                    id=\"referredForFamilyPlanningServices\"\r\n                    value={bioMedicalServices.referredForFamilyPlanningServices}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.referredForFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                    id=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                    value={facilityRefferedToo.facilityRefferedToReferredForFamilyPlanningServices} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided With Drug Rehab\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithDrugRehab\"\r\n                    id=\"providedWithDrugRehab\"\r\n                    value={bioMedicalServices.providedWithDrugRehab}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.providedWithDrugRehab === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                    id=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                    value={facilityRefferedToo.facilityRefeRredToProvidedWithDrugRehab} \r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}      \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered MHPSS\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredMhpss\"\r\n                    id=\"offeredMhpss\"\r\n                    value={bioMedicalServices.offeredMhpss}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.offeredMhpss === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label>Facility Refferred to </Label> Type  of MHpss \r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToOfferedMhpss\"\r\n                    id=\"facilityRefferedToOfferedMhpss\"\r\n                    value={facilityRefferedToo.facilityRefferedToOfferedMhpss} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  On Medical Assisted Therapy (MAT) for atleast\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"onMedicalAssistedTherapy\"\r\n                    id=\"onMedicalAssistedTherapy\"\r\n                    value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.onMedicalAssistedTherapy === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                    id=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                    value={facilityRefferedToo.facilityRefferedToOnMedicalAssistedTherapy} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Recived Nalxone for Overdose Treatment \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"recivedNalxoneForOverdoseTreatment\"\r\n                    id=\"recivedNalxoneForOverdoseTreatment\"\r\n                    value={bioMedicalServices.recivedNalxoneForOverdoseTreatment}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n             </div>\r\n             </div>\r\n\r\n             <div className=\"row d-flex\">\r\n\r\n             <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n\r\n              <h2 style={{color:'#fff'}}> Structural Services  </h2>\r\n              </LabelSui>\r\n              <br />\r\n              <br />\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided or Reffered for Empowerment\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedOrRefferedForEmpowerment\"\r\n                    id=\"providedOrRefferedForEmpowerment\"\r\n                    value={structuralServices.recivedNalxoneForOverdoseTreatment}\r\n                    onChange={handleInputChangestructuralServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {structuralServices.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                    id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                    value={facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment}    \r\n                    onChange={handleInputChangestructuralServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                       Legal Aid Service Type\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"legalAidServiceType\"\r\n                    id=\"legalAidServiceType\"\r\n                    value={structuralServices.legalAidServiceType}\r\n                    onChange={handleInputChangestructuralServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.legalAidServiceType !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.legalAidServiceType}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {structuralServices.legalAidServiceType === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedLegalAidServiceType\"\r\n                    id=\"facilityRefferedLegalAidServiceType\"\r\n                    value={facilityRefferedToo.facilityRefferedLegalAidServiceType} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n\r\n                </div>\r\n             </div>\r\n             {/* </div> */}\r\n\r\n\r\n\r\n             </div>\r\n            {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              //hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n              //disabled={attemptList.length <= 0 && !saving ? true : false}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {\" \"}\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update\"\r\n                    : \"Save\"}\r\n                </span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update...\"\r\n                    : \"Save...\"}\r\n                </span>\r\n              )}\r\n            </MatButton>\r\n            {/* </div> */}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default KpPrev;\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\nimport KpPrev from '../KpPrev';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >KP-PREV /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}  \r\n\r\n          {activeContent.route==='kp-prev' &&(<KpPrev patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}       \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        COVID_ADVERSE_EFFECT()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    //COVID_ADVERSE_EFFECT\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n        }\r\n                \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value === \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value === \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const [date, setDate]=useState({\r\n      dateServiceOffered:\"\"\r\n    })\r\n\r\n    const [htsServices, setHtsServices] = useState({  \r\n      offeredHts:\"\",\r\n      acceptedHts:\"\",\r\n      hivTestResult:\"\",\r\n      referredForArt:\"\",\r\n});\r\nconst [prepServices,setPrepServices]= useState({\r\n        offeredPrep:\"\",\r\n        acceptedPrep:\"\",\r\n        refferedForPrep:\"\"\r\n\r\n\r\n\r\n})\r\nconst [commodityService, setCommodityService] =useState({\r\n      condomDispensed:\"\",\r\n      lubricantsDispensed:\"\",\r\n      oralQuickDispensed:\"\",\r\n      newNeedleDispensed:\"\",\r\n      oldNeedleRetrived:\"\",\r\n      nalxoneProvided:\"\"\r\n\r\n})\r\nconst [hivEducationProvided, setHivEducationProvided] =useState({\r\n        iecMaterial:\"\",\r\n        interPersonalCommunication:\"\",\r\n        peerGroupCommunication:\"\"\r\n})\r\nconst [bioMedicalServices, setbioMedicalServices] = useState({\r\n  stiScreening:\"\",\r\n  stiSyndromicManagement:\"\",\r\n  stiTreatment:\"\",\r\n  screenedForTb:\"\",\r\n  providedWithTpt:\"\",\r\n  screenedForViralHepatits:\"\",\r\n  viralHepatitsScreenResult:\"\",\r\n  vaccinationForViralHepatits:\"\",\r\n  offeredFamilyPlanningServices:\"\",\r\n  referredForFamilyPlanningServices:\"\",\r\n  providedWithDrugRehab:\"\",\r\n  offeredMhpss:\"\",\r\n  onMedicalAssistedTherapy:\"\",\r\n  recivedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n});\r\nconst [structuralServices, setstructuralServices] =useState({\r\n  providedOrRefferedForEmpowerment:\"\",\r\n  legalAidServiceType:\"\",\r\n  peerGroupCommunication:\"\"\r\n})\r\nconst [facilityRefferedToo, setFacilityRefferedToo]=useState({\r\nfacilityRefferedToStiScreening:\"\",\r\nfacilityRefferedToScreenedTo:\"\",\r\nfacilityRefferedToScreenedForViralHepatits:\"\",\r\nfacilityRefferedToViralHepatitsScreenResult:\"\",\r\nfacilityRefferedToVaccinationForViralHepatits:\"\",\r\nfacilityRefferedToOfferedFamilyPlanningServices:\"\",\r\nfacilityRefferedToReferredForFamilyPlanningServices:\"\",\r\nfacilityRefeRredToProvidedWithDrugRehab:\"\",\r\nfacilityRefferedToOfferedMhpss:\"\",\r\nfacilityRefferedToOnMedicalAssistedTherapy:\"\",\r\nfacilityRefferedToRecievedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n\r\n})\r\n    \r\n      // const handleInputChangeDate= e => {\r\n      //   //console.log(e.target.value)\r\n      //   setErrors({...temp, [e.target.name]:\"\"})\r\n      //   setDate({...date,  [e.target.name]: e.target.value});\r\n        \r\n      // }\r\n      const handleInputChangeReferred = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setFacilityRefferedToo({...facilityRefferedToo,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    const handleInputChangeHtsService= e => {\r\n      //console.log(e.target.value)\r\n      setErrors({...temp, [e.target.name]:\"\"})\r\n      setHtsServices({...htsServices,  [e.target.name]: e.target.value});\r\n      \r\n  }\r\n    const handleInputChangePrepServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setPrepServices({...prepServices,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeCommodityServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setCommodityService({...commodityService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeHivEducationProvided = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHivEducationProvided({...hivEducationProvided,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    const handleInputChangebioMedicalServices = e => {\r\n      //console.log(e.target.value)\r\n      setErrors({...temp, [e.target.name]:\"\"})\r\n      setbioMedicalServices ({...bioMedicalServices,  [e.target.name]: e.target.value});\r\n     \r\n  }\r\n  const handleInputChangestructuralServices = e => {\r\n    //console.log(e.target.value)\r\n    setErrors({...temp, [e.target.name]:\"\"})\r\n    setstructuralServices ({...structuralServices,  [e.target.name]: e.target.value});\r\n   \r\n}\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Kp-Prev /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration===\"\" ? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        \r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"5\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <p><b style={{color:\"red\"}}>{basicInfo.age!==\"\" && basicInfo.age< 5 ? \"The minimum age is 5\" : \" \"} </b></p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                    {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showContactCard && (\r\n                                  <div className=\"card-body\">\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'phoneNumber')}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                                  {errors.phoneNumber !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                      ) : \"\" }\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Alt. Phone Number</Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"altPhonenumber\"\r\n                                                    id=\"altPhonenumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'altPhonenumber')}}\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                 />\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Email</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"email\"\r\n                                                      name=\"email\"\r\n                                                      id=\"email\"\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      value={basicInfo.email}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      required\r\n                                                  />\r\n                                                \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Street Address <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"address\"\r\n                                                      id=\"address\"\r\n                                                      value={basicInfo.address}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                  />\r\n                                                {errors.address !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.address}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Landmark</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"landmark\"\r\n                                                      id=\"landmark\"\r\n                                                      value={basicInfo.landmark}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      \r\n                                                  />\r\n                                                  \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                    {showRelative===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showRelative && (\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                                                        <Input\r\n                                                                            type=\"text\"\r\n                                                                            name=\"phone\"\r\n                                                                            id=\"phone\"\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                            value={relatives.phone}\r\n                                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {errors.phone !==\"\" ? (\r\n                                                                            <span className={classes.error}>{errors.phone}</span>\r\n                                                                            ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                                    {/* </div> */}\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Adding First DOSAGE FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Key Population Prevention </h5>\r\n                                </div>\r\n\r\n                                \r\n            {/* <div className=\"card d-flex\"> */}\r\n        \r\n            <div className=\"row d-flex\">\r\n              <h2>Service Provider </h2>\r\n              <br />\r\n              <br />\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Date Of Service Provisions \r\n                  </Label>\r\n                  <Input\r\n                  type=\"date\"\r\n                  name=\"dateServiceOffered\"\r\n                  value={date.dateServiceOffered}\r\n                  //onChange={handleInputChangeDate}\r\n                  id=\"dateServiceOffered\"\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                   {errors.dateServiceOffered !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateServiceOffered}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            {/* <div className='card'> */}\r\n                \r\n                <div \r\n                  className=\"card-header\"\r\n                  style={{\r\n                  backgroundColor: \"teal\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",}} \r\n                  \r\n                >\r\n                    <h2 style={{color:'#fff'}}>HTS Services</h2>\r\n                </div>\r\n                    <br />\r\n                    <br />                \r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered HTS\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"offeredHts\"\r\n                  id=\"offeredHts\"\r\n                  onChange ={handleInputChangeHtsService}\r\n                  value={htsServices.offeredHts}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Accepted HTS\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"acceptedHts\"\r\n                  id=\"acceptedHts\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsServices.acceptedHts}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Hiv Test Result\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"hivTestResult\"\r\n                  id=\"hivTestResult\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsServices.hivTestResult}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Reffered for ART\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"referredForArt\"\r\n                  id=\"referredForArt\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsServices.referredForArt}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n            \r\n            {/* </div> */}\r\n            \r\n            <br />\r\n\r\n            {/* <div className='card'> */}\r\n\r\n            {/* <div className=\"row d-flex\"> */}\r\n            <LabelSui as='a' color='teal' style={{width:'100%', height:'45px'}} ribbon>\r\n                  <h2 style={{color:'#fff'}}>PreP Services</h2>\r\n            </LabelSui> \r\n            <br />\r\n            <br />\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredPrep\"\r\n                id=\"offeredPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.offeredPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"1\">Yes</option> \r\n                  <option value=\"0\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted PreP\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedPrep\"\r\n                id=\"acceptedPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.acceptedPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"1\">Yes</option> \r\n                  <option value=\"0\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"referredForPrep\"\r\n                id=\"referredForPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.referredForPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"1\">Yes</option> \r\n                  <option value=\"0\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            {/* </div> */}\r\n\r\n            {/* <div className='card'> */}\r\n                <LabelSui as='a' color='teal' style={{width:'100%', height:'45px'}} ribbon>\r\n                    <h2 style={{color:'#fff'}}>Commodity Service</h2>\r\n                </LabelSui> \r\n                    <br />\r\n                    <br />\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Condom Dispensed \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"condomDispensed\"\r\n                  id=\"condomDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.condomDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Lubricants Dispensed\r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"lubricantsDispensed\"\r\n                  id=\"lubricantsDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.lubricantsDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Oral Quick/ HIVST dispensed \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"oralQuickDispensed\"\r\n                  id=\"oralQuickDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.oralQuickDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    New Needles/Syringe Dispesend \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"newNeedleDispensed\"\r\n                  id=\"newNeedleDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.newNeedleDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Old Needles/Syringe Retrived  \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"oldNeedleRetrived\"\r\n                  id=\"oldNeedleRetrived\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.oldNeedleRetrived}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Nalxone Provided \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"nalxoneProvided\"\r\n                  id=\"nalxoneProvided\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.nalxoneProvided}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                {/* </div> */}\r\n                <div className=\"row d-flex\">\r\n             \r\n                <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n                  <h2 style={{color:'#fff'}}>HIV Educaton Provided</h2>\r\n                </LabelSui>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                IEC material/Pamphelt \r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"iecMaterial\"\r\n               id=\"iecMaterial\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.iecMaterial}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                 <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               InterPersonal Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"interPersonalCommunication\"\r\n               id=\"interPersonalCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.interPersonalCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Peer Group Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"peerGroupCommunication\"\r\n               id=\"peerGroupCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.peerGroupCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n           </div>\r\n           </div>\r\n           <br/>\r\n           {/* <div className='card'> */}\r\n           \r\n           \r\n\r\n           <div className=\" row d-flex\">\r\n           <div className=\"row d-flex\">\r\n        <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n          <h2 style={{color:'#fff'}}>Biomedical Services</h2>\r\n        </LabelSui>\r\n        <br />\r\n        <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    STI Screening\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={bioMedicalServices.stiScreening}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"1\">Yes</option>\r\n                    <option value=\"0\">No</option>\r\n                  </Input>\r\n                </FormGroup>    \r\n              </div>\r\n                {bioMedicalServices.stiScreening === \"1\" && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"stiScreeningResponse\"\r\n                      id=\"stiScreeningResponse\"\r\n                      value={bioMedicalServices.stiScreeningResponse}\r\n                      onChange={handleInputChangebioMedicalServices}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    STI Syndromic Management\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiSyndromicManagement\"\r\n                    id=\"stiSyndromicManagement\"\r\n                    value={bioMedicalServices.stiSyndromicManagement}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"1\">Yes</option>\r\n                    <option value=\"0\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>      \r\n                {bioMedicalServices.stiSyndromicManagement === \"1\" && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <Label>Facility Referred to</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"facilityReferredTo\"\r\n                      id=\"facilityReferredTo\"\r\n                      value={bioMedicalServices.facilityReferredTo}\r\n                      onChange={handleInputChangebioMedicalServices}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n             \r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Treatment/ Referral\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiTreatment\"\r\n                    id=\"stiTreatment\"\r\n                    value={bioMedicalServices.stiTreatment}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.stiTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to Sti Screening </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToStiScreening\"\r\n                    id=\"facilityRefferedToStiScreening\"\r\n                    value={facilityRefferedToo.facilityRefferedToStiScreening}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                      Screened for TB                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForTb\"\r\n                    id=\"screenedForTb\"\r\n                    value={bioMedicalServices.screenedForTb}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.screenedForTb === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToScreenedTo\"\r\n                    id=\"facilityRefferedToScreenedTo\"\r\n                    value={facilityRefferedToo.facilityRefferedToScreenedTo} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided with TPT      \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithTpt\"\r\n                    id=\"providedWithTpt\"\r\n                    value={bioMedicalServices.providedWithTpt}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened For Viral Heaptits \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForViralHepatits\"\r\n                    id=\"screenedForViralHepatits\"\r\n                    value={bioMedicalServices.screenedForViralHepatits}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.screenedForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToScreenedForViralHepatits\"\r\n                    id=\"facilityRefferedToScreenedFclientVerificationObjorViralHepatits\"\r\n                    value={facilityRefferedToo.facilityRefferedToScreenedForViralHepatits} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Viral Hepatits Screen Result \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"viralHepatitsScreenResult\"\r\n                    id=\"viralHepatitsScreenResult\"\r\n                    value={bioMedicalServices.viralHepatitsScreenResult}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Positive\"> Positive </option>\r\n                    <option value=\"Negative\"> Negative</option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.viralHepatitsScreenResult === \"Positive\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                    id=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                    value={facilityRefferedToo.facilityRefferedToViralHepatitsScreenResult} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Vaccination For Viral Hepatits\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"vaccinationForViralHepatits\"\r\n                    id=\"vaccinationForViralHepatits\"\r\n                    value={bioMedicalServices.vaccinationForViralHepatits}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.vaccinationForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                    id=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                    value={facilityRefferedToo.facilityRefferedToVaccinationForViralHepatits} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredFamilyPlanningServices\"\r\n                    id=\"offeredFamilyPlanningServices\"\r\n                    value={bioMedicalServices.offeredFamilyPlanningServices}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.offeredFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                    id=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                    value={facilityRefferedToo.facilityRefferedToOfferedFamilyPlanningServices} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Refferred For Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"referredForFamilyPlanningServices\"\r\n                    id=\"referredForFamilyPlanningServices\"\r\n                    value={bioMedicalServices.referredForFamilyPlanningServices}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.referredForFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                    id=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                    value={facilityRefferedToo.facilityRefferedToReferredForFamilyPlanningServices} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided With Drug Rehab\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithDrugRehab\"\r\n                    id=\"providedWithDrugRehab\"\r\n                    value={bioMedicalServices.providedWithDrugRehab}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.providedWithDrugRehab === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                    id=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                    value={facilityRefferedToo.facilityRefeRredToProvidedWithDrugRehab} \r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}      \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered MHPSS\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredMhpss\"\r\n                    id=\"offeredMhpss\"\r\n                    value={bioMedicalServices.offeredMhpss}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.offeredMhpss === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label>Facility Refferred to </Label> Type  of MHpss \r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToOfferedMhpss\"\r\n                    id=\"facilityRefferedToOfferedMhpss\"\r\n                    value={facilityRefferedToo.facilityRefferedToOfferedMhpss} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  On Medical Assisted Therapy (MAT) for atleast\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"onMedicalAssistedTherapy\"\r\n                    id=\"onMedicalAssistedTherapy\"\r\n                    value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.onMedicalAssistedTherapy === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                    id=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                    value={facilityRefferedToo.facilityRefferedToOnMedicalAssistedTherapy} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Recived Nalxone for Overdose Treatment \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"recivedNalxoneForOverdoseTreatment\"\r\n                    id=\"recivedNalxoneForOverdoseTreatment\"\r\n                    value={bioMedicalServices.recivedNalxoneForOverdoseTreatment}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n             </div>\r\n             </div>\r\n\r\n             <div className=\"row d-flex\">\r\n\r\n             <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n\r\n              <h2 style={{color:'#fff'}}> Structural Services  </h2>\r\n              </LabelSui>\r\n              <br />\r\n              <br />\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided or Reffered for Empowerment\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedOrRefferedForEmpowerment\"\r\n                    id=\"providedOrRefferedForEmpowerment\"\r\n                    value={structuralServices.recivedNalxoneForOverdoseTreatment}\r\n                    onChange={handleInputChangestructuralServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {structuralServices.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                    id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                    value={facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment}    \r\n                    onChange={handleInputChangestructuralServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                       Legal Aid Service Type\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"legalAidServiceType\"\r\n                    id=\"legalAidServiceType\"\r\n                    value={structuralServices.legalAidServiceType}\r\n                    onChange={handleInputChangestructuralServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.legalAidServiceType !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.legalAidServiceType}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {structuralServices.legalAidServiceType === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedLegalAidServiceType\"\r\n                    id=\"facilityRefferedLegalAidServiceType\"\r\n                    value={facilityRefferedToo.facilityRefferedLegalAidServiceType} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n\r\n                </div>\r\n             </div>\r\n             {/* </div> */}\r\n\r\n\r\n\r\n             </div>\r\n\r\n                            \r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport KpPrev from \"./main/webapp/jsx/components/KpPrev\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n          <Route path=\"/kp-prev\">\r\n            <KpPrev />\r\n          </Route>\r\n\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}