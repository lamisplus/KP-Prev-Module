{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/PatientVaccinatedLIst.js","main/webapp/jsx/components/KpPrev/index.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","calculate_age","dob","today","Date","birthDate","age_now","getFullYear","getMonth","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","get","concat","baseUrl","pageSize","page","search","headers","then","response","result","records","map","row","name","firstName","lastName","hospital_number","participantId","gender","age","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","size","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","split","m","getDate","count","Label","vaccinationStatus","useStyles","flexGrow","borderRadius","KpPrev","useTheme","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","errors","setErrors","temp","classes","_useState5","_useState6","saving","_useState7","_useState8","_useState9","dateOfObservation","facilityId","personId","type","visitId","_useState10","_useState11","offeredHts","acceptedHts","hivTestResult","refferedForArt","_useState12","htsService","_useState13","offeredPrep","acceptedPrep","refferedForPrep","_useState14","prepServices","_useState15","condomDispensed","lubricantsDispensed","oralQuickDispensed","newNeedleDispensed","oldNeedleRetrived","nalxoneProvided","_useState16","_useState17","iecMaterial","interPersonalCommunication","peerGroupCommunication","_useState18","_useState19","stiScreening","stiSyndromicManagement","stiTreatment","screenedForTb","providedWithTpt","screenedForViralHepatits","viralHepatitsScreenResult","vaccinationForViralHepatits","offeredFamilyPlanningServices","refferedForFamilyPlanningServices","providedWithDrugRehab","offeredMhpss","onMedicalAssistedTherapy","recivedNalxoneForOverdoseTreatment","_useState20","bioMedicalService","setBioMedicalService","handleInputChangeBioMedicalServices","e","_defineProperty","target","value","Card","className","CardBody","FormGroup","Input","id","border","onChange","Spinner","divStyle","Home","key","setKey","Fragment","startIcon","FaUserPlus","textTransform","Row","Col","xl","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","PatientVaccinatedLIst","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","console","log","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","TiArrowBack","dateParts","dateObject","moment","format","identifier","phoneNumber","contactPoint","find","obj","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","navItemText","SubMenu","patientObjs","Observation","observation","filter","x","catch","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","getAge","Vaccination","covidEffect","setCovidEffect","vaccine","setVaccine","adverseEffect","batchNumber","doseNumber","location","patientId","vaccinationFacility","vaccineDate","objValues","setObjValues","setSaving","VACCINE","COVID_ADVERSE_EFFECT","handleInputChange","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","_Fragment","InputGroup","max","MatButton","SaveIcon","preventDefault","Object","values","every","post","toast","loadPatients","disabled","CancelIcon","PatientVaccinationHistory","vacinationList","setVaccinationtList","modal","setModal","_React$useState","React","_React$useState2","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","setRecord","patients","_patients","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","vaccineName","position","Dropdown","item","LoadEditModal","IconMenu","LoadDeleteModal","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","VaccinationHistory","PatientnHistory","recentActivities","setRecentActivities","loading","setLoading","useHistory","PatientHistory","activities","LoadViewPage","action","path","actionType","isLoading","date","viewable","Icon","LoadDeletePage","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","setDevices","pageLoading","setPageLoading","_React$useState3","_React$useState4","showCapture","setshowCapture","_React$useState5","_React$useState6","setTryAgain","_React$useState7","_React$useState8","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","_ref","_callee3","fingersCodeset","_context3","sent","_ref2","personCapturedFingers","biometricItems","_biometricItems","length","_","uniq","extend","captured","includes","_x","_ref3","_callee2","_context2","_x2","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","finger","_toConsumableArray","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","for","deviceName","selectedDevice","errorType","errorName","required","_ref4","validate","window","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","datatype","responses","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","chronicMedicationModal","setChronicMedicationModal","_useState21","_useState22","supportiveCareModal","setSupportiveCareModal","_useState23","_useState24","vaccinationHistory","setVaccinationHistory","_useState25","_useState26","inclusionHistory","setInclusionHistory","_useState27","_useState28","demograhicHistory","setDemographicHistory","_useState29","_useState30","vitalHistory","setVitalHistory","_useState31","_useState32","comobitieHistory","setComobitieHistory","_useState33","_useState34","reinfectionHistory","setReinfectionHistory","_useState35","_useState36","signsSymptomsHistory","setSignsSymptomsHistory","_useState37","_useState38","chronicMedicationHistory","setChronicMedicationHistory","_useState39","_useState40","medicationHistory","setMedicationHistory","_useState41","_useState42","supportiveCarenHistory","setSupportiveCareHistory","CardContent","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","Demographic","VitalSign","Comorbitie","SignsSymptoms","art","setArt","activeTab","prepId","PatientCardDetail","AddmissionHome","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","_useState43","active","contact","dateOfBirth","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","middleName","relatives","setRelatives","contacts","setContacts","disabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","patientDTO","userDetail","user","useLocation","showContactCard","setShowContactCard","knownMedicalCondition","medicalCondition","occupation","vaccineId","visitDate","_useState44","_useState45","hospitalNumStatus","setHospitalNumStatus","_useState46","_useState47","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","GetCountry","setStateByCountryId","useCallback","t0","_callee4","_context4","_callee5","_context5","sort","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","_ref6","_callee6","hosiptalNumber","_context6","hospitalNumber","uniqueId","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","_ref7","_callee7","newConatctsInfo","patientForm","_context7","contactInfo","fullName","surname","push","landmark","person","vaccinationEnrollment","POSITION","BOTTOM_CENTER","subErrors","replace","slice","handleInputChangePhoneNumber","inputName","NumberValue","checkNumberLimit","onClickContactCard","onClickRelativeCard","autoClose","hideProgressBar","margingRight","min","defaultChecked","ageNumber","currentDate","setDate","setMonth","dobNew","toISOString","Math","abs","maritalStatusOption","occupationOption","educationOption","FaPlus","FaAngleDown","getCountryId","relative","splice","handleEditRelative","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","checked","htmlFor","adverseEffectOption","substr","setDisabledAgeBaseOnAge","settopLevelUnitCountryOptions","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","_useState48","setSourceReferral","_useState49","_useState50","hivStatus","setHivStatus","_useState51","_useState52","setEnrollSetting","_useState53","_useState54","setTbStatus","_useState55","_useState56","setKP","_useState57","_useState58","_useState59","_useState60","setPregnancyStatus","_useState61","_useState62","_useState63","_useState64","setOvcEnrolled","_useState65","_useState66","getSex","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","identifiers","altphone","country","maritalStatus","employmentStatus","education","getStateId","patientAge","sex","alert","getSexId","dateOfRegistration1","checkPhoneNumberBasic","_ref8","_callee8","_context8","TOP_RIGHT","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","AddIcon","code","maxWidth","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","enrollment","getCharacters","_ref9","_callee9","_context9","hivEnrollment","put","handleCheckBox","floor","random","App","Router","Switch","Route","PatientDetail","RegisterPatientPage","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.5639751f.chunk.js","sourcesContent":["// export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\n// export const url = '/api/v1/'\r\n\r\nexport const url =  'http://localhost:8383/api/v1/';\r\nexport const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzA5MjExNTE3fQ.cxLi3KOzrFlpKcgm8Vp451gOHEqYgHM8kPsy6fI8flYvAcEYIvkJ_KusVUTBwQZlAIDPobgNvHWSG4oFrIQ2Fw';","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        //const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        // if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        //     age_now--;\r\n        // }\r\n\r\n        // if (age_now === 0) {\r\n        //     return m + \" month(s)\";\r\n        // }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    //count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Enroll Patient </span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Card,CardBody, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Table  } from \"react-bootstrap\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport Select from '@mui/material/Select';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } ,\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n}))\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\n  function getStyles(name, selectedOptions, theme) {\r\n    return {\r\n      fontWeight:\r\n        selectedOptions.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst KpPrev = (props) =>{\r\n    const theme = useTheme();\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    const patientObj = props.patientObj;\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    const classes = useStyles()\r\n   \r\n    const [saving, setSaving] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    // const [optionsForCallOutCome, setOptionsForCallOutCome] = useState([]);\r\n    const [observation, setObservation]=useState({\r\n            data: {},\r\n            dateOfObservation: \"\",\r\n            facilityId: null,\r\n            personId: 0,\r\n            type: \"Client Verificatio n\",\r\n            visitId: null\r\n    })\r\n    const [htsService, setHtsService] = useState({  \r\n            offeredHts:\"\",\r\n            acceptedHts:\"\",\r\n            hivTestResult:\"\",\r\n            refferedForArt:\"\",\r\n            \r\n    \r\n    });\r\n    const [prepServices,setPrepServices]= useState({\r\n            offeredPrep:\"\",\r\n            acceptedPrep:\"\",\r\n            refferedForPrep:\"\"\r\n\r\n\r\n\r\n    })\r\n    const [commodityService, setCommodityService] =useState({\r\n          condomDispensed:\"\",\r\n          lubricantsDispensed:\"\",\r\n          oralQuickDispensed:\"\",\r\n          newNeedleDispensed:\"\",\r\n          oldNeedleRetrived:\"\",\r\n          nalxoneProvided:\"\"\r\n\r\n    })\r\n    const [hivEducationProvided, setHivEducationProvided] =useState({\r\n            iecMaterial:\"\",\r\n            interPersonalCommunication:\"\",\r\n            peerGroupCommunication:\"\"\r\n    })\r\n    const [bioMedicalService, setBioMedicalService] = useState({\r\n        stiScreening:\"\",\r\n        stiSyndromicManagement:\"\",\r\n        stiTreatment:\"\",\r\n        screenedForTb:\"\",\r\n        providedWithTpt:\"\",\r\n        screenedForViralHepatits:\"\",\r\n        viralHepatitsScreenResult:\"\",\r\n        vaccinationForViralHepatits:\"\",\r\n        offeredFamilyPlanningServices:\"\",\r\n        refferedForFamilyPlanningServices:\"\",\r\n        providedWithDrugRehab:\"\",\r\n        offeredMhpss:\"\",\r\n        onMedicalAssistedTherapy:\"\",\r\n        recivedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n    });\r\n\r\n    \r\n    // useEffect(() => {\r\n    //         if(props.activeContent.actionType==='update' || props.activeContent.actionType==='view'){\r\n    //             GetFormDetail(props.activeContent.id)\r\n    //         }\r\n    // }, [props.activeContent.actionType]);\r\n    // const GetFormDetail =(id)=>{\r\n    //     axios\r\n    //         .get(`${baseUrl}observation/${id}`,\r\n    //             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n    //         )\r\n    //         .then((response) => {\r\n    //             const Obj= response.data\r\n    //             setObservation({...Obj})\r\n    //             //setClientVerificationObj({...Obj.data})\r\n    //             setAttemptList([...Obj.data.attempt]);\r\n    //             setSelected([...Obj.data.anyOfTheFollowing])\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             //console.log(error);\r\n    //         });\r\n    // }\r\n\r\n\r\n  \r\n\r\n    // const handleInputChangeAttempt = e => {\r\n    //     console.log('checking for date',e.target.value)\r\n    //     setErrors({...temp, [e.target.name]:\"\"})\r\n    //     setAttempt ({...attempt,  [e.target.name]: e.target.value});\r\n    // }\r\n\r\n    // const handleChange = (event) => {\r\n    //     const {\r\n    //       target: { value },\r\n    //     } = event;\r\n    //     setSelectedOptions(\r\n    //       typeof value === 'string' ? value.split(',') : value,\r\n    //     );\r\n    //   };\r\n\r\n    const handleInputChangeHtsService= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHtsService({...htsService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangePrepServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setPrepServices({...prepServices,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeCommodityServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setCommodityService({...commodityService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeHivEducationProvided = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHivEducationProvided({...hivEducationProvided,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    const handleInputChangeBioMedicalServices = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setBioMedicalService ({...bioMedicalService,  [e.target.name]: e.target.value});\r\n       \r\n    }\r\n\r\n    //Validations of the forms\r\n    // const validateAttempt = () => { \r\n    //     //attempt.verificationAttempts=selected\r\n    //     temp.indicationForClientVerification = selected.length > 0 ? \"\" : \"This field is required\";\r\n    //     temp.dateOfAttempt =attempt.dateOfAttempt?\"\": \"This field is required\"\r\n    //     temp.verificationStatus = attempt.verificationStatus ? \"\" : \"This field is required\"\r\n    //     temp.outcome = attempt.outcome ? \"\" : \"This field is required\"\r\n    //     temp.verificationAttempts = attempt.verificationAttempts ? \"\" : \"This field is required\"\r\n    //     setErrors({\r\n    //         ...temp\r\n    //     })\r\n    //     return Object.values(temp).every(x => x === \"\")\r\n    // }\r\n    // const clientVerificationFormObj = () => {\r\n    //     clientVerificationObj.anyOfTheFollowing=selected\r\n    //     temp.serialEnrollmentNo =clientVerificationObj.serialEnrollmentNo?\"\": \"This field is required\"\r\n    //     temp.discontinuation = clientVerificationObj.discontinuation ? \"\" : \"This field is required\"\r\n    //     temp.anyOfTheFollowing = clientVerificationObj.anyOfTheFollowing ? \"\" : \"This field is required\"\r\n    //     setErrors({\r\n    //         ...temp\r\n    //     })\r\n    //     return Object.values(temp).every(x => x === \"\")\r\n    // }\r\n   \r\n    /* Remove  function **/\r\n    \r\n    \r\n    /**** Submit Button Processing  */\r\n    // const handleSubmit = (e) => {        \r\n    //     e.preventDefault();\r\n    //     clientVerificationObj.attempt=attemptList // Assgining all the attempted list to the ClientVerifiction Object \r\n    //     observation.data=clientVerificationObj\r\n    //     if(clientVerificationFormObj()) {\r\n    //         if (attemptList.length > 0) {\r\n    //             observation.dateOfObservation = observation.dateOfObservation !== \"\" ? observation.dateOfObservation : moment(new Date()).format(\"YYYY-MM-DD\")\r\n    //             observation.personId = patientObj.id\r\n    //             // observation.data=attemptList        \r\n    //             setSaving(true);\r\n    //             if(props.activeContent && props.activeContent.actionType==='update'){//If the the action type is update\r\n    //                 axios.put(`${baseUrl}observation/${props.activeContent.id}`, observation,\r\n    //                     {headers: {\"Authorization\": `Bearer ${token}`}},\r\n    //                 )\r\n    //                     .then(response => {\r\n    //                         setSaving(false);\r\n    //                         toast.success(\"Client Verfication form Save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         props.setActiveContent({...props.activeContent, route: 'recent-history'})\r\n\r\n    //                     })\r\n    //                     .catch(error => {\r\n    //                         setSaving(false);\r\n    //                         if (error.response && error.response.data) {\r\n    //                             let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n    //                             if (error.response.data.apierror && error.response.data.apierror.message !== \"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message !== \"\") {\r\n    //                                 toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             } else {\r\n    //                                 toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             }\r\n    //                         } else {\r\n    //                             toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         }\r\n    //                     });\r\n    //             }else{//this is to call the POST API\r\n    //                 axios.post(`${baseUrl}observation`, observation,\r\n    //                     {headers: {\"Authorization\": `Bearer ${token}`}},\r\n    //                 )\r\n    //                     .then(response => {\r\n    //                         setSaving(false);\r\n    //                         toast.success(\"Client Verfication form Save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         props.setActiveContent({...props.activeContent, route: 'recent-history'})\r\n\r\n    //                     })\r\n    //                     .catch(error => {\r\n    //                         setSaving(false);\r\n    //                         if (error.response && error.response.data) {\r\n    //                             let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n    //                             if (error.response.data.apierror && error.response.data.apierror.message !== \"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message !== \"\") {\r\n    //                                 toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             } else {\r\n    //                                 toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             }\r\n    //                         } else {\r\n    //                             toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         }\r\n    //                     });\r\n    //             }\r\n\r\n    //         } else {\r\n    //             toast.error(\"Attempt to Contact can not be empty\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //         }\r\n    //     }else{\r\n    //         toast.error(\"All fields are required\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //     }\r\n       \r\n    // }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row d-flex\">\r\n              <h2>KEY POPULATION PREVENTION FORM </h2>\r\n              <br />\r\n              <br />\r\n            </div>\r\n\r\n            <div className=\"row d-flex\">\r\n              <h2>Service Provider </h2>\r\n              <br />\r\n              <br />\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Date Of Service Provisions \r\n                </Label>\r\n                <Input\r\n                type=\"date\"\r\n                name=\"dateOfServiceProvisions\"\r\n                value=\"\"\r\n                id=\"dateOfServiceProvisions\"\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <h2>HTS Services</h2>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered HTS\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredHts\"\r\n                id=\"offeredHts\"\r\n                onChange =\"handleHtsService\"\r\n                value={htsService.offeredHts}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted HTS\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedHts\"\r\n                id=\"acceptedHts\"\r\n                onChange=\"handleInputChangeHtsService\"\r\n                value={htsService.acceptedHts}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Hiv Test Result\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"hivTestResult\"\r\n                id=\"hivTestResult\"\r\n                onChange=\"handleInputChangeHtsService\"\r\n                value={htsService.hivTestResult}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for ART\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"refferedForArt\"\r\n                id=\"refferedForArt\"\r\n                onChange=\"handleInputChangeHtsService\"\r\n                value={htsService.refferedForArt}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row d-flex\">\r\n             \r\n              <h2>PreP Services</h2>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredPrep\"\r\n                id=\"offeredPrep\"\r\n                onChange=\"handleInputChangePrepServices\"\r\n                value={prepServices.offeredPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted PreP\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedPrep\"\r\n                id=\"acceptedPrep\"\r\n                onChange=\"handleInputChangePrepServices\"\r\n                value={prepServices.acceptedPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              \r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Hiv Test Result\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"htsService\"\r\n                id=\"htsService\"\r\n                onChange=\"handleInputChangePrepServices\"\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"refferedForPrep\"\r\n                id=\"refferedForPrep\"\r\n                onChange=\"handleInputChangePrepServices\"\r\n                value=\"\"\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n             \r\n             <h2>Commodity Service</h2>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                Condom Dispensed \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"condomDispensed\"\r\n               id=\"condomDispensed\"\r\n               onChange=\"handleInputChangeCommodityServices\"\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               Lubricants Dispensed\r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"lubricantsDispensed\"\r\n               id=\"lubricantsDispensed\"\r\n               onChange=\"handleInputChangeCommodityServices\"\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Oral Quick/ HIVST dispensed \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"oralQuickDispensed\"\r\n               id=\"oralQuickDispensed\"\r\n               onChange=\"handleCommodityServices\"\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 New Needles/Syringe Dispesend \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"newNeedleDispensed\"\r\n               id=\"newNeedleDispensed\"\r\n               onChange=\"handleInputChangeCommodityServices\"\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Old Needles/Syringe Retrived  \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"oldNeedleRetrived\"\r\n               id=\"oldNeedleRetrived\"\r\n               onChange=\"handleInputChangeCommodityServices\"\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Nalxone Provided \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"nalxoneProvided\"\r\n               id=\"nalxoneProvided\"\r\n               onChange=\"handleInputChangeCommodityServices\"\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n           </div>\r\n           <div className=\"row d-flex\">\r\n             \r\n             <h2>HIV Education Provided </h2>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                IEC material/Pamphelt \r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"iecMaterial\"\r\n               id=\"iecMaterial\"\r\n               onChange=\"handleHivEducationProvided\"\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                 <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               InterPersonal Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"interPersonalCommunication\"\r\n               id=\"interPersonalCommunication\"\r\n               onChange=\"handleInputChangeHivEducationProvided\"\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Peer Group Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"peerGroupCommunication\"\r\n               id=\"peerGroupCommunication\"\r\n               onChange=\"handleInputChangeHivEducationProvided\"\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n           </div>\r\n           <div className=\"row d-flex\">\r\n             \r\n             <h2>Biomedical Services </h2>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI screening\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={bioMedicalService.stiScreening}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiScreening === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  \r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreeningResponse\"\r\n                    id=\"stiScreeningResponse\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Syndromic Management\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiSyndromicManagement\"\r\n                    id=\"stiSyndromicManagement\"\r\n                    value={bioMedicalService.stiSyndromicManagement}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiSyndromicManagement === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Treatment/ Referral\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiTreatment\"\r\n                    id=\"stiTreatment\"\r\n                    value={bioMedicalService.stiTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened for TB\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForTb\"\r\n                    id=\"screenedForTb\"\r\n                    value={bioMedicalService.screenedForTb}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.screenedForTb === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided with TPT\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithTpt\"\r\n                    id=\"providedWithTpt\"\r\n                    value={bioMedicalService.providedWithTpt}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened For Viral Heaptits \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForViralHepatits\"\r\n                    id=\"screenedForViralHepatits\"\r\n                    value={bioMedicalService.screenedForViralHepatits}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.screenedForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Viral Hepatits Screen Result \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"viralHepatitsScreenResult\"\r\n                    id=\"viralHepatitsScreenResult\"\r\n                    value={bioMedicalService.viralHepatitsScreenResult}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Positive\"> Positive </option>\r\n                    <option value=\"Negative\"> Negative</option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.viralHepatitsScreenResult === \"Positive\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Vaccination For Viral Hepatits\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"vaccinationForViralHepatits\"\r\n                    id=\"vaccinationForViralHepatits\"\r\n                    value={bioMedicalService.vaccinationForViralHepatits}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.vaccinationForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredFamilyPlanningServices\"\r\n                    id=\"offeredFamilyPlanningServices\"\r\n                    value={bioMedicalService.offeredFamilyPlanningServices}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.offeredFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Refferred For Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"refferedForFamilyPlanningServices\"\r\n                    id=\"refferedForFamilyPlanningServices\"\r\n                    value={bioMedicalService.refferedForFamilyPlanningServices}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.refferedForFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided With Drug Rehab\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithDrugRehab\"\r\n                    id=\"providedWithDrugRehab\"\r\n                    value={bioMedicalService.providedWithDrugRehab}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.providedWithDrugRehab === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered MHPSS\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredMhpss\"\r\n                    id=\"offeredMhpss\"\r\n                    value={bioMedicalService.offeredMhpss}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.offeredMhpss === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label>Facility Refferred to </Label> Type  of MHpss \r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                  \r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  On Medical Assisted Therapy (MAT) for atleast\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"onMedicalAssistedTherapy\"\r\n                    id=\"onMedicalAssistedTherapy\"\r\n                    value={bioMedicalService.onMedicalAssistedTherapy}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.onMedicalAssistedTherapy === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Recived Nalxone for Overdose Treatment \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"recivedNalxoneForOverdoseTreatment\"\r\n                    id=\"recivedNalxoneForOverdoseTreatment\"\r\n                    value={bioMedicalService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n             </div>\r\n\r\n             <div className=\"row d-flex\">\r\n             \r\n                <h2>Structural Services </h2>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided or Reffered for Empowerment\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedOrRefferedForEmpowerment\"\r\n                    id=\"providedOrRefferedForEmpowerment\"\r\n                    //value={structuralService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {/* {structuralService.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )} */}\r\n\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                 Legal Aid Service Type\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"legalAidServiceType\"\r\n                    id=\"legalAidServiceType\"\r\n                    //value={structuralService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {/* {structuralService.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )} */}\r\n\r\n                </div>\r\n             </div>\r\n\r\n\r\n\r\n             </div>\r\n            {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n\r\n            {/* <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n              disabled={attemptList.length <= 0 && !saving ? true : false}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {\" \"}\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update\"\r\n                    : \"Save\"}\r\n                </span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update...\"\r\n                    : \"Save...\"}\r\n                </span>\r\n              )}\r\n            </MatButton> */}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default KpPrev;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList'\r\nimport PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport KpPrev from \"./KpPrev/index\";\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>KP-PREV</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n                  <Tab eventKey=\"vaccinated\" title=\"Vaccinated Patients\">                   \r\n                    <PatientVaccinatedLIst />\r\n                  </Tab>\r\n                  <Tab eventKey=\"vaccinated\" title=\"Kp-Prev\">                   \r\n                    <KpPrev />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n    const getPhoneNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(\r\n        (obj) => obj.type === \"phone\"\r\n      );\r\n      return phoneNumber ? phoneNumber.value : \"\";\r\n    };\r\n    const getAddress = (identifier) => {\r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find((obj) => obj.city);\r\n      const houseAddress =\r\n        address && address.line[0] !== null ? address.line[0] : \"\";\r\n      const landMark =\r\n        address && address.city && address.city !== null ? address.city : \"\";\r\n      return address ? houseAddress + \" \" + landMark : \"\";\r\n    };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                        {getPhoneNumber(patientObj.contactPoint)}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)}{\" \"}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    // const loadVaccination = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    // }\r\n    // const loadIcu = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'icu'})\r\n    // }\r\n    // const loadAddmission = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    // }\r\n    // const onClickDischarge = (row) =>{        \r\n    //     props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    // }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadKpPrev = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:\"kp-prev\"})\r\n    }\r\n    // const loadPatientHistory = ()=>{\r\n    //     //setActiveItem('history')\r\n    //     props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    // }\r\n\r\n\r\n    return ( \r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>      \r\n                <Menu.Item onClick={() => loadKpPrev()} > Kp-Prev</Menu.Item>               \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n    console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>       \r\n            <br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Vaccination History \"\r\n              columns={[\r\n                { title: \"Vaccine\", field: \"vaccine\", filtering: false },\r\n                {\r\n                  title: \"Vaccine Date\",\r\n                  field: \"vaccineDate\",\r\n                },\r\n                \r\n                { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                { title: \"Location\", field: \"location\", filtering: false },      \r\n                { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ vacinationList.map((row) => ({\r\n                    vaccine: row.vaccineName,\r\n                    vaccineDate: row.vaccineDate,\r\n                    batchNumber: row.batchNumber,\r\n                    doseNumber: row.doseNumber,\r\n                    location: row.location,\r\n                    vaccinationFacility: row.vaccinationFacility,\r\n                    adverseEffect: row.adverseEffect,\r\n                    actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>\r\n                  \r\n                  }))}\r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { Fragment} from \"react\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >KP-PREV /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        COVID_ADVERSE_EFFECT()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    //COVID_ADVERSE_EFFECT\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n        }\r\n                \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value === \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value === \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >COVID-19 /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration===\"\" ? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        \r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"5\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <p><b style={{color:\"red\"}}>{basicInfo.age!==\"\" && basicInfo.age< 5 ? \"The minimum age is 5\" : \" \"} </b></p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                    {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showContactCard && (\r\n                                  <div className=\"card-body\">\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'phoneNumber')}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                                  {errors.phoneNumber !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                      ) : \"\" }\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Alt. Phone Number</Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"altPhonenumber\"\r\n                                                    id=\"altPhonenumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'altPhonenumber')}}\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                 />\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Email</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"email\"\r\n                                                      name=\"email\"\r\n                                                      id=\"email\"\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      value={basicInfo.email}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      required\r\n                                                  />\r\n                                                \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Street Address <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"address\"\r\n                                                      id=\"address\"\r\n                                                      value={basicInfo.address}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                  />\r\n                                                {errors.address !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.address}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Landmark</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"landmark\"\r\n                                                      id=\"landmark\"\r\n                                                      value={basicInfo.landmark}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      \r\n                                                  />\r\n                                                  \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                    {showRelative===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showRelative && (\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                                                        <Input\r\n                                                                            type=\"text\"\r\n                                                                            name=\"phone\"\r\n                                                                            id=\"phone\"\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                            value={relatives.phone}\r\n                                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {errors.phone !==\"\" ? (\r\n                                                                            <span className={classes.error}>{errors.phone}</span>\r\n                                                                            ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                                    {/* </div> */}\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Adding First DOSAGE FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>COVID-19 First Dosage</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-4\">                                    \r\n                            <div className=\"form-check custom-checkbox ml-1 \">\r\n                                <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name=\"workInHealthSector\"\r\n                                id=\"workInHealthSector\"                                        \r\n                                onChange={handleCheckBoxworkInHealthSector}\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"workInHealthSector\"\r\n                                >\r\n                                Do you work in the Health sector ?\r\n                                </label>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                        \r\n                            <div className=\"form-check custom-checkbox ml-1 \">\r\n                                <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name=\"knownMedicalCondition\"\r\n                                id=\"knownMedicalCondition\"                                        \r\n                                onChange={handleCheckBoxknownMedicalCondition}\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"knownMedicalCondition\"\r\n                                >\r\n                                Any known medical condition ?\r\n                                </label>\r\n                            </div>\r\n                            </div>\r\n                            {objValues.knownMedicalCondition===true &&(                                    \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label for=\"knownMedicalCondition\">Medical conditions </Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"medicalCondition\"\r\n                                            value={basicInfo.medicalCondition}\r\n                                            id=\"medicalCondition\"\r\n                                            onChange={handleInputChangeBasic}\r\n                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                \r\n                            </div>\r\n                            )}\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                          <FormGroup>\r\n                                          <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"vaccine\"\r\n                                              id=\"vaccine\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccine} \r\n                                          >\r\n                                              <option value=\"\" >Select</option>\r\n                                              {vaccine.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.name}\r\n                                                </option>\r\n                                            ))}\r\n                                          </Input>\r\n\r\n                                         \r\n                                          {errors.vaccine !==\"\" ? (\r\n                                                  <span className={classes.error}>{errors.vaccine}</span>\r\n                                          ) : \"\" }           \r\n                                          </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Date of First Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                                                             \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"location\"\r\n                                              id=\"location\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.location} \r\n                                          >\r\n                                              <option value=\"\" >Select</option>\r\n                                              <option value=\"Facility\" >Facility</option>\r\n                                              <option value=\"Community\" >Community</option>\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.location !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.location}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Facility Name </Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"text\"\r\n                                              name=\"vaccinationFacility\"\r\n                                              id=\"vaccinationFacility\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccinationFacility} \r\n                                          >\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.vaccinationFacility !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              )}\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.batchNumber !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.batchNumber}</span>\r\n                                      ) : \"\" }                                         \r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Yes\" >Yes</option>\r\n                                        <option value=\"No\" >No</option>\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.adverseEffect==='Yes' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Reaction Type (Adverse Effect)</Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffectOption\"\r\n                                        id=\"adverseEffectOption\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffectOption} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}      \r\n                            </div>\r\n                           \r\n                            </div>\r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport KpPrev from \"./main/webapp/jsx/components/KpPrev\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n          <Route path=\"/kp-prev\">\r\n            <KpPrev />\r\n          </Route>\r\n\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}