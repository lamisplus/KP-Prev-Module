{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/KpPrev/KpPrevEnrolled.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/KpPrev/index.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","calculate_age","dob","today","Date","birthDate","split","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","concat","baseUrl","pageSize","page","headers","then","response","result","records","map","row","name","firstName","lastName","hospital_number","gender","age","dateOfBirth","undefined","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","size","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","KpPrevEnrolled","participantId","count","Label","vaccinationStatus","divStyle","borderRadius","Home","_useState","useState","_useState2","_slicedToArray","key","setKey","Fragment","className","startIcon","FaUserPlus","textTransform","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","classes","console","log","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","TiArrowBack","dateParts","dateObject","moment","format","phoneNumber","contactPoint","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","useStyles","navItemText","SubMenu","patientObjs","_useState3","_useState4","Observation","observation","filter","x","catch","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","getAge","Vaccination","errors","setErrors","temp","covidEffect","setCovidEffect","_useState5","_useState6","vaccine","setVaccine","_useState7","adverseEffect","batchNumber","doseNumber","patientId","vaccinationFacility","vaccineDate","_useState8","objValues","setObjValues","_useState9","_useState10","saving","setSaving","VACCINE","COVID_ADVERSE_EFFECT","handleInputChange","e","_defineProperty","target","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","CardBody","_Fragment","FormGroup","Input","onChange","InputGroup","max","MatButton","SaveIcon","preventDefault","Object","values","every","post","toast","loadPatients","disabled","CancelIcon","PatientVaccinationHistory","setVaccinationtList","modal","setModal","_React$useState","React","_React$useState2","_React$useState3","_React$useState4","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","patients","_patients","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","render","rowData","position","Dropdown","item","Icon","dateOfServicesProvided","action","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","setRecentActivities","setLoadingRecent","RecentActivities","Authorization","VaccinationHistory","PatientnHistory","recentActivities","loading","setLoading","useHistory","PatientHistory","personId","activities","LoadViewPage","path","actionType","isLoading","date","viewable","LoadDeletePage","fontFamily","border","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","_React$useState5","_React$useState6","setTryAgain","_React$useState7","_React$useState8","setSuccess","_useState11","_useState12","_useState13","_useState14","storedBiometrics","setStoredBiometrics","_useState15","_useState16","capturedFingered","setCapturedFingered","_useState17","_useState18","setSelectedFingers","getPersonBiometrics","bgcolor","green","_ref","_callee3","fingersCodeset","_context3","sent","_ref2","personCapturedFingers","biometricItems","_biometricItems","length","_","uniq","extend","captured","includes","_x","_ref3","_callee2","_context2","_x2","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","finger","_toConsumableArray","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","for","deviceName","selectedDevice","errorType","errorName","required","_ref4","validate","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","datatype","responses","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","_useState19","_useState20","chronicMedicationModal","setChronicMedicationModal","_useState21","_useState22","supportiveCareModal","setSupportiveCareModal","_useState23","_useState24","vaccinationHistory","setVaccinationHistory","_useState25","_useState26","inclusionHistory","setInclusionHistory","_useState27","_useState28","demograhicHistory","setDemographicHistory","_useState29","_useState30","vitalHistory","setVitalHistory","_useState31","_useState32","comobitieHistory","setComobitieHistory","_useState33","_useState34","reinfectionHistory","setReinfectionHistory","_useState35","_useState36","signsSymptomsHistory","setSignsSymptomsHistory","_useState37","_useState38","chronicMedicationHistory","setChronicMedicationHistory","_useState39","_useState40","medicationHistory","setMedicationHistory","_useState41","_useState42","supportiveCarenHistory","setSupportiveCareHistory","CardContent","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","Demographic","VitalSign","Comorbitie","SignsSymptoms","flexGrow","KpPrev","useTheme","htsService","prepServices","dateServiceOffered","setDate","offeredHts","acceptedHts","hivTestResult","referredForArt","htsServices","setHtsServices","offeredPrep","acceptedPrep","referredForPrep","setPrepServices","condomDispensed","lubricantsDispensed","oralQuickDispensed","newNeedleDispensed","oldNeedleRetrived","nalxoneProvided","commodityService","setCommodityService","iecMaterial","interPersonalCommunication","peerGroupCommunication","hivEducationProvided","setHivEducationProvided","stiScreening","stiSyndromicManagement","stiTreatment","screenedForTb","providedWithTpt","screenedForViralHepatits","viralHepatitsScreenResult","vaccinationForViralHepatits","offeredFamilyPlanningServices","referredForFamilyPlanningServices","providedWithDrugRehab","offeredMhpss","onMedicalAssistedTherapy","recivedNalxoneForOverdoseTreatment","bioMedicalServices","setbioMedicalServices","providedOrRefferedForEmpowerment","legalAidServiceType","structuralServices","setstructuralServices","facilityRefferedToStiScreening","facilityRefferedToScreenedTo","facilityRefferedToScreenedForViralHepatits","facilityRefferedToViralHepatitsScreenResult","facilityRefferedToVaccinationForViralHepatits","facilityRefferedToOfferedFamilyPlanningServices","facilityRefferedToReferredForFamilyPlanningServices","facilityRefeRredToProvidedWithDrugRehab","facilityRefferedToOfferedMhpss","facilityRefferedToOnMedicalAssistedTherapy","facilityRefferedToRecievedNalxoneForOverdoseTreatment","facilityRefferedToo","setFacilityRefferedToo","handleInputChangeReferred","handleInputChangeHtsService","handleInputChangePrepServices","handleInputChangeCommodityServices","handleInputChangeHivEducationProvided","handleInputChangebioMedicalServices","handleInputChangestructuralServices","LabelSui","stiScreeningResponse","facilityReferredTo","facilityRefferedLegalAidServiceType","Spinner","art","setArt","activeTab","prepId","PatientCardDetail","AddmissionHome","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","_useState43","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","middleName","relatives","setRelatives","contacts","setContacts","disabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","patientDTO","userDetail","user","useLocation","showContactCard","setShowContactCard","knownMedicalCondition","medicalCondition","occupation","vaccineId","visitDate","_useState44","_useState45","hospitalNumStatus","setHospitalNumStatus","_useState46","_useState47","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","GetCountry","setStateByCountryId","useCallback","t0","_callee4","_context4","_callee5","_context5","sort","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","_ref6","_callee6","hosiptalNumber","_context6","uniqueId","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","_ref7","_callee7","newConatctsInfo","patientForm","_context7","contactInfo","fullName","surname","push","landmark","person","vaccinationEnrollment","POSITION","BOTTOM_CENTER","subErrors","_useState48","_useState49","_useState50","_useState51","_useState52","refferedForPrep","_useState53","_useState54","_useState55","_useState56","_useState57","_useState58","_useState59","_useState60","_useState61","_useState62","_useState63","replace","slice","handleInputChangePhoneNumber","inputName","NumberValue","checkNumberLimit","onClickContactCard","onClickRelativeCard","autoClose","hideProgressBar","margingRight","min","defaultChecked","ageNumber","currentDate","setMonth","dobNew","toISOString","Math","abs","maritalStatusOption","occupationOption","educationOption","FaPlus","FaAngleDown","getCountryId","relative","splice","handleEditRelative","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","substr","setDisabledAgeBaseOnAge","settopLevelUnitCountryOptions","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","setSourceReferral","hivStatus","setHivStatus","setEnrollSetting","setTbStatus","setKP","setPregnancyStatus","_useState64","setOvcEnrolled","_useState65","_useState66","getSex","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","identifiers","altphone","country","maritalStatus","employmentStatus","education","getStateId","patientAge","sex","alert","getSexId","dateOfRegistration1","checkPhoneNumberBasic","_ref8","_callee8","_context8","TOP_RIGHT","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","AddIcon","code","maxWidth","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","enrollment","getCharacters","_ref9","_callee9","_context9","hivEnrollment","put","handleCheckBox","checked","floor","random","htmlFor","App","Router","Switch","Route","PatientDetail","RegisterPatientPage","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.1d7a17c4.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n\r\n// export const url =  'http://localhost:8383/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzA5NjUxOTIxfQ.IA3jiJEojTYlkaqWBKEqhBf__esfNV5IJcRREvA2GFS8-xCVR4279ZIvtNAeXQLC5fyCmFilr290VqKGcQ-upA';","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    // const calculate_age = (dob) => {\r\n    //     const today = new Date();\r\n    //     //const dateParts = dob.split(\"-\");\r\n    //     const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    //     let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    //     const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    //     // if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n    //     //     age_now--;\r\n    //     // }\r\n\r\n    //     // if (age_now === 0) {\r\n    //     //     return m + \" month(s)\";\r\n    //     // }\r\n    //     return age_now + \" year(s)\";\r\n    // };\r\n\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Status\", field: \"v_status\", filtering: false },\r\n            //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}patient?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: getHospitalNumber(row.identifier),\r\n                                   \r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                   age: (row.dateOfBirth === 0 ||\r\n                                    row.dateOfBirth === undefined ||\r\n                                    row.dateOfBirth === null ||\r\n                                    row.dateOfBirth === \"\" )\r\n                                    ? 0\r\n                                    : calculate_age(row.dateOfBirth),\r\n                                    \r\n                                    //count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}> Patient Dashboard </span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst KpPrevEnrolled = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KpPrevEnrolled;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList'\r\n//import PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport KpPrevEnrolled from \"./KpPrev/KpPrevEnrolled\";\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>KP-PREV</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n\r\n                  <Tab eventKey=\"kpprev\" title=\"Kp-Prev\">                   \r\n                    <KpPrevEnrolled />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n    const getPhoneNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(\r\n        (obj) => obj.type === \"phone\"\r\n      );\r\n      return phoneNumber ? phoneNumber.value : \"\";\r\n    };\r\n    const getAddress = (identifier) => {\r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find((obj) => obj.city);\r\n      const houseAddress =\r\n        address && address.line[0] !== null ? address.line[0] : \"\";\r\n      const landMark =\r\n        address && address.city && address.city !== null ? address.city : \"\";\r\n      return address ? houseAddress + \" \" + landMark : \"\";\r\n    };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                        {getPhoneNumber(patientObj.contactPoint)}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)}{\" \"}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    // const loadVaccination = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    // }\r\n    // const loadIcu = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'icu'})\r\n    // }\r\n    // const loadAddmission = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    // }\r\n    // const onClickDischarge = (row) =>{        \r\n    //     props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    // }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadKpPrev = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:\"kp-prev\"})\r\n    }\r\n    // const loadPatientHistory = ()=>{\r\n    //     //setActiveItem('history')\r\n    //     props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    // }\r\n\r\n\r\n    return ( \r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>      \r\n                <Menu.Item onClick={() => loadKpPrev()} > Kp-Prev</Menu.Item>               \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n    const LoadModal = (row) => {\r\n        toggle();\r\n        setRecord(row);\r\n      };\r\n\r\n\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n\r\n    const dummyData = [\r\n        {\r\n          dateOfServicesProvided: \"2023-10-15\", // Dummy date for the first column\r\n          action: \"Sample Action\" // Dummy data for the second column\r\n        },\r\n        {\r\n          dateOfServicesProvided: \"2023-11-20\", // Another dummy date\r\n          action: \"Another Action\" // Another dummy action\r\n        },\r\n        // Add more objects for additional rows as needed\r\n      ];\r\n       const handleAction = (rowData) => {\r\n    // Define your action handling logic here\r\n    console.log(\"Action clicked for:\", rowData);\r\n  };\r\n\r\n  const LoadVie43wPage = (row, action) => {\r\n    // Placeholder function\r\n    console.log(\"View page loaded for:\", row);\r\n  };\r\n\r\n    \r\n    //console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            {/* <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>        */}\r\n            <br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                  {\r\n                      title: \"Date Of Services Provided\",\r\n                      field: \"dateOfServicesProvided\",\r\n                    },\r\n                    {  title: \"Action\", \r\n                    field: \"action\", \r\n                    filtering: false,\r\n                    render: rowData => \r\n                    <div>\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item>\r\n                            <Button \r\n                             style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                             primary \r\n                             >  \r\n                             <Dropdown item text=\"Action\" style= {{color:\"white\"}}> \r\n                             <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                               \r\n                                 <Dropdown.Item\r\n                                   //onClick={() => LoadViewPage(rowData, \"view\")}\r\n                                 >\r\n                                   {\" \"}\r\n                                   <Icon name=\"eye\" />\r\n                                   View{\" \"}\r\n                                 </Dropdown.Item>\r\n                               \r\n                               \r\n                                 <Dropdown.Item\r\n                                  // onClick={() => LoadViewPage(rowData, \"update\")}\r\n                                 >\r\n                                   <Icon name=\"edit\" />\r\n                                   Edit\r\n                                 </Dropdown.Item>\r\n                               \r\n                               \r\n                                 <Dropdown.Item\r\n                                   //onClick={() => LoadModal(rowData, \"delete\")}\r\n                                 >\r\n                                   {\" \"}\r\n                                   <Icon name=\"trash\" /> Delete\r\n                                 </Dropdown.Item>\r\n                               \r\n                             </Dropdown.Menu>\r\n                           </Dropdown>\r\n                             \r\n                             </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>  \r\n                },\r\n                \r\n                // { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                // { title: \"Location\", field: \"location\", filtering: false },      \r\n                // { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                // { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                // { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                // { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              \r\n              \r\n            //   data={ vacinationList.map((row) => ({\r\n\r\n                \r\n            //         //dateOfServicesProvided: row\r\n            //        // vaccine: row.vaccineName,\r\n            //         //vaccineDate: row.vaccineDate,\r\n            //         //batchNumber: row.batchNumber,\r\n            //         //doseNumber: row.doseNumber,\r\n            //        // location: row.location,\r\n            //         //vaccinationFacility: row.vaccinationFacility,\r\n            //         //adverseEffect: row.adverseEffect,\r\n            //         actions:\r\n                    \r\n            \r\n            //         <div>\r\n            //             <Menu.Menu position='right'  >\r\n            //             <Menu.Item >\r\n            //                 <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n            //                 <Dropdown item text='Action'>\r\n\r\n            //                 <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n            //                     <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n            //                     <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n            //                 </Dropdown.Menu>\r\n            //             </Dropdown>\r\n            //                 </Button>\r\n            //             </Menu.Item>\r\n            //             </Menu.Menu>\r\n            //         </div>\r\n                  \r\n            //       }))}\r\n            data ={dummyData}\r\n        \r\n       //columns={columns}\r\n\r\n        \r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { useState,useEffect,Fragment} from \"react\";\r\nimport axios from \"axios\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [loadingRecent, setLoadingRecent] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (props.patientObj && props.patientObj !== null) {\r\n      RecentActivities();\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  // const RecentActivities = () => {\r\n  //   axios\r\n  //   .put('/api/v1/kpprev', data, {\r\n  //     headers: { Authorization: `Bearer ${token}` },\r\n  //   })\r\n  //     .then((response) => {\r\n  //       setLoadingRecent(false);\r\n  //       setRecentActivities(response.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       setLoadingRecent(false);\r\n  //       //console.log(error);\r\n  //     });\r\n  // };\r\n  //Get list of LaboratoryHistory\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}api/v1/kpprev/retrieve ${props.patientObj.id}/activities?full=false`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoadingRecent(false);\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setLoadingRecent(false);\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === \"\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"kp-prevention\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='kp-prev'){\r\n            props.setActiveContent({...props.activeContent, route:'kp-prevention', id:row.id, actionType:action})\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        } else if(row.path==='kp-prev'){\r\n            //props.setActiveContent({...props.activeContent, route:'kp-prev-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}api/v1/kpprev/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }\r\n        else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Card,CardBody,Form, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Table  } from \"react-bootstrap\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport Select from '@mui/material/Select';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } ,\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n}))\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\n  function getStyles(name, selectedOptions, theme) {\r\n    return {\r\n      fontWeight:\r\n        selectedOptions.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst KpPrev = (props) =>{\r\n    const theme = useTheme();\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    const patientObj = props.patientObj;\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    const classes = useStyles()\r\n   \r\n    const [saving, setSaving] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    // const [optionsForCallOutCome, setOptionsForCallOutCome] = useState([]);\r\n    const [observation, setObservation]=useState({\r\n            data: {},\r\n            date: \"\",\r\n            htsService:\"\",\r\n            prepServices:\"\",\r\n            personId: 0,\r\n            type: \"\",\r\n           \r\n    })\r\n    const [date, setDate]=useState({\r\n      dateServiceOffered:\"\"\r\n    })\r\n    const [htsServices, setHtsServices] = useState({  \r\n            offeredHts:\"\",\r\n            acceptedHts:\"\",\r\n            hivTestResult:\"\",\r\n            referredForArt:\"\",\r\n    });\r\n    const [prepServices,setPrepServices]= useState({\r\n            offeredPrep:\"\",\r\n            acceptedPrep:\"\",\r\n            referredForPrep:\"\"\r\n    })\r\n    const [commodityService, setCommodityService] =useState({\r\n          condomDispensed:\"\",\r\n          lubricantsDispensed:\"\",\r\n          oralQuickDispensed:\"\",\r\n          newNeedleDispensed:\"\",\r\n          oldNeedleRetrived:\"\",\r\n          nalxoneProvided:\"\"\r\n\r\n    })\r\n    const [hivEducationProvided, setHivEducationProvided] =useState({\r\n            iecMaterial:\"\",\r\n            interPersonalCommunication:\"\",\r\n            peerGroupCommunication:\"\"\r\n    })\r\n    const [bioMedicalServices, setbioMedicalServices] = useState({\r\n        stiScreening:\"\",\r\n        stiSyndromicManagement:\"\",\r\n        stiTreatment:\"\",\r\n        screenedForTb:\"\",\r\n        providedWithTpt:\"\",\r\n        screenedForViralHepatits:\"\",\r\n        viralHepatitsScreenResult:\"\",\r\n        vaccinationForViralHepatits:\"\",\r\n        offeredFamilyPlanningServices:\"\",\r\n        referredForFamilyPlanningServices:\"\",\r\n        providedWithDrugRehab:\"\",\r\n        offeredMhpss:\"\",\r\n        onMedicalAssistedTherapy:\"\",\r\n        recivedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n    });\r\n    const [structuralServices, setstructuralServices] =useState({\r\n      providedOrRefferedForEmpowerment:\"\",\r\n      legalAidServiceType:\"\",\r\n      peerGroupCommunication:\"\"\r\n})\r\n const [facilityRefferedToo, setFacilityRefferedToo]=useState({\r\n  facilityRefferedToStiScreening:\"\",\r\n  facilityRefferedToScreenedTo:\"\",\r\n  facilityRefferedToScreenedForViralHepatits:\"\",\r\n  facilityRefferedToViralHepatitsScreenResult:\"\",\r\n  facilityRefferedToVaccinationForViralHepatits:\"\",\r\n  facilityRefferedToOfferedFamilyPlanningServices:\"\",\r\n  facilityRefferedToReferredForFamilyPlanningServices:\"\",\r\n  facilityRefeRredToProvidedWithDrugRehab:\"\",\r\n  facilityRefferedToOfferedMhpss:\"\",\r\n  facilityRefferedToOnMedicalAssistedTherapy:\"\",\r\n  facilityRefferedToRecievedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n  \r\n })\r\n\r\n    \r\n    // useEffect(() => {\r\n    //         if(props.activeContent.actionType==='update' || props.activeContent.actionType==='view'){\r\n    //             GetFormDetail(props.activeContent.id)\r\n    //         }\r\n    // }, [props.activeContent.actionType]);\r\n    // const GetFormDetail =(id)=>{\r\n    //     axios\r\n    //         .get(`${baseUrl}observation/${id}`,\r\n    //             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n    //         )\r\n    //         .then((response) => {\r\n    //             const Obj= response.data\r\n    //             setObservation({...Obj})\r\n    //             //setClientVerificationObj({...Obj.data})\r\n    //             setAttemptList([...Obj.data.attempt]);\r\n    //             setSelected([...Obj.data.anyOfTheFollowing])\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             //console.log(error);\r\n    //         });\r\n    // }\r\n    const handleInputChange= e => {\r\n      //console.log(e.target.value)\r\n      setErrors({...temp, [e.target.name]:\"\"})\r\n      setDate({...date,  [e.target.name]: e.target.value});\r\n      \r\n  }\r\n  const handleInputChangeReferred = e => {\r\n    //console.log(e.target.value)\r\n    setErrors({...temp, [e.target.name]:\"\"})\r\n    setFacilityRefferedToo({...facilityRefferedToo,  [e.target.name]: e.target.value});\r\n    \r\n}\r\n  \r\n    const handleInputChangeHtsService= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHtsServices({...htsServices,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangePrepServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setPrepServices({...prepServices,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeCommodityServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setCommodityService({...commodityService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeHivEducationProvided = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHivEducationProvided({...hivEducationProvided,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    const handleInputChangebioMedicalServices = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setbioMedicalServices ({...bioMedicalServices,  [e.target.name]: e.target.value});\r\n       \r\n    }\r\n    const handleInputChangestructuralServices = e => {\r\n      //console.log(e.target.value)\r\n      setErrors({...temp, [e.target.name]:\"\"})\r\n      setstructuralServices ({...structuralServices,  [e.target.name]: e.target.value});\r\n     \r\n  }\r\n\r\n    //Validations of the forms\r\n    const validateAttempt = () => { \r\n        \r\n         temp.dateServiceOffered =date.dateServiceOffered?\"\": \"This field is required\"\r\n         setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n  \r\n    \r\n   \r\n    /* Remove  function **/\r\n    \r\n    \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if (validateAttempt()) {\r\n        const data = {\r\n          observation: {\r\n            data: {},\r\n            date: date.dateServiceOffered,\r\n            htsService: htsServices,\r\n            prepServices: prepServices,\r\n            personId: observation.personId,\r\n            type: observation.type,\r\n            //visitId: observation.visitId,\r\n          },\r\n          commodityService: commodityService,\r\n          hivEducationProvided: hivEducationProvided,\r\n          bioMedicalServices: bioMedicalServices,\r\n          structuralServices: structuralServices,\r\n        };\r\n        console.log(data)\r\n        setSaving(true);\r\n        axios\r\n          .post('api/v1/kpprev', data, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            toast.success(\"Record save successful\");\r\n            // Handle any other logic here\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n          });\r\n      }\r\n    };\r\n    \r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            \r\n            {/* <div className=\"card d-flex\"> */}\r\n            <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n            >\r\n                    <h5 className='card-title' style={{color:\"#fff\"}}>\r\n                      KEY POPULATION PREVENTION FORM\r\n                    </h5>\r\n                  \r\n            </div>\r\n            <div className=\"row d-flex\">\r\n              <h2>Service Provider </h2>\r\n              <br />\r\n              <br />\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Date Of Service Provisions \r\n                  </Label>\r\n                  <Input\r\n                  type=\"date\"\r\n                  name=\"dateServiceOffered\"\r\n                  value={date.dateServiceOffered}\r\n                  onChange={handleInputChange}\r\n                  id=\"dateServiceOffered\"\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                   {errors.dateServiceOffered !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateServiceOffered}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            {/* <div className='card'> */}\r\n                \r\n                <div \r\n                  className=\"card-header\"\r\n                  style={{\r\n                  backgroundColor: \"teal\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",}} \r\n                  \r\n                >\r\n                    <h2 style={{color:'#fff'}}>HTS Services</h2>\r\n                </div>\r\n                    <br />\r\n                    <br />                \r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered HTS\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"offeredHts\"\r\n                  id=\"offeredHts\"\r\n                  onChange ={handleInputChangeHtsService}\r\n                  value={htsServices.offeredHts}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Accepted HTS\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"acceptedHts\"\r\n                  id=\"acceptedHts\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsServices.acceptedHts}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Hiv Test Result\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"hivTestResult\"\r\n                  id=\"hivTestResult\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsServices.hivTestResult}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Reffered for ART\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"referredForArt\"\r\n                  id=\"referredForArt\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsServices.referredForArt}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n            \r\n            {/* </div> */}\r\n            \r\n            <br />\r\n\r\n            {/* <div className='card'> */}\r\n\r\n            {/* <div className=\"row d-flex\"> */}\r\n            <LabelSui as='a' color='teal' style={{width:'100%', height:'45px'}} ribbon>\r\n                  <h2 style={{color:'#fff'}}>PreP Services</h2>\r\n            </LabelSui> \r\n            <br />\r\n            <br />\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredPrep\"\r\n                id=\"offeredPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.offeredPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"1\">Yes</option> \r\n                  <option value=\"0\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted PreP\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedPrep\"\r\n                id=\"acceptedPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.acceptedPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"1\">Yes</option> \r\n                  <option value=\"0\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"referredForPrep\"\r\n                id=\"referredForPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.referredForPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"1\">Yes</option> \r\n                  <option value=\"0\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            {/* </div> */}\r\n\r\n            {/* <div className='card'> */}\r\n                <LabelSui as='a' color='teal' style={{width:'100%', height:'45px'}} ribbon>\r\n                    <h2 style={{color:'#fff'}}>Commodity Service</h2>\r\n                </LabelSui> \r\n                    <br />\r\n                    <br />\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Condom Dispensed \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"condomDispensed\"\r\n                  id=\"condomDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.condomDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Lubricants Dispensed\r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"lubricantsDispensed\"\r\n                  id=\"lubricantsDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.lubricantsDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Oral Quick/ HIVST dispensed \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"oralQuickDispensed\"\r\n                  id=\"oralQuickDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.oralQuickDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    New Needles/Syringe Dispesend \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"newNeedleDispensed\"\r\n                  id=\"newNeedleDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.newNeedleDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Old Needles/Syringe Retrived  \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"oldNeedleRetrived\"\r\n                  id=\"oldNeedleRetrived\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.oldNeedleRetrived}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Nalxone Provided \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"nalxoneProvided\"\r\n                  id=\"nalxoneProvided\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.nalxoneProvided}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                {/* </div> */}\r\n                <div className=\"row d-flex\">\r\n             \r\n                <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n                  <h2 style={{color:'#fff'}}>HIV Educaton Provided</h2>\r\n                </LabelSui>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                IEC material/Pamphelt \r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"iecMaterial\"\r\n               id=\"iecMaterial\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.iecMaterial}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                 <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               InterPersonal Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"interPersonalCommunication\"\r\n               id=\"interPersonalCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.interPersonalCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Peer Group Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"peerGroupCommunication\"\r\n               id=\"peerGroupCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.peerGroupCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n           </div>\r\n           </div>\r\n           <br/>\r\n           {/* <div className='card'> */}\r\n           \r\n           \r\n\r\n           <div className=\" row d-flex\">\r\n           <div className=\"row d-flex\">\r\n        <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n          <h2 style={{color:'#fff'}}>Biomedical Services</h2>\r\n        </LabelSui>\r\n        <br />\r\n        <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    STI Screening\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={bioMedicalServices.stiScreening}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"1\">Yes</option>\r\n                    <option value=\"0\">No</option>\r\n                  </Input>\r\n                </FormGroup>    \r\n              </div>\r\n                {bioMedicalServices.stiScreening === \"1\" && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"stiScreeningResponse\"\r\n                      id=\"stiScreeningResponse\"\r\n                      value={bioMedicalServices.stiScreeningResponse}\r\n                      onChange={handleInputChangebioMedicalServices}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    STI Syndromic Management\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiSyndromicManagement\"\r\n                    id=\"stiSyndromicManagement\"\r\n                    value={bioMedicalServices.stiSyndromicManagement}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"1\">Yes</option>\r\n                    <option value=\"0\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>      \r\n                {bioMedicalServices.stiSyndromicManagement === \"1\" && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <Label>Facility Referred to</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"facilityReferredTo\"\r\n                      id=\"facilityReferredTo\"\r\n                      value={bioMedicalServices.facilityReferredTo}\r\n                      onChange={handleInputChangebioMedicalServices}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n             \r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Treatment/ Referral\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiTreatment\"\r\n                    id=\"stiTreatment\"\r\n                    value={bioMedicalServices.stiTreatment}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.stiTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to Sti Screening </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToStiScreening\"\r\n                    id=\"facilityRefferedToStiScreening\"\r\n                    value={facilityRefferedToo.facilityRefferedToStiScreening}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                      Screened for TB                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForTb\"\r\n                    id=\"screenedForTb\"\r\n                    value={bioMedicalServices.screenedForTb}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.screenedForTb === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToScreenedTo\"\r\n                    id=\"facilityRefferedToScreenedTo\"\r\n                    value={facilityRefferedToo.facilityRefferedToScreenedTo} \r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided with TPT      \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithTpt\"\r\n                    id=\"providedWithTpt\"\r\n                    value={bioMedicalServices.providedWithTpt}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened For Viral Heaptits \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForViralHepatits\"\r\n                    id=\"screenedForViralHepatits\"\r\n                    value={bioMedicalServices.screenedForViralHepatits}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.screenedForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToScreenedForViralHepatits\"\r\n                    id=\"facilityRefferedToScreenedFclientVerificationObjorViralHepatits\"\r\n                    value={facilityRefferedToo.facilityRefferedToScreenedForViralHepatits} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Viral Hepatits Screen Result \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"viralHepatitsScreenResult\"\r\n                    id=\"viralHepatitsScreenResult\"\r\n                    value={bioMedicalServices.viralHepatitsScreenResult}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Positive\"> Positive </option>\r\n                    <option value=\"Negative\"> Negative</option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.viralHepatitsScreenResult === \"Positive\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                    id=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                    value={facilityRefferedToo.facilityRefferedToViralHepatitsScreenResult} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Vaccination For Viral Hepatits\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"vaccinationForViralHepatits\"\r\n                    id=\"vaccinationForViralHepatits\"\r\n                    value={bioMedicalServices.vaccinationForViralHepatits}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.vaccinationForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                    id=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                    value={facilityRefferedToo.facilityRefferedToVaccinationForViralHepatits} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredFamilyPlanningServices\"\r\n                    id=\"offeredFamilyPlanningServices\"\r\n                    value={bioMedicalServices.offeredFamilyPlanningServices}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.offeredFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                    id=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                    value={facilityRefferedToo.facilityRefferedToOfferedFamilyPlanningServices} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Refferred For Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"referredForFamilyPlanningServices\"\r\n                    id=\"referredForFamilyPlanningServices\"\r\n                    value={bioMedicalServices.referredForFamilyPlanningServices}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.referredForFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                    id=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                    value={facilityRefferedToo.facilityRefferedToReferredForFamilyPlanningServices} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided With Drug Rehab\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithDrugRehab\"\r\n                    id=\"providedWithDrugRehab\"\r\n                    value={bioMedicalServices.providedWithDrugRehab}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.providedWithDrugRehab === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                    id=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                    value={facilityRefferedToo.facilityRefeRredToProvidedWithDrugRehab} \r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}      \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered MHPSS\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredMhpss\"\r\n                    id=\"offeredMhpss\"\r\n                    value={bioMedicalServices.offeredMhpss}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.offeredMhpss === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label>Facility Refferred to </Label> Type  of MHpss \r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToOfferedMhpss\"\r\n                    id=\"facilityRefferedToOfferedMhpss\"\r\n                    value={facilityRefferedToo.facilityRefferedToOfferedMhpss} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  On Medical Assisted Therapy (MAT) for atleast\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"onMedicalAssistedTherapy\"\r\n                    id=\"onMedicalAssistedTherapy\"\r\n                    value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.onMedicalAssistedTherapy === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                    id=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                    value={facilityRefferedToo.facilityRefferedToOnMedicalAssistedTherapy} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Recived Nalxone for Overdose Treatment \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"recivedNalxoneForOverdoseTreatment\"\r\n                    id=\"recivedNalxoneForOverdoseTreatment\"\r\n                    value={bioMedicalServices.recivedNalxoneForOverdoseTreatment}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n             </div>\r\n             </div>\r\n\r\n             <div className=\"row d-flex\">\r\n\r\n             <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n\r\n              <h2 style={{color:'#fff'}}> Structural Services  </h2>\r\n              </LabelSui>\r\n              <br />\r\n              <br />\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided or Reffered for Empowerment\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedOrRefferedForEmpowerment\"\r\n                    id=\"providedOrRefferedForEmpowerment\"\r\n                    value={structuralServices.recivedNalxoneForOverdoseTreatment}\r\n                    onChange={handleInputChangestructuralServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {structuralServices.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                    id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                    value={facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment}    \r\n                    onChange={handleInputChangestructuralServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                       Legal Aid Service Type\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"legalAidServiceType\"\r\n                    id=\"legalAidServiceType\"\r\n                    value={structuralServices.legalAidServiceType}\r\n                    onChange={handleInputChangestructuralServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.legalAidServiceType !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.legalAidServiceType}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {structuralServices.legalAidServiceType === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedLegalAidServiceType\"\r\n                    id=\"facilityRefferedLegalAidServiceType\"\r\n                    value={facilityRefferedToo.facilityRefferedLegalAidServiceType} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n\r\n                </div>\r\n             </div>\r\n             {/* </div> */}\r\n\r\n\r\n\r\n             </div>\r\n            {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              //hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n              //disabled={attemptList.length <= 0 && !saving ? true : false}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {\" \"}\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update\"\r\n                    : \"Save\"}\r\n                </span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update...\"\r\n                    : \"Save...\"}\r\n                </span>\r\n              )}\r\n            </MatButton>\r\n            {/* </div> */}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default KpPrev;\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\nimport KpPrev from '../KpPrev';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >KP-PREV /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}  \r\n\r\n          {activeContent.route==='kp-prev' &&(<KpPrev patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}       \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        COVID_ADVERSE_EFFECT()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    //COVID_ADVERSE_EFFECT\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n        }\r\n                \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value === \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value === \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n      console.log(handleSubmit)\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const observationData = {\r\n                  observation: {\r\n                      data: {},\r\n                      date: date.dateServiceOffered,\r\n                      htsService: htsServices,\r\n                      prepServices: prepServices,\r\n                  },\r\n                  commodityService: commodityService,\r\n                  hivEducationProvided: hivEducationProvided,\r\n                  bioMedicalServices: bioMedicalServices,\r\n                  structuralServices: structuralServices,\r\n              };\r\n\r\n                \r\n                const response = await axios.post(`${baseUrl}/api/v1/kpprev`, patientDTO, \r\n                { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const [date, setDate]=useState({\r\n      dateServiceOffered:\"\"\r\n    })\r\n\r\n    const [htsServices, setHtsServices] = useState({  \r\n      offeredHts:\"\",\r\n      acceptedHts:\"\",\r\n      hivTestResult:\"\",\r\n      referredForArt:\"\",\r\n});\r\nconst [prepServices,setPrepServices]= useState({\r\n        offeredPrep:\"\",\r\n        acceptedPrep:\"\",\r\n        refferedForPrep:\"\"\r\n\r\n\r\n\r\n})\r\nconst [commodityService, setCommodityService] =useState({\r\n      condomDispensed:\"\",\r\n      lubricantsDispensed:\"\",\r\n      oralQuickDispensed:\"\",\r\n      newNeedleDispensed:\"\",\r\n      oldNeedleRetrived:\"\",\r\n      nalxoneProvided:\"\"\r\n\r\n})\r\nconst [hivEducationProvided, setHivEducationProvided] =useState({\r\n        iecMaterial:\"\",\r\n        interPersonalCommunication:\"\",\r\n        peerGroupCommunication:\"\"\r\n})\r\nconst [bioMedicalServices, setbioMedicalServices] = useState({\r\n  stiScreening:\"\",\r\n  stiSyndromicManagement:\"\",\r\n  stiTreatment:\"\",\r\n  screenedForTb:\"\",\r\n  providedWithTpt:\"\",\r\n  screenedForViralHepatits:\"\",\r\n  viralHepatitsScreenResult:\"\",\r\n  vaccinationForViralHepatits:\"\",\r\n  offeredFamilyPlanningServices:\"\",\r\n  referredForFamilyPlanningServices:\"\",\r\n  providedWithDrugRehab:\"\",\r\n  offeredMhpss:\"\",\r\n  onMedicalAssistedTherapy:\"\",\r\n  recivedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n});\r\nconst [structuralServices, setstructuralServices] =useState({\r\n  providedOrRefferedForEmpowerment:\"\",\r\n  legalAidServiceType:\"\",\r\n  peerGroupCommunication:\"\"\r\n})\r\nconst [facilityRefferedToo, setFacilityRefferedToo]=useState({\r\nfacilityRefferedToStiScreening:\"\",\r\nfacilityRefferedToScreenedTo:\"\",\r\nfacilityRefferedToScreenedForViralHepatits:\"\",\r\nfacilityRefferedToViralHepatitsScreenResult:\"\",\r\nfacilityRefferedToVaccinationForViralHepatits:\"\",\r\nfacilityRefferedToOfferedFamilyPlanningServices:\"\",\r\nfacilityRefferedToReferredForFamilyPlanningServices:\"\",\r\nfacilityRefeRredToProvidedWithDrugRehab:\"\",\r\nfacilityRefferedToOfferedMhpss:\"\",\r\nfacilityRefferedToOnMedicalAssistedTherapy:\"\",\r\nfacilityRefferedToRecievedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n\r\n})\r\n    \r\n      const handleInputChan4Date= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setDate({...date,  [e.target.name]: e.target.value});\r\n        \r\n      }\r\n      const handleInputChangeReferred = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setFacilityRefferedToo({...facilityRefferedToo,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    const handleInputChangeHtsService= e => {\r\n      //console.log(e.target.value)\r\n      setErrors({...temp, [e.target.name]:\"\"})\r\n      setHtsServices({...htsServices,  [e.target.name]: e.target.value});\r\n      \r\n  }\r\n    const handleInputChangePrepServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setPrepServices({...prepServices,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeCommodityServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setCommodityService({...commodityService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeHivEducationProvided = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHivEducationProvided({...hivEducationProvided,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    const handleInputChangebioMedicalServices = e => {\r\n      //console.log(e.target.value)\r\n      setErrors({...temp, [e.target.name]:\"\"})\r\n      setbioMedicalServices ({...bioMedicalServices,  [e.target.name]: e.target.value});\r\n     \r\n  }\r\n  const handleInputChangestructuralServices = e => {\r\n    //console.log(e.target.value)\r\n    setErrors({...temp, [e.target.name]:\"\"})\r\n    setstructuralServices ({...structuralServices,  [e.target.name]: e.target.value});\r\n   \r\n}\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Kp-Prev /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration===\"\" ? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        \r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"5\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <p><b style={{color:\"red\"}}>{basicInfo.age!==\"\" && basicInfo.age< 5 ? \"The minimum age is 5\" : \" \"} </b></p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                    {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showContactCard && (\r\n                                  <div className=\"card-body\">\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'phoneNumber')}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                                  {errors.phoneNumber !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                      ) : \"\" }\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Alt. Phone Number</Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"altPhonenumber\"\r\n                                                    id=\"altPhonenumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'altPhonenumber')}}\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                 />\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Email</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"email\"\r\n                                                      name=\"email\"\r\n                                                      id=\"email\"\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      value={basicInfo.email}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      required\r\n                                                  />\r\n                                                \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Street Address <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"address\"\r\n                                                      id=\"address\"\r\n                                                      value={basicInfo.address}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                  />\r\n                                                {errors.address !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.address}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Landmark</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"landmark\"\r\n                                                      id=\"landmark\"\r\n                                                      value={basicInfo.landmark}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      \r\n                                                  />\r\n                                                  \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                    {showRelative===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showRelative && (\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                                                        <Input\r\n                                                                            type=\"text\"\r\n                                                                            name=\"phone\"\r\n                                                                            id=\"phone\"\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                            value={relatives.phone}\r\n                                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {errors.phone !==\"\" ? (\r\n                                                                            <span className={classes.error}>{errors.phone}</span>\r\n                                                                            ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                                    {/* </div> */}\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Adding First DOSAGE FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Key Population Prevention </h5>\r\n                                </div>\r\n\r\n                                \r\n            {/* <div className=\"card d-flex\"> */}\r\n        \r\n            <div className=\"row d-flex\">\r\n              <h2>Service Provider </h2>\r\n              <br />\r\n              <br />\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Date Of Service Provisions \r\n                  </Label>\r\n                  <Input\r\n                  type=\"date\"\r\n                  name=\"dateServiceOffered\"\r\n                  value={date.dateServiceOffered}\r\n                  onChange={handleInputChan4Date}\r\n                  id=\"dateServiceOffered\"\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                   {errors.dateServiceOffered !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateServiceOffered}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            {/* <div className='card'> */}\r\n                \r\n                <div \r\n                  className=\"card-header\"\r\n                  style={{\r\n                  backgroundColor: \"teal\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",}} \r\n                  \r\n                >\r\n                    <h2 style={{color:'#fff'}}>HTS Services</h2>\r\n                </div>\r\n                    <br />\r\n                    <br />                \r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered HTS\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"offeredHts\"\r\n                  id=\"offeredHts\"\r\n                  onChange ={handleInputChangeHtsService}\r\n                  value={htsServices.offeredHts}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Accepted HTS\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"acceptedHts\"\r\n                  id=\"acceptedHts\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsServices.acceptedHts}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Hiv Test Result\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"hivTestResult\"\r\n                  id=\"hivTestResult\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsServices.hivTestResult}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Reffered for ART\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"referredForArt\"\r\n                  id=\"referredForArt\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsServices.referredForArt}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"1\">Yes</option> \r\n                    <option value=\"0\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n            \r\n            {/* </div> */}\r\n            \r\n            <br />\r\n\r\n            {/* <div className='card'> */}\r\n\r\n            {/* <div className=\"row d-flex\"> */}\r\n            <LabelSui as='a' color='teal' style={{width:'100%', height:'45px'}} ribbon>\r\n                  <h2 style={{color:'#fff'}}>PreP Services</h2>\r\n            </LabelSui> \r\n            <br />\r\n            <br />\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredPrep\"\r\n                id=\"offeredPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.offeredPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"1\">Yes</option> \r\n                  <option value=\"0\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted PreP\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedPrep\"\r\n                id=\"acceptedPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.acceptedPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"1\">Yes</option> \r\n                  <option value=\"0\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"referredForPrep\"\r\n                id=\"referredForPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.referredForPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"1\">Yes</option> \r\n                  <option value=\"0\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            {/* </div> */}\r\n\r\n            {/* <div className='card'> */}\r\n                <LabelSui as='a' color='teal' style={{width:'100%', height:'45px'}} ribbon>\r\n                    <h2 style={{color:'#fff'}}>Commodity Service</h2>\r\n                </LabelSui> \r\n                    <br />\r\n                    <br />\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Condom Dispensed \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"condomDispensed\"\r\n                  id=\"condomDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.condomDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Lubricants Dispensed\r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"lubricantsDispensed\"\r\n                  id=\"lubricantsDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.lubricantsDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Oral Quick/ HIVST dispensed \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"oralQuickDispensed\"\r\n                  id=\"oralQuickDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.oralQuickDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    New Needles/Syringe Dispesend \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"newNeedleDispensed\"\r\n                  id=\"newNeedleDispensed\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.newNeedleDispensed}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Old Needles/Syringe Retrived  \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"oldNeedleRetrived\"\r\n                  id=\"oldNeedleRetrived\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.oldNeedleRetrived}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-md-4 col-lg-4\"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Nalxone Provided \r\n                  </Label>\r\n                  <Input\r\n                  type=\"number\"\r\n                  name=\"nalxoneProvided\"\r\n                  id=\"nalxoneProvided\"\r\n                  onChange={handleInputChangeCommodityServices}\r\n                  value={commodityService.nalxoneProvided}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                {/* </div> */}\r\n                <div className=\"row d-flex\">\r\n             \r\n                <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n                  <h2 style={{color:'#fff'}}>HIV Educaton Provided</h2>\r\n                </LabelSui>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                IEC material/Pamphelt \r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"iecMaterial\"\r\n               id=\"iecMaterial\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.iecMaterial}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                 <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               InterPersonal Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"interPersonalCommunication\"\r\n               id=\"interPersonalCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.interPersonalCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Peer Group Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"peerGroupCommunication\"\r\n               id=\"peerGroupCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.peerGroupCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n           </div>\r\n           </div>\r\n           <br/>\r\n           {/* <div className='card'> */}\r\n           \r\n           \r\n\r\n           <div className=\" row d-flex\">\r\n           <div className=\"row d-flex\">\r\n        <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n          <h2 style={{color:'#fff'}}>Biomedical Services</h2>\r\n        </LabelSui>\r\n        <br />\r\n        <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    STI Screening\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={bioMedicalServices.stiScreening}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"1\">Yes</option>\r\n                    <option value=\"0\">No</option>\r\n                  </Input>\r\n                </FormGroup>    \r\n              </div>\r\n                {bioMedicalServices.stiScreening === \"1\" && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"stiScreeningResponse\"\r\n                      id=\"stiScreeningResponse\"\r\n                      value={bioMedicalServices.stiScreeningResponse}\r\n                      onChange={handleInputChangebioMedicalServices}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    STI Syndromic Management\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiSyndromicManagement\"\r\n                    id=\"stiSyndromicManagement\"\r\n                    value={bioMedicalServices.stiSyndromicManagement}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"1\">Yes</option>\r\n                    <option value=\"0\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>      \r\n                {bioMedicalServices.stiSyndromicManagement === \"1\" && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <Label>Facility Referred to</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"facilityReferredTo\"\r\n                      id=\"facilityReferredTo\"\r\n                      value={bioMedicalServices.facilityReferredTo}\r\n                      onChange={handleInputChangebioMedicalServices}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n             \r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Treatment/ Referral\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiTreatment\"\r\n                    id=\"stiTreatment\"\r\n                    value={bioMedicalServices.stiTreatment}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.stiTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to Sti Screening </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToStiScreening\"\r\n                    id=\"facilityRefferedToStiScreening\"\r\n                    value={facilityRefferedToo.facilityRefferedToStiScreening}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                      Screened for TB                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForTb\"\r\n                    id=\"screenedForTb\"\r\n                    value={bioMedicalServices.screenedForTb}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.screenedForTb === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToScreenedTo\"\r\n                    id=\"facilityRefferedToScreenedTo\"\r\n                    value={facilityRefferedToo.facilityRefferedToScreenedTo} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided with TPT      \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithTpt\"\r\n                    id=\"providedWithTpt\"\r\n                    value={bioMedicalServices.providedWithTpt}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened For Viral Heaptits \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForViralHepatits\"\r\n                    id=\"screenedForViralHepatits\"\r\n                    value={bioMedicalServices.screenedForViralHepatits}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.screenedForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToScreenedForViralHepatits\"\r\n                    id=\"facilityRefferedToScreenedFclientVerificationObjorViralHepatits\"\r\n                    value={facilityRefferedToo.facilityRefferedToScreenedForViralHepatits} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Viral Hepatits Screen Result \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"viralHepatitsScreenResult\"\r\n                    id=\"viralHepatitsScreenResult\"\r\n                    value={bioMedicalServices.viralHepatitsScreenResult}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Positive\"> Positive </option>\r\n                    <option value=\"Negative\"> Negative</option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.viralHepatitsScreenResult === \"Positive\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                    id=\"facilityRefferedToViralHepatitsScreenResult\"\r\n                    value={facilityRefferedToo.facilityRefferedToViralHepatitsScreenResult} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Vaccination For Viral Hepatits\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"vaccinationForViralHepatits\"\r\n                    id=\"vaccinationForViralHepatits\"\r\n                    value={bioMedicalServices.vaccinationForViralHepatits}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.vaccinationForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                    id=\"facilityRefferedToVaccinationForViralHepatits\"\r\n                    value={facilityRefferedToo.facilityRefferedToVaccinationForViralHepatits} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredFamilyPlanningServices\"\r\n                    id=\"offeredFamilyPlanningServices\"\r\n                    value={bioMedicalServices.offeredFamilyPlanningServices}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.offeredFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                    id=\"facilityRefferedToOfferedFamilyPlanningServices\"\r\n                    value={facilityRefferedToo.facilityRefferedToOfferedFamilyPlanningServices} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Refferred For Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"referredForFamilyPlanningServices\"\r\n                    id=\"referredForFamilyPlanningServices\"\r\n                    value={bioMedicalServices.referredForFamilyPlanningServices}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.referredForFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                    id=\"facilityRefferedToReferredForFamilyPlanningServices\"\r\n                    value={facilityRefferedToo.facilityRefferedToReferredForFamilyPlanningServices} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided With Drug Rehab\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithDrugRehab\"\r\n                    id=\"providedWithDrugRehab\"\r\n                    value={bioMedicalServices.providedWithDrugRehab}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.providedWithDrugRehab === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                    id=\"facilityRefeRredToProvidedWithDrugRehab\"\r\n                    value={facilityRefferedToo.facilityRefeRredToProvidedWithDrugRehab} \r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}      \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered MHPSS\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredMhpss\"\r\n                    id=\"offeredMhpss\"\r\n                    value={bioMedicalServices.offeredMhpss}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.offeredMhpss === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label>Facility Refferred to </Label> Type  of MHpss \r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToOfferedMhpss\"\r\n                    id=\"facilityRefferedToOfferedMhpss\"\r\n                    value={facilityRefferedToo.facilityRefferedToOfferedMhpss} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  On Medical Assisted Therapy (MAT) for atleast\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"onMedicalAssistedTherapy\"\r\n                    id=\"onMedicalAssistedTherapy\"\r\n                    value={bioMedicalServices.onMedicalAssistedTherapy}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalServices.onMedicalAssistedTherapy === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                    id=\"facilityRefferedToOnMedicalAssistedTherapy\"\r\n                    value={facilityRefferedToo.facilityRefferedToOnMedicalAssistedTherapy} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Recived Nalxone for Overdose Treatment \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"recivedNalxoneForOverdoseTreatment\"\r\n                    id=\"recivedNalxoneForOverdoseTreatment\"\r\n                    value={bioMedicalServices.recivedNalxoneForOverdoseTreatment}\r\n                    onChange={handleInputChangebioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n             </div>\r\n             </div>\r\n\r\n             <div className=\"row d-flex\">\r\n\r\n             <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n\r\n              <h2 style={{color:'#fff'}}> Structural Services  </h2>\r\n              </LabelSui>\r\n              <br />\r\n              <br />\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided or Reffered for Empowerment\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedOrRefferedForEmpowerment\"\r\n                    id=\"providedOrRefferedForEmpowerment\"\r\n                    value={structuralServices.recivedNalxoneForOverdoseTreatment}\r\n                    onChange={handleInputChangestructuralServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {structuralServices.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                    id=\"facilityRefferedToRecievedNalxoneForOverdoseTreatment\"\r\n                    value={facilityRefferedToo.facilityRefferedToRecievedNalxoneForOverdoseTreatment}    \r\n                    onChange={handleInputChangestructuralServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                       Legal Aid Service Type\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"legalAidServiceType\"\r\n                    id=\"legalAidServiceType\"\r\n                    value={structuralServices.legalAidServiceType}\r\n                    onChange={handleInputChangestructuralServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"1\"> Yes </option>\r\n                    <option value=\"0\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.legalAidServiceType !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.legalAidServiceType}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {structuralServices.legalAidServiceType === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedLegalAidServiceType\"\r\n                    id=\"facilityRefferedLegalAidServiceType\"\r\n                    value={facilityRefferedToo.facilityRefferedLegalAidServiceType} //  min={enrollDate}\r\n                    onChange={handleInputChangeReferred}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n\r\n                </div>\r\n             </div>\r\n             {/* </div> */}\r\n\r\n\r\n\r\n             </div>\r\n\r\n                            \r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport KpPrev from \"./main/webapp/jsx/components/KpPrev\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n          <Route path=\"/kp-prev\">\r\n            <KpPrev />\r\n          </Route>\r\n\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}