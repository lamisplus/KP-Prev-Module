{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/PatientVaccinatedLIst.js","main/webapp/jsx/formSchemas/form1ValidationSchema.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form1.js","main/webapp/jsx/components/Patient/SummaryTypeSelect/SummaryTypeSelect.js","main/webapp/jsx/formSchemas/summaryFormsValidationSchema.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Reactive.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/NonReactive.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Fibrosis.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/Cirrhosis.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HepatocellularCarcinoma.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType1.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType2.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType3.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryForms/HbvType4.js","main/webapp/jsx/components/Patient/ViralHepatitisSummaryFormContainer.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","main/webapp/jsx/components/Patient/Stepper/Stepper.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form2.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form3.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/Form4.js","main/webapp/jsx/components/Patient/ViralHepatitisForms/FollowUp.js","main/webapp/jsx/components/Patient/ViralHepatitisFormsContainer.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","calculate_age","dob","today","Date","birthDate","split","age_now","getFullYear","m","getMonth","getDate","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","get","concat","baseUrl","pageSize","page","search","headers","then","response","result","records","map","row","name","firstName","lastName","hospital_number","participantId","gender","age","count","Label","size","vaccinationStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","useValidateForm2ValuesHook","onSubmit","Form2ValidationSchema","yup","dateHbvTestRequested","dateHbvSampleCollected","dateHbvDnaResultReported","hbvDna","hbvDnaValue","hbeAg","hbsAgQuantification","antiHdv","treatmentEligible","pmtctEligible","comment","altValue","astValue","pltValue","hcvRna","hcvValue","hepatitisCoInfection","specifyMulitipleInfection","alt","ast","plt","commobidities","totalBilirubin","directBilirubin","albumin","apriScore","fib4","prothrombinTime","urea","creatinine","ultrasoundScan","afp","fibroscan","ctScan","ascites","severityOfAscites","gradeOfEncephalopathy","childPughScore","liverBiopsyStage","stagingDateForLiverBiopsy","diagnosis","formik","useFormik","initialValues","validationSchema","library","add","faCheckSquare","faCoffee","faEdit","faTrash","useStyles","borderRadius","demo","palette","background","default","inline","ViralHepatitisForm1","_ref","setStep","classes","_yup$object","Form1ValidationSchema","hospitalNumber","surname","otherName","phone","residentialAddress","landmark","country","lga","dateOfBirth","occupation","maritalStatus","education","careEntryPoint","_defineProperty","weight","bmi","pregnancy","breastfeeding","historyOfUsingAbusedSubstance","hbsAg","dateOfHepatitisBPositiveScreening","hcvAb","useValidateForm1ValuesHook","values","window","scrollTo","console","log","_Fragment","Card","className","CardContent","Form","handleSubmit","FormGroup","for","type","id","value","onChange","handleChange","onBlur","handleBlur","border","errors","MatButton","endIcon","ArrowForward","textTransform","SummaryTypeSelect","setFormValues","_ref$formValues","formValues","select1Value","select2Value","select3Value","maxWidth","Row","Col","Input","event","prevState","target","disabled","useValidateSummaryValuesHook","ReactiveFormSchema","Reactive","_useState","useState","hepatitisBDropdown","hepatitisCDropdown","coInfectionDropdown","_useState2","_slicedToArray","isDropdownsOpen","setIsDropdownsOpen","justifyContent","marginLeft","IconButton","onClick","ExpandMoreIcon","Collapse","in","padding","maleNineAndUnder","maleTen2Fourteen","maleFifteenAndAbove","maleTotal","femaleNineAndUnder","femaleTen2Fourteen","femaleFifteenAndAbove","femaleTotal","specialPopulationPWID","specialPopulationPW","NonReactive","Fibrosis","Cirrhosis","HepatocellularCarcinoma","HbvType1","HbvType2","HbvType3","HbvType4","ViralHepatitisSummaryFormContainer","_formMap","formMap","divStyle","Home","key","setKey","Fragment","startIcon","FaUserPlus","xl","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","heading","typography","pxToRem","secondaryHeading","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","TiArrowBack","dateParts","dateObject","moment","format","address","Divider","navItemText","SubMenu","patientObjs","_useState3","_useState4","Observation","observation","filter","x","catch","Menu","inverted","Item","setActiveContent","activeContent","route","getAge","Vaccination","setErrors","temp","vaccine","setVaccine","_useState5","adverseEffect","batchNumber","doseNumber","location","patientId","vaccinationFacility","vaccineDate","_useState6","objValues","setObjValues","_useState7","_useState8","saving","setSaving","VACCINE","handleInputChange","e","Modal","isOpen","showModal","toggle","ModalHeader","ModalBody","CardBody","InputGroup","SaveIcon","preventDefault","Object","every","post","toast","loadPatients","CancelIcon","PatientVaccinationHistory","vacinationList","setVaccinationtList","modal","setModal","_React$useState","React","_React$useState2","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","setRecord","patients","_patients","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","vaccineName","position","Dropdown","item","LoadEditModal","IconMenu","LoadDeleteModal","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","VaccinationHistory","PatientnHistory","recentActivities","setRecentActivities","loading","setLoading","useHistory","PatientHistory","personId","activities","LoadViewPage","action","path","actionType","isLoading","date","viewable","Icon","LoadDeletePage","fontFamily","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","setDevices","_useState9","_useState10","pageLoading","setPageLoading","_React$useState3","_React$useState4","showCapture","setshowCapture","_React$useState5","_React$useState6","setTryAgain","_React$useState7","_React$useState8","setSuccess","_useState11","_useState12","_useState13","_useState14","storedBiometrics","setStoredBiometrics","_useState15","_useState16","capturedFingered","setCapturedFingered","_useState17","_useState18","setSelectedFingers","getPersonBiometrics","bgcolor","green","_callee3","fingersCodeset","_context3","sent","_ref2","personCapturedFingers","biometricItems","_biometricItems","length","_","uniq","extend","captured","includes","_x","_ref3","_callee2","_context2","_x2","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","finger","find","_toConsumableArray","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","src","fingerprintimage","Badge","iso","Alert","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","required","_ref4","validate","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","datatype","responses","obj","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","_useState19","_useState20","chronicMedicationModal","setChronicMedicationModal","_useState21","_useState22","supportiveCareModal","setSupportiveCareModal","_useState23","_useState24","vaccinationHistory","setVaccinationHistory","_useState25","_useState26","inclusionHistory","setInclusionHistory","_useState27","_useState28","demograhicHistory","setDemographicHistory","_useState29","_useState30","vitalHistory","setVitalHistory","_useState31","_useState32","comobitieHistory","setComobitieHistory","_useState33","_useState34","reinfectionHistory","setReinfectionHistory","_useState35","_useState36","signsSymptomsHistory","setSignsSymptomsHistory","_useState37","_useState38","chronicMedicationHistory","setChronicMedicationHistory","_useState39","_useState40","medicationHistory","setMedicationHistory","_useState41","_useState42","supportiveCarenHistory","setSupportiveCareHistory","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","Demographic","VitalSign","Comorbitie","SignsSymptoms","art","setArt","activeTab","prepId","PatientCardDetail","AddmissionHome","flexGrow","UserRegistration","active","contact","contactPoint","deceased","deceasedDateTime","genderId","identifier","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","phoneNumber","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","email","relationshipId","middleName","relatives","setRelatives","toISOString","substr","replace","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","userDetail","user","useLocation","setfemaleStatus","_useState43","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","_useState44","_useState45","_useState46","carePoints","setCarePoints","_useState47","_useState48","setSourceReferral","_useState49","_useState50","hivStatus","setHivStatus","_useState51","_useState52","setEnrollSetting","_useState53","_useState54","setTbStatus","_useState55","_useState56","setKP","_useState57","_useState58","_useState59","_useState60","setPregnancyStatus","_useState61","_useState62","_useState63","_useState64","setOvcEnrolled","_useState65","_useState66","open","setOpen","locationState","loadGenders","getSex","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","newConatctsInfo","contactInfo","line","push","identifiers","altphone","uniqueId","employmentStatus","city","setStateByCountryId","getStateId","patientAge","sex","alert","getSexId","useCallback","t0","_callee4","_context4","_callee5","_context5","_callee6","_context6","getCountryId","handleDateOfBirthChange","dateOfRegistration1","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","slice","getRelationship","relationship","handleInputChangeRelatives","checkPhoneNumberBasic","inputName","_ref8","_callee8","patientForm","_context8","fullName","POSITION","TOP_RIGHT","autoClose","hideProgressBar","min","max","defaultChecked","currentDate","setDate","setMonth","dobNew","Math","abs","maritalStatusOption","occupationOption","educationOption","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","relative","splice","handleEditRelative","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","AddIcon","code","Spinner","patientDTO","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","enrollment","getCharacters","hosiptalNumber","_ref9","_callee9","_context9","person","hivEnrollment","put","handleCheckBox","checked","floor","random","htmlFor","backButton","instructions","Steppers","activeStep","steps","Stepper","alternativeLabel","label","Step","StepLabel","ViralHepatitisForm2","cols","rows","multiple","pst","pstValue","acites","ArrowBackIcon","ViralHepatitisForm3","Form3ValidationSchema","hbvTreatmentExperience","hbvPastTreatmentRegimen","hbvNewRegimen","hbvDateStarted","hbvHistoryOfAdverseEffect","hbvRegimeSwitchNewRegimen","hbvRegimeSwitchDateStarted","hbvRegimeSwitchHistoryOfAdverseEffect","hbvRegimeSwitchReason","hbvRegimeSwitchDateStopped","hbvReasonForTreatmentEligibility","hbvReasonsForTreatmentComment","hcvTreatmentExperience","hcvPastTreatmentExperience","hcvDateStarted","hcvDateCompleted","hcvPrescribedDuration","hcvNewRegimen","hcvRegimeSwitchNewRegimen","hcvRegimeSwitchPrescribedDuration","hcvRegimeSwitchDateStarted","hcvRegimeSwitchDateStopped","hcvAdverseEventReported","svr12TestingDateStarted","svr12TestingHcvRna","svr12TestingHcvRnaValue","svr12RetreatmentDateTested","svr12RetreatmentHcvRna","svr12RetreatmentHcvRnaValue","hcvRetreatmentNewRegime","hcvRetreatmentPrescribedDuration","hcvRetreatmentDateStarted","hcvRetreatmentDateStopped","hcvRetreatmentAdverseEffect","hcvRetreatmentHcvGenotype","hcvRegimeSwitchHistoryOfAdverseEffect","useValidateForm3ValuesHook","hbvTreatmentRegimenSwitch","hbvTreatmentReasonforTreatment","hcvTreatmentRegimenSwitch","hcvTreatmentRegimenHcvRetreatment","hcvTreatmentSvr12Testing","FollowupForm","FollowupFormValidationSchema","dateOfVisit","bloodPressure","treatmentRegimen","clinicalName","nextAppointment","remark","useValidateFollowupFormValuesHook","ViralHepatitisFormsContainer","step","margingRight","App","Router","Switch","Route","PatientDetail","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.ffe63706.chunk.js","sourcesContent":["// export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\n// export const url = '/api/v1/'\r\nexport const url =  'http://lamisplus.org:7090/api/v1/';\r\nexport const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjg4MDEwOTQ0fQ.-pmlALC542AJbip66RZKm675_t17D1JY9X5JwNtLImombsJo7C_kBBPemzjjdsnAonNiRJy6VN4K6dSsNqc02A';","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useValidateForm1ValuesHook = (onSubmit) => {\r\n  const form1InitialValues = {\r\n    hospitalNumber: \"\",\r\n    surname: \"\",\r\n    otherName: \"\",\r\n    phone: \"\",\r\n    residentialAddress:\"\",\r\n    landmark: \"\",\r\n    country: \"\",\r\n    state: \"\",\r\n    lga: \"\",\r\n    dateOfBirth: \"\",\r\n    age: \"\",\r\n    occupation: \"\",\r\n    maritalStatus: \"\",\r\n    education: \"\",\r\n    careEntryPoint: \"\",\r\n    weight: \"\",\r\n    height: \"\",\r\n    bmi: \"\",\r\n    pregnancy: \"\",\r\n    breastfeeding: \"\",\r\n    historyOfUsingAbusedSubstance: \"\",\r\n    hbsAg: \"\",\r\n    dateOfHepatitisBPositiveScreening: \"\",\r\n    hcvAb: \"\"\r\n  };\r\n\r\n  const Form1ValidationSchema = yup.object({\r\n    hospitalNumber: yup.string(),\r\n    surname: yup.string(),\r\n    otherName: yup.string(),\r\n    phone: yup.string(),\r\n    residentialAddress:yup.string(),\r\n    landmark: yup.string(),\r\n    country: yup.string(),\r\n    state: yup.string(),\r\n    lga: yup.string(),\r\n    dateOfBirth: yup.string(),\r\n    age: yup.string(),\r\n    occupation: yup.string(),\r\n    maritalStatus: yup.string(),\r\n    education: yup.string(),\r\n    careEntryPoint: yup.string(),\r\n    careEntryPoint: yup.string(),\r\n    weight: yup.string(),\r\n    height: yup.string(),\r\n    bmi: yup.string(),\r\n    pregnancy: yup.string(),\r\n    breastfeeding: yup.string(),\r\n    historyOfUsingAbusedSubstance: yup.string(),\r\n    historyOfUsingAbusedSubstance: yup.string(),\r\n    hbsAg: yup.string(),\r\n    dateOfHepatitisBPositiveScreening: yup.string(),\r\n    hcvAb: yup.string()\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form1InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form1ValidationSchema,\r\n  });\r\n   return { formik };;\r\n};\r\n\r\n\r\nexport const useValidateForm2ValuesHook = (onSubmit) => {\r\n  const form2InitialValues = {\r\n    dateHbvTestRequested: \"\",\r\n    dateHbvSampleCollected: \"\",\r\n    dateHbvDnaResultReported: \"\",\r\n    hbvDna: \"\",\r\n    hbvDnaValue: \"\",\r\n    hbeAg: \"\",\r\n    hbsAgQuantification: \"\",\r\n    antiHdv: \"\",\r\n    treatmentEligible: \"\",\r\n    pmtctEligible: \"\",\r\n    comment: \"\",\r\n    hcvRna: \"\",\r\n    hcvValue: \"\",\r\n    hepatitisCoInfection: [],\r\n    specifyMulitipleInfection: \"\",\r\n    alt: \"\",\r\n    ast: \"\",\r\n    plt: \"\",\r\n    altValue: \"\",\r\n    astValue: \"\",\r\n    pltValue: \"\",\r\n    totalBilirubin: \"\",\r\n    directBilirubin: \"\",\r\n    albumin: \"\",\r\n    apriScore: \"\",\r\n    fib4: \"\",\r\n    prothrombinTime: \"\",\r\n    urea: \"\",\r\n    creatinine: \"\",\r\n    ultrasoundScan: \"\",\r\n    afp: \"\",\r\n    fibroscan: \"\",\r\n    ctScan: \"\",\r\n    ascites: \"\",\r\n    severityOfAscites: \"\",\r\n    gradeOfEncephalopathy: \"\",\r\n    childPughScore: \"\",\r\n    liverBiopsyStage: \"\",\r\n    stagingDateForLiverBiopsy: \"\",\r\n    diagnosis: \"\",\r\n    commobidities: \"\"\r\n    \r\n  };\r\n\r\n  const Form2ValidationSchema = yup.object({\r\n    dateHbvTestRequested:yup.string(),\r\n    dateHbvSampleCollected:yup.string(),\r\n    dateHbvDnaResultReported:yup.string(),\r\n    hbvDna:yup.string(),\r\n    hbvDnaValue:yup.string(),\r\n    hbeAg:yup.string(),\r\n    hbsAgQuantification:yup.string(),\r\n    antiHdv:yup.string(),\r\n    treatmentEligible:yup.string(),\r\n    pmtctEligible:yup.string(),\r\n    comment:yup.string(),\r\n    altValue: yup.string(),\r\n    astValue: yup.string(),\r\n    pltValue: yup.string(),\r\n    hcvRna:yup.string(),\r\n    hcvValue:yup.string(),\r\n    hepatitisCoInfection:yup.array(),\r\n    specifyMulitipleInfection:yup.string(),\r\n    alt:yup.string(),\r\n    ast:yup.string(),\r\n    plt:yup.string(),\r\n    commobidities:yup.string(),\r\n    totalBilirubin:yup.string(),\r\n    directBilirubin:yup.string(),\r\n    albumin:yup.string(),\r\n    apriScore:yup.string(),\r\n    fib4:yup.string(),\r\n    prothrombinTime:yup.string(),\r\n    urea:yup.string(),\r\n    creatinine:yup.string(),\r\n    ultrasoundScan:yup.string(),\r\n    afp:yup.string(),\r\n    fibroscan:yup.string(),\r\n    ctScan:yup.string(),\r\n    ascites:yup.string(),\r\n    severityOfAscites:yup.string(),\r\n    gradeOfEncephalopathy:yup.string(),\r\n    childPughScore:yup.string(),\r\n    liverBiopsyStage:yup.string(),\r\n    stagingDateForLiverBiopsy:yup.string(),\r\n    diagnosis:yup.string()\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form2InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form2ValidationSchema,\r\n  });\r\n   return { formik };;\r\n};\r\n\r\n\r\nexport const useValidateForm3ValuesHook = (onSubmit) => {\r\n  const form3InitialValues = {\r\n   hbvTreatmentExperience: \"\",\r\n   hbvPastTreatmentRegimen: \"\",\r\n   hbvNewRegimen: \"\",\r\n   hbvDateStarted: \"\",\r\n   hbvHistoryOfAdverseEffect: \"\",\r\n\r\n   hbvRegimeSwitchNewRegimen: \"\",\r\n   hbvRegimeSwitchDateStarted: \"\",\r\n   hbvRegimeSwitchHistoryOfAdverseEffect: \"\",\r\n   hbvRegimeSwitchReason: \"\",\r\n   hbvRegimeSwitchDateStopped: \"\",\r\n   hbvReasonForTreatmentEligibility: \"\",\r\n   hbvReasonsForTreatmentComment: \"\",\r\n\r\n   hcvTreatmentExperience: \"\",\r\n   hcvPastTreatmentExperience: \"\",\r\n   hcvDateStarted: \"\",\r\n   hcvDateCompleted: \"\",\r\n   hcvPrescribedDuration: \"\",\r\n   hcvAdverseEventReported: \"\",\r\n\r\n   hcvNewRegimen: \"\",\r\n   hcvRegimeSwitchNewRegimen: \"\",\r\n   hcvRegimeSwitchPrescribedDuration: \"\",\r\n   hcvRegimeSwitchDateStarted: \"\",\r\n   hcvRegimeSwitchDateStopped: \"\",\r\n   hcvRegimeSwitchHistoryOfAdverseEffect: \"\",\r\n  \r\n   svr12TestingDateStarted: \"\",\r\n   svr12TestingHcvRna: \"\",\r\n   svr12TestingHcvRnaValue: \"\",\r\n   svr12RetreatmentDateTested: \"\",\r\n   svr12RetreatmentHcvRna: \"\",\r\n   svr12RetreatmentHcvRnaValue: \"\",\r\n\r\n   hcvRetreatmentNewRegime: \"\",\r\n   hcvRetreatmentPrescribedDuration: \"\",\r\n   hcvRetreatmentDateStarted: \"\",\r\n   hcvRetreatmentDateStopped: \"\",\r\n   hcvRetreatmentAdverseEffect: \"\",\r\n   hcvRetreatmentHcvGenotype: \"\",\r\n  };\r\n\r\n  const Form3ValidationSchema = yup.object({\r\n    hbvTreatmentExperience: yup.string(),\r\n   hbvPastTreatmentRegimen: yup.string(),\r\n   hbvNewRegimen: yup.string(),\r\n   hbvDateStarted: yup.string(),\r\n   hbvHistoryOfAdverseEffect: yup.string(),\r\n   hbvRegimeSwitchNewRegimen: yup.string(),\r\n   hbvRegimeSwitchDateStarted: yup.string(),\r\n   hbvRegimeSwitchHistoryOfAdverseEffect: yup.string(),\r\n   hbvRegimeSwitchReason: yup.string(),\r\n   hbvRegimeSwitchDateStopped: yup.string(),\r\n   hbvReasonForTreatmentEligibility: yup.string(),\r\n   hbvReasonsForTreatmentComment: yup.string(),\r\n\r\n   hcvTreatmentExperience: yup.string(),\r\n   hcvPastTreatmentExperience: yup.string(),\r\n   hcvDateStarted: yup.string(),\r\n   hcvDateCompleted: yup.string(),\r\n   hcvPrescribedDuration: yup.string(),\r\n   hcvNewRegimen: yup.string(),\r\n   hcvRegimeSwitchNewRegimen: yup.string(),\r\n   hcvRegimeSwitchPrescribedDuration: yup.string(),\r\n   hcvRegimeSwitchDateStarted: yup.string(),\r\n   hcvRegimeSwitchDateStopped: yup.string(),\r\n   hcvAdverseEventReported: yup.string(),\r\n  \r\n   svr12TestingDateStarted: yup.string(),\r\n   svr12TestingHcvRna: yup.string(),\r\n   svr12TestingHcvRnaValue: yup.string(),\r\n   svr12RetreatmentDateTested: yup.string(),\r\n   svr12RetreatmentHcvRna: yup.string(),\r\n   svr12RetreatmentHcvRnaValue: yup.string(),\r\n\r\n   hcvRetreatmentNewRegime: yup.string(),\r\n   hcvRetreatmentPrescribedDuration: yup.string(),\r\n   hcvRetreatmentDateStarted: yup.string(),\r\n   hcvRetreatmentDateStopped: yup.string(),\r\n   hcvRetreatmentAdverseEffect: yup.string(),\r\n   hcvRetreatmentHcvGenotype: yup.string(),\r\n\r\n\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: form3InitialValues,\r\n    onSubmit,\r\n    validationSchema: Form3ValidationSchema,\r\n  });\r\n   return { formik };\r\n};\r\n\r\nexport const useValidateFollowupFormValuesHook = (onSubmit) => {\r\n  const followupFormIntialValue = {\r\n    dateOfVisit: \"\",\r\n    weight: \"\",\r\n    height: \"\",\r\n    bmi: \"\",\r\n    bloodPressure: \"\",\r\n    hbsAgQuantification: \"\",\r\n    hbeAg: \"\",\r\n    hbvDna: \"\",\r\n\r\n    alt: \"\",\r\n    ast: \"\",\r\n    plt: \"\",\r\n    totalBilirubin: \"\",\r\n    directBilirubin: \"\",\r\n    albumin: \"\",\r\n    apriScore: \"\",\r\n    fib4: \"\",\r\n    prothrombinTime: \"\",\r\n    urea: \"\",\r\n    creatinine: \"\",\r\n    ultrasoundScan: \"\",\r\n    afp: \"\",\r\n    fibroscan: \"\",\r\n    ctScan: \"\",\r\n    ascites: \"\",\r\n    severityOfAscites: \"\",\r\n    gradeOfEncephalopathy: \"\",\r\n    childPughScore: \"\",\r\n    liverBiopsyStage: \"\",\r\n    stagingDateForLiverBiopsy: \"\",\r\n    diagnosis: \"\",\r\n    treatmentRegimen: \"\",\r\n    clinicalName: \"\",\r\n    nextAppointment: \"\",\r\n    remark: \"\",\r\n\r\n  };\r\n\r\n  const FollowupFormValidationSchema = yup.object({\r\n    dateOfVisit: yup.string(),\r\n    weight: yup.string(),\r\n    height: yup.string(),\r\n    bmi: yup.string(),\r\n    bloodPressure: yup.string(),\r\n    hbsAgQuantification: yup.string(),\r\n    hbeAg: yup.string(),\r\n    hbvDna: yup.string(),\r\n\r\n    alt: yup.string(),\r\n    ast: yup.string(),\r\n    plt: yup.string(),\r\n    totalBilirubin: yup.string(),\r\n    directBilirubin: yup.string(),\r\n    albumin: yup.string(),\r\n    apriScore: yup.string(),\r\n    fib4: yup.string(),\r\n    prothrombinTime: yup.string(),\r\n    urea: yup.string(),\r\n    creatinine: yup.string(),\r\n    ultrasoundScan: yup.string(),\r\n    afp: yup.string(),\r\n    fibroscan: yup.string(),\r\n    ctScan: yup.string(),\r\n    ascites: yup.string(),\r\n    severityOfAscites: yup.string(),\r\n    gradeOfEncephalopathy: yup.string(),\r\n    childPughScore: yup.string(),\r\n    liverBiopsyStage: yup.string(),\r\n    stagingDateForLiverBiopsy: yup.string(),\r\n    diagnosis: yup.string()\r\n\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: followupFormIntialValue,\r\n    onSubmit,\r\n    validationSchema: FollowupFormValidationSchema,\r\n  });\r\n   return { formik };;\r\n};\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Form } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm1ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { ArrowForward } from \"@material-ui/icons\";\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm1 = ({ setStep }) => {\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    console.log(values);\r\n    setStep(1);\r\n  };\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm1ValuesHook(onSubmitHandler);\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Demography\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hospitalNumber\">\r\n                            Hospital Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={formik.initialValues.hospitalNumber}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.hospitalNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"surname\">\r\n                            Surname <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"surname\"\r\n                            id=\"surname\"\r\n                            value={formik.initialValues.surname}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.surname !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.surname}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"otherName\">Other name </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"otherName\"\r\n                            id=\"otherName\"\r\n                            value={formik.initialValues.otherName}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.otherName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.otherName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"phone\">\r\n                            Phone <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"phone\"\r\n                            id=\"phone\"\r\n                            value={formik.initialValues.phone}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.phone !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.phone}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"residentialAddress\">\r\n                            Residential Address{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"residentialAddress\"\r\n                            id=\"residentialAddress\"\r\n                            value={formik.initialValues.residentialAddress}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.residentialAddress !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.residentialAddress}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"landmark\">Landmark </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"landmark\"\r\n                            id=\"landmark\"\r\n                            value={formik.initialValues.landmark}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.landmark !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.landmark}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"country\">\r\n                            Country <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"country\"\r\n                            id=\"country\"\r\n                            value={formik.initialValues.country}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.country !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.country}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"state\">\r\n                            State <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"state\"\r\n                            id=\"state\"\r\n                            value={formik.initialValues.state}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.state !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.state}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"lga\">LGA </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lga\"\r\n                            id=\"lga\"\r\n                            value={formik.initialValues.lga}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.lga !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.lga}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfBirth\">\r\n                            Date of birth\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"dateOfBirth\"\r\n                            id=\"dateOfBirth\"\r\n                            value={formik.initialValues.dateOfBirth}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.dateOfBirth !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.dateOfBirth}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"age\">\r\n                            Age <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"age\"\r\n                            id=\"age\"\r\n                            value={formik.initialValues.age}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.age !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.age}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"occupation\">Occupation</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"occupation\"\r\n                            id=\"occupation\"\r\n                            value={formik.initialValues.occupation}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.occupation !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.occupation}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"maritalStatus\">\r\n                            Marital status\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatus\"\r\n                            id=\"maritalStatus\"\r\n                            value={formik.initialValues.maritalStatus}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"single\">Single</option>\r\n                            <option value=\"married\">Married</option>\r\n                            <option value=\"divorced\">Divorced</option>\r\n                            <option value=\"seperated\">Seperated</option>\r\n                            <option value=\"cohabiting\">Cohabiting</option>\r\n                            <option value=\"widowed\">Widowed</option>\r\n                            </select>\r\n                          {formik.errors.maritalStatus !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.maritalStatus}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"education\">\r\n                            Education <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"education\"\r\n                            id=\"education\"\r\n                            value={formik.initialValues.education}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.education !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.education}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Enrollment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"careEntryPoint\">\r\n                          Care entry point\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"careEntryPoint\"\r\n                          id=\"careEntryPoint\"\r\n                          value={formik.initialValues.careEntryPoint}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.careEntryPoint !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.careEntryPoint}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"weight\">\r\n                          Weight <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"weight\"\r\n                          id=\"weight\"\r\n                          value={formik.initialValues.weight}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.weight !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.weight}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"height\">\r\n                          Height <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"height\"\r\n                          id=\"height\"\r\n                          value={formik.initialValues.height}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.height !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.height}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"bmi\">BMI </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"bmi\"\r\n                          id=\"bmi\"\r\n                          value={formik.initialValues.bmi}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.bmi !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.bmi}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"hbsAg\">\r\n                          Hepatitis B (HBsAg){\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"hbsAg\"\r\n                          id=\"hbsAg\"\r\n                          value={formik.initialValues.hbsAg}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.hbsAg !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.hbsAg}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"breastfeeding\">\r\n                          Breastfeeding <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"breastfeeding\"\r\n                          id=\"breastfeeding\"\r\n                          value={formik.initialValues.breastfeeding}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.breastfeeding !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.breastfeeding}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"historyOfUsingAbusedSubstance\">\r\n                          History of using abused substance{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"historyOfUsingAbusedSubstance\"\r\n                          id=\"historyOfUsingAbusedSubstance\"\r\n                          value={\r\n                            formik.initialValues.historyOfUsingAbusedSubstance\r\n                          }\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.historyOfUsingAbusedSubstance !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.historyOfUsingAbusedSubstance}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Screening\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"hbsAg\">\r\n                          Hepatitis B (HBsAg){\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"hbsAg\"\r\n                          id=\"hbsAg\"\r\n                          value={formik.initialValues.hbsAg}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.hbsAg !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.hbsAg}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfHepatitisBPositiveScreening\">\r\n                          Date of first Hep. B positive screening{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"dateOfHepatitisBPositiveScreening\"\r\n                          id=\"dateOfHepatitisBPositiveScreening\"\r\n                          value={\r\n                            formik.initialValues\r\n                              .dateOfHepatitisBPositiveScreening\r\n                          }\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.dateOfHepatitisBPositiveScreening !==\r\n                        \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.dateOfHepatitisBPositiveScreening}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"hcvAb\">Hepatitis C (HCVAb) </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"hcvAb\"\r\n                          id=\"hcvAb\"\r\n                          value={formik.initialValues.hcvAb}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.hcvAb !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.hcvAb}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm1;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, FormGroup, Input } from \"reactstrap\";\r\n\r\nconst SummaryTypeSelect = ({\r\n  setFormValues,\r\n  formValues: { select1Value, select2Value, select3Value },\r\n}) => {\r\n  return (\r\n    <div style={{ maxWidth: \"400px\" }}>\r\n      <Row className=\"d-flex justify-content-between\">\r\n        <Col>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"summary-type\"\r\n              id=\"summary-type\"\r\n              value={select1Value}\r\n              onChange={(event) => setFormValues(prevState => {\r\n                return { ...prevState, select1Value: event.target.value, select2Value: \"\" }\r\n              })}\r\n            >\r\n              <option value=\"\">Summary type</option>\r\n              <option value=\"Hepatitis B\">Hepatitis B</option>\r\n              <option value=\"Hepatitis C\">Hepatitis C</option>\r\n              <option value=\"CoInfection\">CoInfection</option>\r\n            </Input>\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        {select1Value !== \"\" && (\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select2\"\r\n                id=\"select2\"\r\n                value={select2Value}\r\n                onChange={(event) => setFormValues(prevState => {\r\n                  return { ...prevState, select2Value: event.target.value, select3Value: \"\" }\r\n                })}\r\n                disabled={select1Value === \"\"}\r\n              >\r\n                <option value=\"\">select type for {select1Value}</option>\r\n\r\n                {select1Value === \"Hepatitis B\" && (\r\n                  <>\r\n                    <option value=\"Diagnosis\">Diagnosis</option>\r\n                    <option value=\"Complications\">Complications</option>\r\n                    <option value=\"Treatment\">Treatment</option>\r\n                    <option value=\"Monitoring\">Monitoring</option>\r\n                    <option value=\"Mortality\">Mortality</option>\r\n                  </>\r\n                )}\r\n                {select1Value === \"Hepatitis C\" && (\r\n                  <>\r\n                    <option value=\"Screening/Diagnosis\">\r\n                      Screening/Diagnosis\r\n                    </option>\r\n                    <option value=\"HCV Complications\">HCV Complications</option>\r\n                    <option value=\"HCV Treatment\">HCV Treatment</option>\r\n                    <option value=\"HCV Treatment Effectiveness\">\r\n                      HCV Treatment Effectiveness\r\n                    </option>\r\n                    <option value=\"HCV Re-treatment\">HCV Re-treatment</option>\r\n                    <option value=\"HCV Related Mortality\">\r\n                      HCV Related Mortality\r\n                    </option>\r\n                  </>\r\n                )}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        )}\r\n\r\n\r\n        {select2Value !== \"\" && select1Value !== \"\" && (\r\n          <Col>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select3\"\r\n                id=\"select3\"\r\n                value={select3Value}\r\n                onChange={(event) => setFormValues(prevState => {\r\n                  return { ...prevState, select3Value: event.target.value }\r\n                })}\r\n                disabled={select2Value === \"\"}\r\n              >\r\n                <option value=\"\">\r\n                  Select type for {select1Value} {select2Value}\r\n                </option>\r\n                {select2Value === \"Diagnosis\" && (\r\n                  <>\r\n                    <option value=\"Reactive\">Reactive</option>\r\n                    <option value=\"Non Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Complications\" && (\r\n                  <>\r\n                    <option value=\"Fibrosis\">Fibrosis</option>\r\n                    <option value=\"Cirrhosis\">Cirrhosis</option>\r\n                    <option value=\"Hepatocellular Carcinoma\">\r\n                      Hepatocellular Carcinoma\r\n                    </option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Monitoring\" && (\r\n                  <>\r\n                    <option value=\"Monitoring Reactive\">Reactive</option>\r\n                    <option value=\"Monitoring Non Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Mortality\" && (\r\n                  <>\r\n                    <option value=\"Mortality Reactive\">Reactive</option>\r\n                    <option value=\"Mortality Reactive\">Non Reactive</option>\r\n                  </>\r\n                )}\r\n                {select2Value === \"Treatment\" && (\r\n                  <>\r\n                    <option value=\"HBV DNA <2000 IU/ml\">\r\n                      HBV DNA {\"<\"}2000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBV DNA >=2000 IU/ml\">\r\n                      HBV DNA {\">=\"}2000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBV DNA >=200000 IU/ml\">\r\n                      HBV DNA {\">=\"}200,000 IU/ml\r\n                    </option>\r\n                    <option value=\"HBegAg +ve\">HBegAg +ve</option>\r\n                  </>\r\n                )}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SummaryTypeSelect\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useValidateSummaryValuesHook = (onSubmit) => {\r\n  const reactiveFormInitialValues = {\r\n   \"maleNineAndUnder\": \"\",\r\n   \"maleTen2Fourteen\": \"\",\r\n   \"maleFifteenAndAbove\": \"\",\r\n   \"maleTotal\" : \"\",\r\n   \"femaleNineAndUnder\": \"\",\r\n   \"femaleTen2Fourteen\": \"\",\r\n   \"femaleFifteenAndAbove\": \"\",\r\n   \"femaleTotal\" : \"\",\r\n   \"specialPopulationPWID\" : \"\",\r\n   \"specialPopulationPW\" : \"\",\r\n  };\r\n\r\n  const ReactiveFormSchema = yup.object({\r\n    \"maleNineAndUnder\": yup.string(),\r\n    \"maleTen2Fourteen\": yup.string(),\r\n    \"maleFifteenAndAbove\": yup.string(),\r\n    \"maleTotal\" : yup.string(),\r\n    \"femaleNineAndUnder\": yup.string(),\r\n    \"femaleTen2Fourteen\": yup.string(),\r\n    \"femaleFifteenAndAbove\": yup.string(),\r\n    \"femaleTotal\" : yup.string(),\r\n    \"specialPopulationPWID\" : yup.string(),\r\n    \"specialPopulationPW\" : yup.string(),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: reactiveFormInitialValues,\r\n    onSubmit,\r\n    validationSchema: ReactiveFormSchema,\r\n  });\r\n   return { formik };;\r\n};","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Reactive = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Reactive\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reactive;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst NonReactive = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Non-Reactive\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NonReactive;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Fibrosis = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Fibrosis\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Fibrosis;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Cirrhosis = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Cirrhosis\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cirrhosis;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HepatocellularCarcinoma = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Hepatocellular Carcinoma\r\n                  </h5>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                option 2\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">10 - 14 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>\r\n                                    option 2\r\n                                </option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                              ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HepatocellularCarcinoma;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType1 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\"<\"} 2000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType1;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType2 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\">=\"}2000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType2;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType3 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBV DNA {\">=\"}200000 IU/ml\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType3;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { useValidateSummaryValuesHook } from \"../../../formSchemas/summaryFormsValidationSchema\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst HbvType4 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateSummaryValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    HBegAg +ve\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Men\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleNineAndUnder\">≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleNineAndUnder\"\r\n                                id=\"maleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleTen2Fourteen\"\r\n                                id=\"maleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.maleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"maleFifteenAndAbove\"\r\n                                id=\"maleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.maleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.maleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"maleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"maleTotal\"\r\n                                id=\"maleTotal\"\r\n                                value={formik.values.maleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.maleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.maleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Women\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleNineAndUnder\"> ≤ 9 years</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleNineAndUnder\"\r\n                                id=\"femaleNineAndUnder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleNineAndUnder}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleNineAndUnder !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleNineAndUnder}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTen2Fourteen\">\r\n                                10 - 14 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleTen2Fourteen\"\r\n                                id=\"femaleTen2Fourteen\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleTen2Fourteen}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                                <option value={\"\"}>option 3</option>\r\n                              </select>\r\n                              {formik.errors.femaleTen2Fourteen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTen2Fourteen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleFifteenAndAbove\">\r\n                                ≥ 15 years\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"femaleFifteenAndAbove\"\r\n                                id=\"femaleFifteenAndAbove\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.femaleFifteenAndAbove}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.femaleFifteenAndAbove !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleFifteenAndAbove}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"femaleTotal\"> Total</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"femaleTotal\"\r\n                                id=\"femaleTotal\"\r\n                                value={formik.values.femaleTotal}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.femaleTotal ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.femaleTotal}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Special Population\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPWID\">PWID</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPWID\"\r\n                                id=\"specialPopulationPWID\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPWID}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPWID !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPWID}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"specialPopulationPW\">PW</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"specialPopulationPW\"\r\n                                id=\"specialPopulationPW\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.specialPopulationPW}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"\"}>option 1</option>\r\n                                <option value={\"\"}>option 2</option>\r\n                              </select>\r\n                              {formik.errors.specialPopulationPW !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.specialPopulationPW}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HbvType4;\r\n","import React, { useState } from \"react\";\r\nimport SummaryTypeSelect from \"./SummaryTypeSelect/SummaryTypeSelect\";\r\nimport Reactive  from \"../Patient/ViralHepatitisSummaryForms/Reactive\";\r\nimport NonReactive from \"./ViralHepatitisSummaryForms/NonReactive\";\r\nimport Fibrosis from \"./ViralHepatitisSummaryForms/Fibrosis\";\r\nimport Cirrhosis from \"./ViralHepatitisSummaryForms/Cirrhosis\";\r\nimport HepatocellularCarcinoma from \"./ViralHepatitisSummaryForms/HepatocellularCarcinoma\";\r\nimport HbvType1 from \"./ViralHepatitisSummaryForms/HbvType1\";\r\nimport HbvType2 from \"./ViralHepatitisSummaryForms/HbvType2\";\r\nimport HbvType3 from \"./ViralHepatitisSummaryForms/HbvType3\";\r\nimport HbvType4 from \"./ViralHepatitisSummaryForms/HbvType4\";\r\n\r\nconst ViralHepatitisSummaryFormContainer = () => {\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    select1Value: \"\",\r\n    select2Value: \"\",\r\n    select3Value: \"\",\r\n});\r\n\r\nconst formMap = {\r\n    \"Reactive\" : <Reactive/>,\r\n    \"Non Reactive\" : <NonReactive/>,\r\n    \"Fibrosis\" : <Fibrosis/>,\r\n    \"Cirrhosis\" : <Cirrhosis/>,\r\n    \"Hepatocellular Carcinoma\" : <HepatocellularCarcinoma/>,\r\n    \"HBV DNA <2000 IU/ml\" : <HbvType1/>,\r\n    \"HBV DNA >=2000 IU/ml\" : <HbvType2/>,\r\n    \"HBV DNA >=200000 IU/ml\" : <HbvType3/>,\r\n    \"HBegAg +ve\" : <HbvType4/>,\r\n    \"Mortality Reactive\" : <div> Mortality Reactive</div>,\r\n    \"Mortality Reactive\" : <div> Mortality Reactive</div>,\r\n    \"Monitoring Reactive\" : <div>Monitoring Reactive</div>,\r\n    \"Monitoring Non Reactive\" : <div>Monitoring Non Reactive</div>,\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <SummaryTypeSelect formValues={formValues} setFormValues={setFormValues}/>\r\n      </div>\r\n\r\n      <div className=\"my-2\" style={{fontWeight: \"600\"}}>\r\n        <span>{formValues.select1Value && ` ${formValues.select1Value} `}</span>\r\n        <span>{formValues.select2Value && ` | ${formValues.select2Value } `}</span>\r\n        <span style={{color: \"#014d88\"}}>{formValues.select3Value && `| ${formValues.select3Value} `}</span>\r\n      </div>\r\n\r\n      <div>\r\n       {formMap[formValues.select3Value]}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisSummaryFormContainer;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList'\r\nimport PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nimport ViralHepatitis from \"./Patient/ViralHepatitisForms/Form1\"\r\nimport ViralHepatitisSummaryFormContainer from \"./Patient/ViralHepatitisSummaryFormContainer\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>Viral Hepatitis</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"List\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n                  <Tab eventKey=\"vaccinated\" title=\"Summary\">                   \r\n                    {/* <PatientVaccinatedLIst /> */}\r\n                   <ViralHepatitisSummaryFormContainer/>\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.phone!==null ? patientObj.phone :\"\"}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{patientObj.address!==null ? patientObj.address : \"\"} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    const loadVaccination = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    }\r\n    const loadIcu = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'icu'})\r\n    }\r\n    const loadAddmission = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    }\r\n    const onClickDischarge = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        //setActiveItem('history')\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>                  \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    console.log(props.records)\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Dosage Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n    console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>       \r\n            <br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Vaccination History \"\r\n              columns={[\r\n                { title: \"Vaccine\", field: \"vaccine\", filtering: false },\r\n                {\r\n                  title: \"Vaccine Date\",\r\n                  field: \"vaccineDate\",\r\n                },\r\n                \r\n                { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                { title: \"Location\", field: \"location\", filtering: false },      \r\n                { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ vacinationList.map((row) => ({\r\n                    vaccine: row.vaccineName,\r\n                    vaccineDate: row.vaccineDate,\r\n                    batchNumber: row.batchNumber,\r\n                    doseNumber: row.doseNumber,\r\n                    location: row.location,\r\n                    vaccinationFacility: row.vaccinationFacility,\r\n                    adverseEffect: row.adverseEffect,\r\n                    actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>\r\n                  \r\n                  }))}\r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { Fragment} from \"react\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >HEPATITIS /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Enrolement', 'Diagnosis', 'Treatment', \"Follow up\"];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return 'Enrolement';\r\n    case 1:\r\n      return 'Diagnosis';\r\n    case 2:\r\n      return 'Treatment';\r\n    default:\r\n      return 'Unknown stepIndex';\r\n  }\r\n}\r\n\r\nexport default function Steppers({activeStep}) {\r\n  \r\n  \r\n  const steps = getSteps();\r\n\r\n\r\n  return (\r\n    \r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    \r\n    \r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm2ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm2 = ({setStep}) => {\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    console.log(values)\r\n    setStep(2)\r\n}\r\nconst moveBack = () => {\r\n  window.scrollTo(0, 0);\r\n  setStep(0)\r\n}\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm2ValuesHook(onSubmitHandler);\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: true,\r\n    hepatitisCDropdown: true,\r\n    coInfectionDropdown: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Diagnosis\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis B\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvTestRequested\">\r\n                                Date HBV test requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvTestRequested\"\r\n                                id=\"dateHbvTestRequested\"\r\n                                value={formik.values.dateHbvTestRequested}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvTestRequested !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvTestRequested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvSampleCollected\">\r\n                                Date HBV sample Requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvSampleCollected\"\r\n                                id=\"dateHbvSampleCollected\"\r\n                                value={formik.values.dateHbvSampleCollected}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvSampleCollected !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvSampleCollected}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvDnaResultReported\">\r\n                                Date of HBV DNA result reported{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvDnaResultReported\"\r\n                                id=\"dateHbvDnaResultReported\"\r\n                                value={formik.values.dateHbvDnaResultReported}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvDnaResultReported !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvDnaResultReported}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-2 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                HBV DNA(UI/ml){\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"detected\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Detected\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"undetected\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Undetected\r\n                                </label>\r\n\r\n                                {formik.errors.hbvDna !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDna}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </div>\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hbvDna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hbvDnaValue\">\r\n                                  Input HBV DNA value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hbvDnaValue\"\r\n                                  id=\"hbvDnaValue\"\r\n                                  value={formik.values.hbvDnaValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.hbvDnaValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"landmark\">HBsAG Quantification</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbsAgQuantification\"\r\n                                id=\"hbsAgQuantification\"\r\n                                value={formik.values.hbsAgQuantification}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbsAgQuantification ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbsAgQuantification}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbeAg\">HbeAG</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbeAg\"\r\n                                id=\"hbeAg\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hbeAg}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hbeAg !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbeAg}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          \r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"antiHdv\">Anti-HDV</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"antiHdv\"\r\n                                id=\"antiHdv\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.antiHdv}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                                <option value={\"not done\"}>Not Done</option>\r\n                              </select>\r\n                              {formik.errors.antiHdv !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.antiHdv}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"treatmentEligible\">\r\n                                Treatment Eligible\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"treatmentEligible\"\r\n                                id=\"treatmentEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.treatmentEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"yes\"}>Yes</option>\r\n                                <option value={\"no\"}>No</option>\r\n                              </select>\r\n                              {formik.errors.treatmentEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.treatmentEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"pmtctEligible\">PMTCT Eligible</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"pmtctEligible\"\r\n                                id=\"pmtctEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pmtctEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.pmtctEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.pmtctEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4-12\">\r\n                            <FormGroup>\r\n                              <Label for=\"comment\">Comment</Label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                name=\"comment\"\r\n                                id=\"comment\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.comment}\r\n                                cols=\"50\"\r\n                                rows=\"30\"\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                  height: \"120px\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.comment !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.comment}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis C\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            coInfectionDropdown: !prevState.coInfectionDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.coInfectionDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.coInfectionDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRna\">HCV RNA (IU/ml)</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRna\"\r\n                                id=\"hcvRna\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRna}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"detected\"}>Detected</option>\r\n                                <option value={\"undetected\"}>Undetected</option>\r\n                              </select>\r\n                              {formik.errors.hcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hcvRna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hcvValue\">\r\n                                  Input HCV RNA Value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hcvValue\"\r\n                                  id=\"hcvValue\"\r\n                                  value={formik.values.hcvValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n                                {formik.errors.hcvValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hcvValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hepatitisCoInfection\">\r\n                                Hepatitis Coinfection\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hepatitisCoInfection\"\r\n                                id=\"hepatitisCoInfection\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hepatitisCoInfection}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                multiple\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"hbv/hcv\"}>HBV/HCV</option>\r\n                                <option value={\"hcv/hiv\"}>HCV/HIV</option>\r\n                                <option value={\"hbv/hdv\"}>HBV/HDV</option>\r\n                                <option value={\"hbv/hcd/hiv\"}>\r\n                                  HBV/HCD/HIV\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hepatitisCoInfection !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hepatitisCoInfection}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"commobidities\">\r\n                                Commobidities{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"commobidities\"\r\n                                id=\"commobidities\"\r\n                                value={formik.values.commobidities}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.commobidities !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.commobidities}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pst\">PST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"pst\"\r\n                          id=\"pst\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.pst}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.pst !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pst}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.pst === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pstValue\">\r\n                            Input PST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pstValue\"\r\n                            id=\"pstValue\"\r\n                            value={formik.values.pstValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pstValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pstValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBilirubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBilirubin\"\r\n                          id=\"totalBilirubin\"\r\n                          value={formik.values.totalBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBilirubin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBilirubin\"\r\n                          id=\"directBilirubin\"\r\n                          value={formik.values.directBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTime\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTime\"\r\n                          id=\"prothrombinTime\"\r\n                          value={formik.values.prothrombinTime}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTime !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTime}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">\r\n                          Ultrasound scan (μmol/L)\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"acites\">Acites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acites\"\r\n                          id=\"acites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.acites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.acites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.acites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik.values.ascites === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"severityOfAscites\">\r\n                            Severity of ascites\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"severityOfAscites\"\r\n                            id=\"severityOfAscites\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.severityOfAscites}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"mild\"}>Mild</option>\r\n                            <option value={\"moderate\"}>Moderate</option>\r\n                            <option value={\"massive/gross\"}>\r\n                              Massive/Gross\r\n                            </option>\r\n                          </select>\r\n                          {formik.errors.severityOfAscites !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.severityOfAscites}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"F-0\"}> No Fibrosis</option>\r\n                          <option value={\"F-1\"}>Mild Fibrosis</option>\r\n                          <option value={\"F-2\"}>Moderate Fibrosis</option>\r\n                          <option value={\"F-3\"}> Severe Fibrosis</option>\r\n                          <option value={\"F-4\"}>Cirrhosis</option>\r\n                          <option value={\"not done\"}>Not done</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis\"\r\n                          id=\"diagnosis\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"no fibrosis\"}> No Fibrosis</option>\r\n                          <option value={\"fibrosis\"}>Fibrosis</option>\r\n                          <option value={\"cirrhosis\"}>Cirrhosis</option>\r\n                          <option value={\"hcc\"}>HCC</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.diagnosis !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-between\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={moveBack}\r\n                  className={classes.button}\r\n                  startIcon={<ArrowBackIcon />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n                </MatButton>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm2;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm3ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm3 = ({setStep}) => {\r\n  const onSubmitHandler = (values) => {\r\n    window.scrollTo(0, 0);\r\n    console.log(values)\r\n    setStep(3)\r\n}\r\nconst moveBack = () => {\r\n  window.scrollTo(0, 0);\r\n  setStep(1)\r\n}\r\n\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm3ValuesHook(onSubmitHandler);\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hbvTreatmentRegimenSwitch: true,\r\n    hbvTreatmentReasonforTreatment: true,\r\n    hcvTreatmentRegimenSwitch: true,\r\n    hcvTreatmentRegimenHcvRetreatment: true,\r\n    hcvTreatmentSvr12Testing: true,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Hepatitis B Treatment\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <div className=\"card-body\">\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvTreatmentExperience\">\r\n                              Treatment experience\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hbvTreatmentExperience\"\r\n                              id=\"hbvTreatmentExperience\"\r\n                              value={formik.values.hbvTreatmentExperience}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"yes\">Yes</option>\r\n                              <option value=\"no\">No</option>\r\n                            </select>\r\n                            {formik.errors.hbvTreatmentExperience !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvTreatmentExperience}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {formik.values.hbvTreatmentExperience === \"yes\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvPastTreatmentRegimen\">\r\n                                Past treatment regime\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvPastTreatmentRegimen\"\r\n                                id=\"hbvPastTreatmentRegimen\"\r\n                                value={formik.values.hbvPastTreatmentRegimen}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvPastTreatmentRegimen !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvPastTreatmentRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvNewRegimen\">New regime</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"text\"\r\n                              name=\"hbvNewRegimen\"\r\n                              id=\"hbvNewRegimen\"\r\n                              value={formik.values.hbvNewRegimen}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {formik.errors.hbvNewRegimen !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvNewRegimen}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {formik.values.hbvNewRegimen !== \"\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvDateStarted\">Date started</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"hbvDateStarted\"\r\n                                id=\"hbvDateStarted\"\r\n                                value={formik.values.hbvDateStarted}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvDateStarted !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hbvHistoryOfAdverseEffect\">\r\n                              History of adverse effect\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hbvHistoryOfAdverseEffect\"\r\n                              id=\"hbvHistoryOfAdverseEffect\"\r\n                              value={formik.values.hbvHistoryOfAdverseEffect}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"yes\">Yes</option>\r\n                              <option value=\"no\">No</option>\r\n                            </select>\r\n                            {formik.errors.hbvHistoryOfAdverseEffect !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hbvHistoryOfAdverseEffect}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Regimen Switch\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hbvTreatmentRegimenSwitch:\r\n                              !prevState.hbvTreatmentRegimenSwitch,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hbvTreatmentRegimenSwitch}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchNewRegimen\">\r\n                                New Regimen\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvRegimeSwitchNewRegimen\"\r\n                                id=\"hbvRegimeSwitchNewRegimen\"\r\n                                value={formik.values.hbvRegimeSwitchNewRegimen}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvRegimeSwitchNewRegimen !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvRegimeSwitchNewRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchDateStarted\">\r\n                                Date Started{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"hbvRegimeSwitchDateStarted\"\r\n                                id=\"hbvRegimeSwitchDateStarted\"\r\n                                value={formik.values.hbvRegimeSwitchDateStarted}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvRegimeSwitchDateStarted !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvRegimeSwitchDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchHistoryOfAdverseEffect\">\r\n                                Adverse effect reported\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbvRegimeSwitchHistoryOfAdverseEffect\"\r\n                                id=\"hbvRegimeSwitchHistoryOfAdverseEffect\"\r\n                                value={\r\n                                  formik.values\r\n                                    .hbvRegimeSwitchHistoryOfAdverseEffect\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"yes\">Yes</option>\r\n                                <option value=\"no\">No</option>\r\n                              </select>\r\n                              {formik.errors\r\n                                .hbvRegimeSwitchHistoryOfAdverseEffect !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hbvRegimeSwitchHistoryOfAdverseEffect\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchReason\">\r\n                                Reason for switch\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbvRegimeSwitchReason\"\r\n                                id=\"hbvRegimeSwitchReason\"\r\n                                value={formik.values.hbvRegimeSwitchReason}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvRegimeSwitchReason !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvRegimeSwitchReason}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvRegimeSwitchDateStopped\">\r\n                                Date Stopped{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"hbvRegimeSwitchDateStopped\"\r\n                                id=\"hbvRegimeSwitchDateStopped\"\r\n                                value={formik.values.hbvRegimeSwitchDateStopped}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbvRegimeSwitchDateStopped !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvRegimeSwitchDateStopped}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Reason for treatment\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hbvTreatmentReasonforTreatment:\r\n                              !prevState.hbvTreatmentReasonforTreatment,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse\r\n                      in={isDropdownsOpen.hbvTreatmentReasonforTreatment}\r\n                    >\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvReasonForTreatmentEligibility\">\r\n                                Reasons for treatment\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbvReasonForTreatmentEligibility\"\r\n                                id=\"hbvReasonForTreatmentEligibility\"\r\n                                onChange={formik.handleChange}\r\n                                value={\r\n                                  formik.values.hbvReasonForTreatmentEligibility\r\n                                }\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                multiple\r\n                              >\r\n                                <option value={\"treatment eligible\"}>\r\n                                  Treatment Eligible\r\n                                </option>\r\n                                <option value={\"hbv pmtct\"}>HBV PMTCT</option>\r\n                              </select>\r\n                              {formik.errors\r\n                                .hbvReasonForTreatmentEligibility !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hbvReasonForTreatmentEligibility\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbvReasonsForTreatmentComment\">\r\n                                Comment\r\n                              </Label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                name=\"hbvReasonsForTreatmentComment\"\r\n                                id=\"hbvReasonsForTreatmentComment\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={\r\n                                  formik.values.hbvReasonsForTreatmentComment\r\n                                }\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                  height: \"80px\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hbvReasonsForTreatmentComment !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbvReasonsForTreatmentComment}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Hepatitis C Treatment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <div className=\"card-body\">\r\n                    <div\r\n                      className=\"basic-form\"\r\n                      style={{ padding: \"0 50px 0 50px\" }}\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvTreatmentExperience\">\r\n                              Treatment experience\r\n                              <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hcvTreatmentExperience\"\r\n                              id=\"hcvTreatmentExperience\"\r\n                              value={formik.values.hcvTreatmentExperience}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"yes\">Yes</option>\r\n                              <option value=\"no\">No</option>\r\n                            </select>\r\n                            {formik.errors.hcvTreatmentExperience !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvTreatmentExperience}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        {formik.values.hcvTreatmentExperience === \"yes\" && (\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvPastTreatmentExperience\">\r\n                                Past treatment experience\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hcvPastTreatmentExperience\"\r\n                                id=\"hcvPastTreatmentExperience\"\r\n                                value={formik.values.hcvPastTreatmentExperience}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hcvPastTreatmentExperience !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvPastTreatmentExperience}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvDateStarted\">Date started</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hcvDateStarted\"\r\n                              id=\"hcvDateStarted\"\r\n                              value={formik.values.hcvDateStarted}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {formik.errors.hcvDateStarted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvDateStarted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvDateCompleted\">Date completed</Label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"date\"\r\n                              name=\"hcvDateCompleted\"\r\n                              id=\"hcvDateCompleted\"\r\n                              value={formik.values.hcvDateCompleted}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            />\r\n                            {formik.errors.hcvDateCompleted !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvDateCompleted}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvPrescribedDuration\">\r\n                              Prescribed duration\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvPrescribedDuration\"\r\n                              id=\"hcvPrescribedDuration\"\r\n                              value={formik.values.hcvPrescribedDuration}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"8 weeks\">8 weeks</option>\r\n                              <option value=\"12 weeks\">12 weeks</option>\r\n                              <option value=\"24 weeks\">24 weeks</option>\r\n                            </select>\r\n                            {formik.errors.hcvPrescribedDuration !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvPrescribedDuration}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                          <FormGroup>\r\n                            <Label for=\"hcvAdverseEventReported\">\r\n                              Adverse Effect reported\r\n                            </Label>\r\n                            <select\r\n                              className=\"form-control\"\r\n                              name=\"hcvAdverseEventReported\"\r\n                              id=\"hcvAdverseEventReported\"\r\n                              value={formik.values.hcvAdverseEventReported}\r\n                              onChange={formik.handleChange}\r\n                              onBlur={formik.handleBlur}\r\n                              style={{\r\n                                border: \"1px solid #014D88\",\r\n                                borderRadius: \"0.2rem\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"yes\">Yes</option>\r\n                              <option value=\"no\">12 weeks</option>\r\n                            </select>\r\n                            {formik.errors.hcvAdverseEventReported !== \"\" ? (\r\n                              <span className={classes.error}>\r\n                                {formik.errors.hcvAdverseEventReported}\r\n                              </span>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Regimen Switch\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hbvTreatmentRegimenSwitch:\r\n                              !prevState.hbvTreatmentRegimenSwitch,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hbvTreatmentRegimenSwitch}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hbvTreatmentRegimenSwitch}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRegimeSwitchNewRegimen\">\r\n                                New regime\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hcvRegimeSwitchNewRegimen\"\r\n                                id=\"hcvRegimeSwitchNewRegimen\"\r\n                                value={formik.values.hcvRegimeSwitchNewRegimen}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hcvRegimeSwitchNewRegimen !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRegimeSwitchNewRegimen}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRegimeSwitchDateStarted\">\r\n                                Date started\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"hcvRegimeSwitchDateStarted\"\r\n                                id=\"hcvRegimeSwitchDateStarted\"\r\n                                value={formik.values.hcvRegimeSwitchDateStarted}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hcvRegimeSwitchDateStarted !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRegimeSwitchDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRegimeSwitchDateStopped\">\r\n                                Date stopped\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"hcvRegimeSwitchDateStopped\"\r\n                                id=\"hcvRegimeSwitchDateStopped\"\r\n                                value={formik.values.hcvRegimeSwitchDateStopped}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hcvRegimeSwitchDateStopped !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRegimeSwitchDateStopped}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRegimeSwitchPrescribedDuration\">\r\n                                Prescribed duration\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRegimeSwitchPrescribedDuration\"\r\n                                id=\"hcvRegimeSwitchPrescribedDuration\"\r\n                                value={\r\n                                  formik.values\r\n                                    .hcvRegimeSwitchPrescribedDuration\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"8 weeks\">8 weeks</option>\r\n                                <option value=\"12 weeks\">12 weeks</option>\r\n                                <option value=\"24 weeks\">24 weeks</option>\r\n                              </select>\r\n                              {formik.errors\r\n                                .hcvRegimeSwitchPrescribedDuration !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hcvRegimeSwitchPrescribedDuration\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRegimeSwitchHistoryOfAdverseEffect\">\r\n                                Adverse effect\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hcvRegimeSwitchHistoryOfAdverseEffect\"\r\n                                id=\"hcvRegimeSwitchHistoryOfAdverseEffect\"\r\n                                value={\r\n                                  formik.values\r\n                                    .hcvRegimeSwitchHistoryOfAdverseEffect\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"yes\">Yes</option>\r\n                                <option value=\"no\">No</option>\r\n                              </select>\r\n\r\n                              {formik.errors\r\n                                .hcvRegimeSwitchHistoryOfAdverseEffect !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hcvRegimeSwitchHistoryOfAdverseEffect\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      SVR 12 Testing\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hcvTreatmentSvr12Testing:\r\n                              !prevState.hcvTreatmentSvr12Testing,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hcvTreatmentSvr12Testing}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hcvTreatmentSvr12Testing}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingDateStarted\">\r\n                                Date tested\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingDateStarted\"\r\n                                id=\"svr12TestingDateStarted\"\r\n                                type=\"date\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.svr12TestingDateStarted}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.svr12TestingDateStarted !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRna\">\r\n                                HCV RNA <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRna\"\r\n                                id=\"svr12TestingHcvRna\"\r\n                                value={formik.values.svr12TestingHcvRna}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"detected\">Detected</option>\r\n                                <option value=\"undetected\">Undetected</option>\r\n                              </select>\r\n                              {formik.errors.svr12TestingHcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingHcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          {formik.values.svr12TestingHcvRna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"svr12TestingHcvRnaValue\">\r\n                                  Input HCV RNA value\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  name=\"svr12TestingHcvRnaValue\"\r\n                                  id=\"svr12TestingHcvRnaValue\"\r\n                                  type=\"text\"\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  value={formik.values.svr12TestingHcvRnaValue}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.svr12TestingHcvRnaValue !==\r\n                                \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.svr12TestingHcvRnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12TestingHcvRnaValue\">\r\n                                Input HCV RNA value\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12TestingHcvRnaValue\"\r\n                                id=\"svr12TestingHcvRnaValue\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.svr12TestingHcvRnaValue}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.svr12TestingHcvRnaValue !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12TestingHcvRnaValue}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12RetreatmentDateTested\">\r\n                                Retreatment date tested\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"svr12RetreatmentDateTested\"\r\n                                id=\"svr12RetreatmentDateTested\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.svr12RetreatmentDateTested}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                type=\"date\"\r\n                              />\r\n\r\n                              {formik.errors.svr12RetreatmentDateTested !==\r\n                              \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12RetreatmentDateTested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"svr12RetreatmentHcvRna\">\r\n                                Retreatment HCV RNA(IU/ml)\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"svr12RetreatmentHcvRna\"\r\n                                id=\"svr12RetreatmentHcvRna\"\r\n                                value={formik.values.svr12RetreatmentHcvRna}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"detected\">Detected</option>\r\n                                <option value=\"undetected\">Undetected</option>\r\n                              </select>\r\n                              {formik.errors.svr12RetreatmentHcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.svr12RetreatmentHcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          {formik.values.svr12RetreatmentHcvRna ===\r\n                            \"detetcted\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"svr12RetreatmentHcvRnaValue\">\r\n                                  Input Retreatment HCV RNA value(IU/ml)\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"svr12RetreatmentHcvRnaValue\"\r\n                                  id=\"svr12RetreatmentHcvRnaValue\"\r\n                                  value={\r\n                                    formik.values.svr12RetreatmentHcvRnaValue\r\n                                  }\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.svr12RetreatmentHcvRnaValue !==\r\n                                \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.svr12RetreatmentHcvRnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      HCV Retreatment\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hcvTreatmentRegimenHcvRetreatment:\r\n                              !prevState.hcvTreatmentRegimenHcvRetreatment,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={\r\n                        isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment\r\n                      }\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse\r\n                      in={isDropdownsOpen.hcvTreatmentRegimenHcvRetreatment}\r\n                    >\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentNewRegime\">\r\n                                New regime\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentNewRegime\"\r\n                                id=\"hcvRetreatmentNewRegime\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRetreatmentNewRegime}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hcvRetreatmentNewRegime !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentNewRegime}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentPrescribedDuration\">\r\n                                Prescribed Duration\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentPrescribedDuration\"\r\n                                id=\"hcvRetreatmentPrescribedDuration\"\r\n                                value={\r\n                                  formik.values.hcvRetreatmentPrescribedDuration\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"8 weeks\">8 weeks</option>\r\n                                <option value=\"12 weeks\">12 weeks</option>\r\n                                <option value=\"24 weeks\">24 weeks</option>\r\n                              </select>\r\n                              {formik.errors\r\n                                .hcvRetreatmentPrescribedDuration !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hcvRetreatmentPrescribedDuration\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                         \r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentDateStarted\">\r\n                               Date started\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentDateStarted\"\r\n                                id=\"hcvRetreatmentDateStarted\"\r\n                                type=\"date\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRetreatmentDateStarted}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hcvRetreatmentDateStarted !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentDateStarted}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentDateStopped\">\r\n                               Date stopped\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentDateStopped\"\r\n                                id=\"hcvRetreatmentDateStopped\"\r\n                                type=\"date\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRetreatmentDateStopped}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hcvRetreatmentDateStopped !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentDateStopped}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentAdverseEffect\">\r\n                                Adverse effect\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentAdverseEffect\"\r\n                                id=\"hcvRetreatmentAdverseEffect\"\r\n                                value={\r\n                                  formik.values.hcvRetreatmentAdverseEffect\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"yes\">Yes</option>\r\n                                <option value=\"no\">No</option>\r\n                                \r\n                              </select>\r\n                              {formik.errors\r\n                                .hcvRetreatmentAdverseEffect !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {\r\n                                    formik.errors\r\n                                      .hcvRetreatmentAdverseEffect\r\n                                  }\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRetreatmentHcvGenotype\">\r\n                                HCV Genotype\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                name=\"hcvRetreatmentHcvGenotype\"\r\n                                id=\"hcvRetreatmentHcvGenotype\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRetreatmentHcvGenotype}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n\r\n                              {formik.errors.hcvRetreatmentHcvGenotype !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRetreatmentHcvGenotype}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-between\">\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={moveBack}\r\n                  className={classes.button}\r\n                  startIcon={<ArrowBackIcon />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n                </MatButton>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm3;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form, InputGroup } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateForm2ValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { Collapse, IconButton } from \"@material-ui/core\";\r\nimport { ArrowForward, ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ViralHepatitisForm4 = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateForm2ValuesHook();\r\n  const [isDropdownsOpen, setIsDropdownsOpen] = useState({\r\n    hepatitisBDropdown: false,\r\n    hepatitisCDropdown: false,\r\n    coInfectionDropdown: false,\r\n  });\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Diagnosis\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis B\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisBDropdown: !prevState.hepatitisBDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisBDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvTestRequested\">\r\n                                Date HBV test requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvTestRequested\"\r\n                                id=\"dateHbvTestRequested\"\r\n                                value={formik.values.dateHbvTestRequested}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvTestRequested !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvTestRequested}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvSampleCollected\">\r\n                                Date HBV sample Requested{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvSampleCollected\"\r\n                                id=\"dateHbvSampleCollected\"\r\n                                value={formik.values.dateHbvSampleCollected}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvSampleCollected !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvSampleCollected}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"dateHbvDnaResultReported\">\r\n                                Date of HBV DNA result reported{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateHbvDnaResultReported\"\r\n                                id=\"dateHbvDnaResultReported\"\r\n                                value={formik.values.dateHbvDnaResultReported}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.dateHbvDnaResultReported !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.dateHbvDnaResultReported}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-2 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label>\r\n                                HBV DNA(UI/ml){\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>\r\n                              </Label>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"detected\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Detected\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"radio\">\r\n                                <label>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    value=\"undetected\"\r\n                                    name=\"hbvDna\"\r\n                                    onBlur={formik.handleBlur}\r\n                                    onChange={formik.handleChange}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                  />{\" \"}\r\n                                  Undetected\r\n                                </label>\r\n\r\n                                {formik.errors.hbvDna !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDna}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </div>\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hbvDna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hbvDnaValue\">\r\n                                  Input HBV DNA value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hbvDnaValue\"\r\n                                  id=\"hbvDnaValue\"\r\n                                  value={formik.values.hbvDnaValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n\r\n                                {formik.errors.hbvDnaValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hbvDnaValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"landmark\">HBsAG Quantification</Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"hbsAgQuantification\"\r\n                                id=\"hbsAgQuantification\"\r\n                                value={formik.values.hbsAgQuantification}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.hbsAgQuantification ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbsAgQuantification}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hbeAg\">HbeAG</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hbeAg\"\r\n                                id=\"hbeAg\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hbeAg}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hbeAg !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hbeAg}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"antiHdv\">Anti-HDV</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"antiHdv\"\r\n                                id=\"antiHdv\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.antiHdv}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                                <option value={\"not done\"}>Not Done</option>\r\n                              </select>\r\n                              {formik.errors.antiHdv !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.antiHdv}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"treatmentEligible\">\r\n                                Treatment Eligible\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"treatmentEligible\"\r\n                                id=\"treatmentEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.treatmentEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"yes\"}>Yes</option>\r\n                                <option value={\"no\"}>No</option>\r\n                              </select>\r\n                              {formik.errors.treatmentEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.treatmentEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"pmtctEligible\">PMTCT Eligible</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"pmtctEligible\"\r\n                                id=\"pmtctEligible\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pmtctEligible}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"reactive\"}>Reactive</option>\r\n                                <option value={\"non-reactive\"}>\r\n                                  Non Reactive\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.pmtctEligible !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.pmtctEligible}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4-12\">\r\n                            <FormGroup>\r\n                              <Label for=\"comment\">Comment</Label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                name=\"comment\"\r\n                                id=\"comment\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.comment}\r\n                                cols=\"50\"\r\n                                rows=\"30\"\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                  height: \"120px\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.comment !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.comment}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#d8f6ff\",\r\n                      width: \"95%\",\r\n                      margin: \"auto\",\r\n                      marginTop: \"5rem\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <p\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"600\",\r\n                        marginLeft: \"10px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Hepatitis C\r\n                    </p>\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setIsDropdownsOpen((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            hepatitisCDropdown: !prevState.hepatitisCDropdown,\r\n                          };\r\n                        })\r\n                      }\r\n                      aria-expanded={isDropdownsOpen.hepatitisBDropdown}\r\n                      aria-label=\"Expand\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <Collapse in={isDropdownsOpen.hepatitisCDropdown}>\r\n                      <div\r\n                        className=\"basic-form\"\r\n                        style={{ padding: \"0 50px 0 50px\" }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hcvRna\">HCV RNA (IU/ml)</Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hcvRna\"\r\n                                id=\"hcvRna\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.hcvRna}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              >\r\n                                <option value={\"\"}>select</option>\r\n                                <option value={\"detected\"}>Detected</option>\r\n                                <option value={\"undetected\"}>Undetected</option>\r\n                              </select>\r\n                              {formik.errors.hcvRna !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hcvRna}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                          {formik.values.hcvRna === \"detected\" && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                              <FormGroup>\r\n                                <Label for=\"hcvValue\">\r\n                                  Input HCV RNA Value{\" \"}\r\n                                  <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                                </Label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  type=\"text\"\r\n                                  name=\"hcvValue\"\r\n                                  id=\"hcvValue\"\r\n                                  value={formik.values.hcvValue}\r\n                                  onChange={formik.handleChange}\r\n                                  onBlur={formik.handleBlur}\r\n                                  style={{\r\n                                    border: \"1px solid #014D88\",\r\n                                    borderRadius: \"0.2rem\",\r\n                                  }}\r\n                                />\r\n                                {formik.errors.hcvValue !== \"\" ? (\r\n                                  <span className={classes.error}>\r\n                                    {formik.errors.hcvValue}\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </FormGroup>\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"hepatitisCoInfection\">\r\n                                Hepatitis Coinfection\r\n                              </Label>\r\n                              <select\r\n                                className=\"form-control\"\r\n                                name=\"hepatitisCoInfection\"\r\n                                id=\"hepatitisCoInfection\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.hepatitisCoInfection}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                                multiple\r\n                              >\r\n                                <option value={\"\"}>Select</option>\r\n                                <option value={\"hbv/hcv\"}>HBV/HCV</option>\r\n                                <option value={\"hcv/hiv\"}>HCV/HIV</option>\r\n                                <option value={\"hbv/hdv\"}>HBV/HDV</option>\r\n                                <option value={\"hbv/hcd/hiv\"}>\r\n                                  HBV/HCD/HIV\r\n                                </option>\r\n                              </select>\r\n                              {formik.errors.hepatitisCoInfection !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.hepatitisCoInfection}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                              <Label for=\"commobidities\">\r\n                                Commobidities{\" \"}\r\n                                <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                              </Label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"commobidities\"\r\n                                id=\"commobidities\"\r\n                                value={formik.values.commobidities}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.commobidities !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.commobidities}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Collapse>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"pst\">PST</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"pst\"\r\n                          id=\"pst\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.pst}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.pst !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.pst}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.pst === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pstValue\">\r\n                            Input PST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pstValue\"\r\n                            id=\"pstValue\"\r\n                            value={formik.values.pstValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pstValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pstValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBilirubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBilirubin\"\r\n                          id=\"totalBilirubin\"\r\n                          value={formik.values.totalBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBilirubin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBilirubin\"\r\n                          id=\"directBilirubin\"\r\n                          value={formik.values.directBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTime\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTime\"\r\n                          id=\"prothrombinTime\"\r\n                          value={formik.values.prothrombinTime}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTime !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTime}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">\r\n                          Ultrasound scan (μmol/L)\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"acites\">Acites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acites\"\r\n                          id=\"acites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.acites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.acites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.acites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik.values.ascites === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"severityOfAscites\">\r\n                            Severity of ascites\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"severityOfAscites\"\r\n                            id=\"severityOfAscites\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.severityOfAscites}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"mild\"}>Mild</option>\r\n                            <option value={\"moderate\"}>Moderate</option>\r\n                            <option value={\"massive/gross\"}>\r\n                              Massive/Gross\r\n                            </option>\r\n                          </select>\r\n                          {formik.errors.severityOfAscites !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.severityOfAscites}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"F-0\"}> No Fibrosis</option>\r\n                          <option value={\"F-1\"}>Mild Fibrosis</option>\r\n                          <option value={\"F-2\"}>Moderate Fibrosis</option>\r\n                          <option value={\"F-3\"}> Severe Fibrosis</option>\r\n                          <option value={\"F-4\"}>Cirrhosis</option>\r\n                          <option value={\"not done\"}>Not done</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis\"\r\n                          id=\"diagnosis\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"no fibrosis\"}> No Fibrosis</option>\r\n                          <option value={\"fibrosis\"}>Fibrosis</option>\r\n                          <option value={\"cirrhosis\"}>Cirrhosis</option>\r\n                          <option value={\"hcc\"}>HCC</option>\r\n                    \r\n                        </select>\r\n                        {formik.errors.diagnosis !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {false ? <Spinner /> : \"\"}\r\n              <br />\r\n              <div className=\"d-flex justify-content-between\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<ArrowBackIcon />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Previous</span>\r\n                </MatButton>\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Next</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViralHepatitisForm4;\r\n","import React from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Form } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../patient.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useValidateFollowupFormValuesHook } from \"../../../formSchemas/form1ValidationSchema\";\r\nimport { ArrowForward } from \"@material-ui/icons\";\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst FollowupForm = () => {\r\n  const classes = useStyles();\r\n  const { formik } = useValidateFollowupFormValuesHook();\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Preliminary\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfVisit\">\r\n                            Date of visit <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfVisit\"\r\n                            id=\"dateOfVisit\"\r\n                            value={formik.initialValues.dateOfVisit}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.dateOfVisit !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.dateOfVisit}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"bloodPressure\">\r\n                            Blood pressure (mmHg)<span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"bloodPressure\"\r\n                            id=\"bloodPressure\"\r\n                            value={formik.initialValues.bloodPressure}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.bloodPressure !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.bloodPressure}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"weight\">\r\n                            Weight <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"weight\"\r\n                            id=\"weight\"\r\n                            value={formik.initialValues.weight}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.weight !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.weight}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"height\">\r\n                            Height <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"height\"\r\n                            id=\"height\"\r\n                            value={formik.initialValues.height}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.height !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.height}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"bmi\">BMI </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"bmi\"\r\n                            id=\"bmi\"\r\n                            value={formik.initialValues.bmi}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.bmi !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.bmi}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbeAg\">HbeAG</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hbeAg\"\r\n                            id=\"hbeAg\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.hbeAg}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"reactive\"}>Reactive</option>\r\n                            <option value={\"non-reactive\"}>Non Reactive</option>\r\n                          </select>\r\n                          {formik.errors.hbeAg !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbeAg}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"hbvDna\">HBV DNA (IU/mL)</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"hbvDna\"\r\n                            id=\"hbvDna\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.hbvDna}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            <option value={\"detected\"}>Detected</option>\r\n                            <option value={\"undetected\"}>Undetected</option>\r\n                          </select>\r\n                          {formik.errors.hbvDna !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbvDna}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"landmark\">HBsAG Quantification</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hbsAgQuantification\"\r\n                            id=\"hbsAgQuantification\"\r\n                            value={formik.values.hbsAgQuantification}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.hbsAgQuantification ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.hbsAgQuantification}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Clinical Parameters\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ast\">AST (UI/mL)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"ast\"\r\n                          id=\"ast\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.ast}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.ast !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ast}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"alt\">ALT (UI/mL)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"alt\"\r\n                          id=\"alt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.alt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.alt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.alt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"plt\">PLT (mm3)</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"plt\"\r\n                          id=\"plt\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.plt}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.plt !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.plt}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {formik.values.ast === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"astValue\">\r\n                            Input AST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"astValue\"\r\n                            id=\"astValue\"\r\n                            value={formik.values.astValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.astValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.astValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.alt === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"altValue\">\r\n                            Input ALT value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"altValue\"\r\n                            id=\"altValue\"\r\n                            value={formik.values.altValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.altValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.altValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    {formik.values.pst === \"yes\" && (\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"pstValue\">\r\n                            Input PST value{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"pstValue\"\r\n                            id=\"pstValue\"\r\n                            value={formik.values.pstValue}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik.errors.pstValue !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {formik.errors.pstValue}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"totalBilirubin\">\r\n                          Total Bilirubin{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"totalBilirubin\"\r\n                          id=\"totalBilirubin\"\r\n                          value={formik.values.totalBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.totalBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.totalBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"albumin\">\r\n                          Albumin <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"albumin\"\r\n                          id=\"albumin\"\r\n                          value={formik.values.albumin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.albumin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.albumin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"directBilirubin\">Direct Bilirubin </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"directBilirubin\"\r\n                          id=\"directBilirubin\"\r\n                          value={formik.values.directBilirubin}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.directBilirubin !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.directBilirubin}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"apriScore\">APRI score </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"apriScore\"\r\n                          id=\"apriScore\"\r\n                          value={formik.values.apriScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.apriScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.apriScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fib4\">FIB-4</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fib4\"\r\n                          id=\"fib4\"\r\n                          value={formik.values.fib4}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fib4 !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fib4}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"prothrombinTime\">\r\n                          Prothrombin time/INR\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"prothrombinTime\"\r\n                          id=\"prothrombinTime\"\r\n                          value={formik.values.prothrombinTime}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.prothrombinTime !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.prothrombinTime}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"urea\">Urea (mg/dl)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"urea\"\r\n                          id=\"urea\"\r\n                          value={formik.values.urea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.urea !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.urea}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">Creatinine (μmol/L)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"creatinine\"\r\n                          id=\"creatinine\"\r\n                          value={formik.values.creatinine}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.creatinine !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.creatinine}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"creatinine\">AFP (ng/ml)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"afp\"\r\n                          id=\"afp\"\r\n                          value={formik.values.afp}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.afp !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.afp}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"fibroscan\">Fibroscan (kPa)</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"fibroscan\"\r\n                          id=\"fibroscan\"\r\n                          value={formik.values.fibroscan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.fibroscan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.fibroscan}\r\n                          </span>\r\n                        ) : null}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ultrasoundScan\">Ultrasound scan</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ultrasoundScan\"\r\n                          id=\"ultrasoundScan\"\r\n                          value={formik.values.ultrasoundScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ultrasoundScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ultrasoundScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ctScan\">CT scan</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"ctScan\"\r\n                          id=\"ctScan\"\r\n                          value={formik.values.ctScan}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.ctScan !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.ctScan}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"acites\">Acites</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"acites\"\r\n                          id=\"acites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.acites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"yes\"}>Yes</option>\r\n                          <option value={\"no\"}>No</option>\r\n                        </select>\r\n                        {formik.errors.acites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.acites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"severityOfAscites\">\r\n                          Severity of ascites\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"severityOfAscites\"\r\n                          id=\"severityOfAscites\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.severityOfAscites}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"mild\"}>Mild</option>\r\n                          <option value={\"moderate\"}>Moderate</option>\r\n                          <option value={\"massive/gross\"}>Massive/Gross</option>\r\n                        </select>\r\n                        {formik.errors.severityOfAscites !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.severityOfAscites}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"ascitesLevel\">\r\n                          Grade of Encephalopathy\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"gradeOfEncephalopathy\"\r\n                          id=\"gradeOfEncephalopathy\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.gradeOfEncephalopathy}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={0}>0</option>\r\n                          <option value={1}>1</option>\r\n                          <option value={2}>2</option>\r\n                          <option value={3}>3</option>\r\n                          <option value={4}>4</option>\r\n                          <option value={5}>5</option>\r\n                        </select>\r\n                        {formik.errors.gradeOfEncephalopathy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.gradeOfEncephalopathy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"childPughScore\">Child pugh score</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"childPughScore\"\r\n                          id=\"childPughScore\"\r\n                          value={formik.values.childPughScore}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.childPughScore !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.childPughScore}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"liverBiopsyStage\">Liver biopsy stage</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"liverBiopsyStage\"\r\n                          id=\"liverBiopsyStage\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.liverBiopsyStage}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"F-0\"}> No Fibrosis</option>\r\n                          <option value={\"F-1\"}>Mild Fibrosis</option>\r\n                          <option value={\"F-2\"}>Moderate Fibrosis</option>\r\n                          <option value={\"F-3\"}> Severe Fibrosis</option>\r\n                          <option value={\"F-4\"}>Cirrhosis</option>\r\n                          <option value={\"not done\"}>Not done</option>\r\n                        </select>\r\n                        {formik.errors.liverBiopsyStage !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.liverBiopsyStage}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"stagingDateForLiverBiopsy\">\r\n                          Staging date for liver{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          name=\"stagingDateForLiverBiopsy\"\r\n                          id=\"stagingDateForLiverBiopsy\"\r\n                          value={formik.values.stagingDateForLiverBiopsy}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.stagingDateForLiverBiopsy !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.stagingDateForLiverBiopsy}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"diagnosis\">Diagnosis</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"diagnosis\"\r\n                          id=\"diagnosis\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.diagnosis}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          <option value={\"no fibrosis\"}> No Fibrosis</option>\r\n                          <option value={\"fibrosis\"}>Fibrosis</option>\r\n                          <option value={\"cirrhosis\"}>Cirrhosis</option>\r\n                          <option value={\"hcc\"}>HCC</option>\r\n                        </select>\r\n                        {formik.errors.diagnosis !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.diagnosis}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Appointment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"treatmentRegimen\">\r\n                            Treatment regimen\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"treatmentRegimen\"\r\n                          id=\"treatmentRegimen\"\r\n                          value={formik.initialValues.treatmentRegimen}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.treatmentRegimen !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.treatmentRegimen}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"nextAppointment\">\r\n                          Next appointment\r\n                          <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"nextAppointment\"\r\n                          id=\"nextAppointment\"\r\n                          value={\r\n                            formik.initialValues\r\n                              .nextAppointment\r\n                          }\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.nextAppointment !==\r\n                        \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.dateOfHepatitisBPositiveScreening}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                      <FormGroup>\r\n                        <Label for=\"clinicalName\">Clinical Name </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"clinicalName\"\r\n                          id=\"clinicalName\"\r\n                          value={formik.initialValues.clinicalName}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {formik.errors.clinicalName !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {formik.errors.clinicalName}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-4-12\">\r\n                            <FormGroup>\r\n                              <Label for=\"remark\">Remark</Label>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                name=\"remark\"\r\n                                id=\"remark\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.remark}\r\n                                cols=\"50\"\r\n                                rows=\"30\"\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                  height: \"120px\",\r\n                                }}\r\n                              />\r\n                              {formik.errors.remark !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {formik.errors.remark}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <div className=\"d-flex justify-content-end\">\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<ArrowForward />}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Submit</span>\r\n                </MatButton>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FollowupForm;\r\n","import React, {useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Steppers from \"./Stepper/Stepper\";\r\nimport ViralHepatitisForm1 from \"./ViralHepatitisForms/Form1\";\r\nimport ViralHepatitisForm2 from \"./ViralHepatitisForms/Form2\";\r\nimport ViralHepatitisForm3 from \"./ViralHepatitisForms/Form3\";\r\nimport ViralHepatitisForm4 from \"./ViralHepatitisForms/Form4\";\r\nimport FollowupForm from \"./ViralHepatitisForms/FollowUp\";\r\n\r\n\r\n\r\n\r\nconst ViralHepatitisFormsContainer = (props) => {\r\n    const [step, setStep] = useState(0)\r\n    const formMap = {\r\n        0: <ViralHepatitisForm1 step={step} setStep={setStep}/>,\r\n        1: <ViralHepatitisForm2 step={step} setStep={setStep}/>,\r\n        2: <ViralHepatitisForm3 step={step} setStep={setStep}/>,\r\n        3: <FollowupForm step={step} setStep={setStep}/>,\r\n    }\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Viral Hepatitis /</Link>New Client</h4></li>\r\n                </ol>\r\n            </div>\r\n            <Link\r\n                    to={{\r\n                        pathname: \"/\",\r\n                        state: 'users'\r\n                    }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\" float-end mr-10 pr-10\"\r\n                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                        startIcon={<TiArrowBack />}\r\n                    >\r\n                        <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                    </Button>\r\n            </Link>\r\n            <br/><br/> \r\n            <Steppers activeStep={step}/>\r\n            {formMap[step]}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ViralHepatitisFormsContainer","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\n// import RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport ViralHepatitisFormsContainer from \"./main/webapp/jsx/components/Patient/ViralHepatitisFormsContainer\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <ViralHepatitisFormsContainer />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}