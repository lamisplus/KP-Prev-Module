{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/KpPrev/KpPrevEnrolled.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/KpPrev/index.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","Patients","calculate_age","dob","today","Date","birthDate","age_now","getFullYear","getMonth","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","get","concat","baseUrl","pageSize","page","search","headers","then","response","result","records","map","row","name","firstName","lastName","hospital_number","participantId","gender","age","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","size","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","KpPrevEnrolled","split","m","getDate","count","Label","vaccinationStatus","divStyle","borderRadius","Home","key","setKey","useState","Fragment","className","startIcon","FaUserPlus","textTransform","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","classes","console","log","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","TiArrowBack","dateParts","dateObject","moment","format","identifier","phoneNumber","contactPoint","find","obj","type","value","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","useStyles","navItemText","SubMenu","patientObjs","setpatientObj","genderType","setGenderType","Observation","observation","filter","x","catch","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","getAge","Vaccination","errors","setErrors","temp","covidEffect","setCovidEffect","vaccine","setVaccine","objValues","setObjValues","adverseEffect","batchNumber","doseNumber","location","patientId","vaccinationFacility","vaccineDate","saving","setSaving","VACCINE","COVID_ADVERSE_EFFECT","handleInputChange","e","target","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","CardBody","_Fragment","FormGroup","Input","onChange","InputGroup","max","MatButton","SaveIcon","preventDefault","Object","values","every","post","toast","loadPatients","disabled","CancelIcon","PatientVaccinationHistory","vacinationList","setVaccinationtList","modal","setModal","open","setOpen","React","openDeleteModal","setOpenDeleteModal","toggleDeleteModal","record","setRecord","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","async","patients","render","rowData","position","Dropdown","item","Icon","dateOfServicesProvided","action","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","VaccinationHistory","PatientnHistory","recentActivities","setRecentActivities","loading","setLoading","useHistory","PatientHistory","personId","activities","LoadViewPage","path","actionType","isLoading","date","viewable","LoadDeletePage","fontFamily","border","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","green","fingersCodeset","length","personCapturedFingers","_","uniq","biometricItems","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","deleteBiometric","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","for","deviceName","selectedDevice","errorType","errorName","required","_ref","validate","window","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","datatype","responses","_ref2","_ref3","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","chronicMedicationModal","setChronicMedicationModal","supportiveCareModal","setSupportiveCareModal","vaccinationHistory","setVaccinationHistory","inclusionHistory","setInclusionHistory","demograhicHistory","setDemographicHistory","vitalHistory","setVitalHistory","comobitieHistory","setComobitieHistory","reinfectionHistory","setReinfectionHistory","signsSymptomsHistory","setSignsSymptomsHistory","chronicMedicationHistory","setChronicMedicationHistory","medicationHistory","setMedicationHistory","supportiveCarenHistory","setSupportiveCareHistory","CardContent","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","inclusionCriteriaToggle","Demographic","demographicToggle","ViccinationToggle","VitalSign","VitalSignToggle","Comorbitie","ComorbitieToggle","ReinfectionToggle","ChronicMedicationToggle","MedicationToggle","SignsSymptoms","SignsSymptomsToggle","SupportiveCareToggle","flexGrow","KpPrev","useTheme","selectedOptions","setSelectedOptions","selected","setSelected","setObservation","dateOfObservation","facilityId","visitId","htsService","setHtsService","offeredHts","acceptedHts","hivTestResult","refferedForArt","prepServices","setPrepServices","offeredPrep","acceptedPrep","refferedForPrep","commodityService","setCommodityService","condomDispensed","lubricantsDispensed","oralQuickDispensed","newNeedleDispensed","oldNeedleRetrived","nalxoneProvided","hivEducationProvided","setHivEducationProvided","iecMaterial","interPersonalCommunication","peerGroupCommunication","bioMedicalService","setBioMedicalService","stiScreening","stiSyndromicManagement","stiTreatment","screenedForTb","providedWithTpt","screenedForViralHepatits","viralHepatitsScreenResult","vaccinationForViralHepatits","offeredFamilyPlanningServices","refferedForFamilyPlanningServices","providedWithDrugRehab","offeredMhpss","onMedicalAssistedTherapy","recivedNalxoneForOverdoseTreatment","handleInputChangeHtsService","handleInputChangePrepServices","handleInputChangeCommodityServices","handleInputChangeHivEducationProvided","handleInputChangeBioMedicalServices","LabelSui","facilityRefferedTo","Spinner","art","setArt","activeTab","prepId","PatientCardDetail","AddmissionHome","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","basicInfo","setBasicInfo","active","contact","dateOfBirth","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","relatives","setRelatives","phone","email","relationshipId","middleName","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","patientDTO","setPatientDTO","userDetail","user","useLocation","showContactCard","setShowContactCard","knownMedicalCondition","medicalCondition","occupation","vaccineId","visitDate","workInHealthSector","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","GetCountry","setStateByCountryId","useCallback","sort","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","hospitalNumber","uniqueId","getRelationship","relationship","handleInputChangeRelatives","replace","slice","handleInputChangePhoneNumber","inputName","NumberValue","checkNumberLimit","onClickContactCard","onClickRelativeCard","autoClose","hideProgressBar","margingRight","min","defaultChecked","ageNumber","currentDate","setDate","setMonth","dobNew","toISOString","Math","abs","maritalStatusOption","occupationOption","educationOption","FaPlus","FaAngleDown","getCountryId","landmark","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","newConatctsInfo","contactInfo","fullName","surname","push","patientForm","person","vaccinationEnrollment","POSITION","BOTTOM_CENTER","subErrors","handleCancel","setToday","substr","editRelative","setEditRelative","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","femaleStatus","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","sourceReferral","setSourceReferral","hivStatus","setHivStatus","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","newSex","setNewSex","pregnancyStatus","setPregnancyStatus","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","hideTargetGroup","setHideTargetGroup","getSex","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","identifiers","altphone","country","maritalStatus","employmentStatus","education","getStateId","patientAge","sex","alert","getSexId","checkPhoneNumberBasic","dateOfRegistration1","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","AddIcon","handleAddRelative","code","TOP_RIGHT","maxWidth","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","enrollment","getCharacters","handleCheckBox","checked","floor","random","htmlFor","hivEnrollment","put","App","Router","Switch","Route","PatientDetail","RegisterPatientPage","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","label","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.27b17535.chunk.js","sourcesContent":["// export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\n// export const url = '/api/v1/'\r\n\r\nexport const url =  'http://localhost:8383/api/v1/';\r\nexport const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzA5MzMyNDI3fQ.cV4vcjmlP3aFH25vFWWgayLKQspXwhHVcFUiXG7DRD1mm21NRCnGNcVjeeFEgn__wJqocXEHPG3R8GS487Yniw';","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        //const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        // if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        //     age_now--;\r\n        // }\r\n\r\n        // if (age_now === 0) {\r\n        //     return m + \" month(s)\";\r\n        // }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Status\", field: \"v_status\", filtering: false },\r\n            //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    //count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}> Patient Dashboard </span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst KpPrevEnrolled = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KpPrevEnrolled;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList'\r\n//import PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport KpPrevEnrolled from \"./KpPrev/KpPrevEnrolled\";\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>KP-PREV</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"vaccinated\" title=\"Vaccinated Patients\">                   \r\n                    <PatientVaccinatedLIst />\r\n                  </Tab> */}\r\n                  <Tab eventKey=\"kpprev\" title=\"Kp-Prev\">                   \r\n                    <KpPrevEnrolled />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n    const getPhoneNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(\r\n        (obj) => obj.type === \"phone\"\r\n      );\r\n      return phoneNumber ? phoneNumber.value : \"\";\r\n    };\r\n    const getAddress = (identifier) => {\r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find((obj) => obj.city);\r\n      const houseAddress =\r\n        address && address.line[0] !== null ? address.line[0] : \"\";\r\n      const landMark =\r\n        address && address.city && address.city !== null ? address.city : \"\";\r\n      return address ? houseAddress + \" \" + landMark : \"\";\r\n    };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                        {getPhoneNumber(patientObj.contactPoint)}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)}{\" \"}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    // const loadVaccination = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    // }\r\n    // const loadIcu = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'icu'})\r\n    // }\r\n    // const loadAddmission = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    // }\r\n    // const onClickDischarge = (row) =>{        \r\n    //     props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    // }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadKpPrev = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:\"kp-prev\"})\r\n    }\r\n    // const loadPatientHistory = ()=>{\r\n    //     //setActiveItem('history')\r\n    //     props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    // }\r\n\r\n\r\n    return ( \r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>      \r\n                <Menu.Item onClick={() => loadKpPrev()} > Kp-Prev</Menu.Item>               \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n    const LoadModal = (row) => {\r\n        toggle();\r\n        setRecord(row);\r\n      };\r\n\r\n\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n\r\n    const dummyData = [\r\n        {\r\n          dateOfServicesProvided: \"2023-10-15\", // Dummy date for the first column\r\n          action: \"Sample Action\" // Dummy data for the second column\r\n        },\r\n        {\r\n          dateOfServicesProvided: \"2023-11-20\", // Another dummy date\r\n          action: \"Another Action\" // Another dummy action\r\n        },\r\n        // Add more objects for additional rows as needed\r\n      ];\r\n       const handleAction = (rowData) => {\r\n    // Define your action handling logic here\r\n    console.log(\"Action clicked for:\", rowData);\r\n  };\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    // Placeholder function\r\n    console.log(\"View page loaded for:\", row);\r\n  };\r\n\r\n    \r\n    //console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            {/* <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>        */}\r\n            <br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                  {\r\n                      title: \"Date Of Services Provided\",\r\n                      field: \"dateOfServicesProvided\",\r\n                    },\r\n                    {  title: \"Action\", \r\n                    field: \"action\", \r\n                    filtering: false,\r\n                    render: rowData => \r\n                    <div>\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item>\r\n                            <Button \r\n                             style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                             primary \r\n                             >  \r\n                             <Dropdown item text=\"Action\" style= {{color:\"white\"}}> \r\n                             <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                               \r\n                                 <Dropdown.Item\r\n                                   //onClick={() => LoadViewPage(rowData, \"view\")}\r\n                                 >\r\n                                   {\" \"}\r\n                                   <Icon name=\"eye\" />\r\n                                   View{\" \"}\r\n                                 </Dropdown.Item>\r\n                               \r\n                               \r\n                                 <Dropdown.Item\r\n                                  // onClick={() => LoadViewPage(rowData, \"update\")}\r\n                                 >\r\n                                   <Icon name=\"edit\" />\r\n                                   Edit\r\n                                 </Dropdown.Item>\r\n                               \r\n                               \r\n                                 <Dropdown.Item\r\n                                   //onClick={() => LoadModal(rowData, \"delete\")}\r\n                                 >\r\n                                   {\" \"}\r\n                                   <Icon name=\"trash\" /> Delete\r\n                                 </Dropdown.Item>\r\n                               \r\n                             </Dropdown.Menu>\r\n                           </Dropdown>\r\n                             \r\n                             </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>  \r\n                },\r\n                \r\n                // { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                // { title: \"Location\", field: \"location\", filtering: false },      \r\n                // { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                // { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                // { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                // { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              \r\n              \r\n            //   data={ vacinationList.map((row) => ({\r\n\r\n                \r\n            //         //dateOfServicesProvided: row\r\n            //        // vaccine: row.vaccineName,\r\n            //         //vaccineDate: row.vaccineDate,\r\n            //         //batchNumber: row.batchNumber,\r\n            //         //doseNumber: row.doseNumber,\r\n            //        // location: row.location,\r\n            //         //vaccinationFacility: row.vaccinationFacility,\r\n            //         //adverseEffect: row.adverseEffect,\r\n            //         actions:\r\n                    \r\n            \r\n            //         <div>\r\n            //             <Menu.Menu position='right'  >\r\n            //             <Menu.Item >\r\n            //                 <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n            //                 <Dropdown item text='Action'>\r\n\r\n            //                 <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n            //                     <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n            //                     <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n            //                 </Dropdown.Menu>\r\n            //             </Dropdown>\r\n            //                 </Button>\r\n            //             </Menu.Item>\r\n            //             </Menu.Menu>\r\n            //         </div>\r\n                  \r\n            //       }))}\r\n            data ={dummyData}\r\n        \r\n       //columns={columns}\r\n\r\n        \r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { Fragment} from \"react\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Card,CardBody,Form, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Table  } from \"react-bootstrap\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport Select from '@mui/material/Select';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } ,\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n}))\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\n  function getStyles(name, selectedOptions, theme) {\r\n    return {\r\n      fontWeight:\r\n        selectedOptions.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst KpPrev = (props) =>{\r\n    const theme = useTheme();\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    const patientObj = props.patientObj;\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    const classes = useStyles()\r\n   \r\n    const [saving, setSaving] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    // const [optionsForCallOutCome, setOptionsForCallOutCome] = useState([]);\r\n    const [observation, setObservation]=useState({\r\n            data: {},\r\n            dateOfObservation: \"\",\r\n            facilityId: null,\r\n            personId: 0,\r\n            type: \"Client Verificatio n\",\r\n            visitId: null\r\n    })\r\n    const [htsService, setHtsService] = useState({  \r\n            offeredHts:\"\",\r\n            acceptedHts:\"\",\r\n            hivTestResult:\"\",\r\n            refferedForArt:\"\",\r\n            \r\n    \r\n    });\r\n    const [prepServices,setPrepServices]= useState({\r\n            offeredPrep:\"\",\r\n            acceptedPrep:\"\",\r\n            refferedForPrep:\"\"\r\n\r\n\r\n\r\n    })\r\n    const [commodityService, setCommodityService] =useState({\r\n          condomDispensed:\"\",\r\n          lubricantsDispensed:\"\",\r\n          oralQuickDispensed:\"\",\r\n          newNeedleDispensed:\"\",\r\n          oldNeedleRetrived:\"\",\r\n          nalxoneProvided:\"\"\r\n\r\n    })\r\n    const [hivEducationProvided, setHivEducationProvided] =useState({\r\n            iecMaterial:\"\",\r\n            interPersonalCommunication:\"\",\r\n            peerGroupCommunication:\"\"\r\n    })\r\n    const [bioMedicalService, setBioMedicalService] = useState({\r\n        stiScreening:\"\",\r\n        stiSyndromicManagement:\"\",\r\n        stiTreatment:\"\",\r\n        screenedForTb:\"\",\r\n        providedWithTpt:\"\",\r\n        screenedForViralHepatits:\"\",\r\n        viralHepatitsScreenResult:\"\",\r\n        vaccinationForViralHepatits:\"\",\r\n        offeredFamilyPlanningServices:\"\",\r\n        refferedForFamilyPlanningServices:\"\",\r\n        providedWithDrugRehab:\"\",\r\n        offeredMhpss:\"\",\r\n        onMedicalAssistedTherapy:\"\",\r\n        recivedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n    });\r\n\r\n    \r\n    // useEffect(() => {\r\n    //         if(props.activeContent.actionType==='update' || props.activeContent.actionType==='view'){\r\n    //             GetFormDetail(props.activeContent.id)\r\n    //         }\r\n    // }, [props.activeContent.actionType]);\r\n    // const GetFormDetail =(id)=>{\r\n    //     axios\r\n    //         .get(`${baseUrl}observation/${id}`,\r\n    //             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n    //         )\r\n    //         .then((response) => {\r\n    //             const Obj= response.data\r\n    //             setObservation({...Obj})\r\n    //             //setClientVerificationObj({...Obj.data})\r\n    //             setAttemptList([...Obj.data.attempt]);\r\n    //             setSelected([...Obj.data.anyOfTheFollowing])\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             //console.log(error);\r\n    //         });\r\n    // }\r\n\r\n    const handleInputChangeHtsService= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHtsService({...htsService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangePrepServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setPrepServices({...prepServices,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeCommodityServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setCommodityService({...commodityService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeHivEducationProvided = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHivEducationProvided({...hivEducationProvided,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    const handleInputChangeBioMedicalServices = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setBioMedicalService ({...bioMedicalService,  [e.target.name]: e.target.value});\r\n       \r\n    }\r\n\r\n    //Validations of the forms\r\n    // const validateAttempt = () => { \r\n    //     //attempt.verificationAttempts=selected\r\n    //     temp.indicationForClientVerification = selected.length > 0 ? \"\" : \"This field is required\";\r\n    //     temp.dateOfAttempt =attempt.dateOfAttempt?\"\": \"This field is required\"\r\n    //     temp.verificationStatus = attempt.verificationStatus ? \"\" : \"This field is required\"\r\n    //     temp.outcome = attempt.outcome ? \"\" : \"This field is required\"\r\n    //     temp.verificationAttempts = attempt.verificationAttempts ? \"\" : \"This field is required\"\r\n    //     setErrors({\r\n    //         ...temp\r\n    //     })\r\n    //     return Object.values(temp).every(x => x === \"\")\r\n    // }\r\n    // const clientVerificationFormObj = () => {\r\n    //     clientVerificationObj.anyOfTheFollowing=selected\r\n    //     temp.serialEnrollmentNo =clientVerificationObj.serialEnrollmentNo?\"\": \"This field is required\"\r\n    //     temp.discontinuation = clientVerificationObj.discontinuation ? \"\" : \"This field is required\"\r\n    //     temp.anyOfTheFollowing = clientVerificationObj.anyOfTheFollowing ? \"\" : \"This field is required\"\r\n    //     setErrors({\r\n    //         ...temp\r\n    //     })\r\n    //     return Object.values(temp).every(x => x === \"\")\r\n    // }\r\n   \r\n    /* Remove  function **/\r\n    \r\n    \r\n    /**** Submit Button Processing  */\r\n    // const handleSubmit = (e) => {        \r\n    //     e.preventDefault();\r\n    //     clientVerificationObj.attempt=attemptList // Assgining all the attempted list to the ClientVerifiction Object \r\n    //     observation.data=clientVerificationObj\r\n    //     if(clientVerificationFormObj()) {\r\n    //         if (attemptList.length > 0) {\r\n    //             observation.dateOfObservation = observation.dateOfObservation !== \"\" ? observation.dateOfObservation : moment(new Date()).format(\"YYYY-MM-DD\")\r\n    //             observation.personId = patientObj.id\r\n    //             // observation.data=attemptList        \r\n    //             setSaving(true);\r\n    //             if(props.activeContent && props.activeContent.actionType==='update'){//If the the action type is update\r\n    //                 axios.put(`${baseUrl}observation/${props.activeContent.id}`, observation,\r\n    //                     {headers: {\"Authorization\": `Bearer ${token}`}},\r\n    //                 )\r\n    //                     .then(response => {\r\n    //                         setSaving(false);\r\n    //                         toast.success(\"Client Verfication form Save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         props.setActiveContent({...props.activeContent, route: 'recent-history'})\r\n\r\n    //                     })\r\n    //                     .catch(error => {\r\n    //                         setSaving(false);\r\n    //                         if (error.response && error.response.data) {\r\n    //                             let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n    //                             if (error.response.data.apierror && error.response.data.apierror.message !== \"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message !== \"\") {\r\n    //                                 toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             } else {\r\n    //                                 toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             }\r\n    //                         } else {\r\n    //                             toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         }\r\n    //                     });\r\n    //             }else{//this is to call the POST API\r\n    //                 axios.post(`${baseUrl}observation`, observation,\r\n    //                     {headers: {\"Authorization\": `Bearer ${token}`}},\r\n    //                 )\r\n    //                     .then(response => {\r\n    //                         setSaving(false);\r\n    //                         toast.success(\"Client Verfication form Save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         props.setActiveContent({...props.activeContent, route: 'recent-history'})\r\n\r\n    //                     })\r\n    //                     .catch(error => {\r\n    //                         setSaving(false);\r\n    //                         if (error.response && error.response.data) {\r\n    //                             let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n    //                             if (error.response.data.apierror && error.response.data.apierror.message !== \"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message !== \"\") {\r\n    //                                 toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             } else {\r\n    //                                 toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             }\r\n    //                         } else {\r\n    //                             toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         }\r\n    //                     });\r\n    //             }\r\n\r\n    //         } else {\r\n    //             toast.error(\"Attempt to Contact can not be empty\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //         }\r\n    //     }else{\r\n    //         toast.error(\"All fields are required\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //     }\r\n       \r\n    // }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"card\">\r\n            <div\r\n                    className=\"card-header\"\r\n                    style={{\r\n                      backgroundColor: \"#014d88\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bolder\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                  >\r\n                    <h5 className='card-title' style={{color:\"#fff\"}}>\r\n                      KEY POPULATION PREVENTION FORM\r\n                    </h5>\r\n                  \r\n                  </div>\r\n          \r\n            </div>\r\n            <div className=\"row d-flex\">\r\n              <h2>Service Provider </h2>\r\n              <br />\r\n              <br />\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Date Of Service Provisions \r\n                  </Label>\r\n                  <Input\r\n                  type=\"date\"\r\n                  name=\"dateOfServiceProvisions\"\r\n                  value=\"\"\r\n                  id=\"dateOfServiceProvisions\"\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            <div className='card'>\r\n                <LabelSui as='a' color='teal' style={{width:'100%', height:'45px'}} ribbon>\r\n                    <h2 style={{color:'#fff'}}>HTS Services</h2>\r\n                </LabelSui>\r\n                    <br />\r\n                    <br />\r\n                     \r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered HTS\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"offeredHts\"\r\n                  id=\"offeredHts\"\r\n                  onChange ={handleInputChangeHtsService}\r\n                  value={htsService.offeredHts}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"Yes\">Yes</option> \r\n                    <option value=\"No\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                  Accepted HTS\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"acceptedHts\"\r\n                  id=\"acceptedHts\"\r\n                  onChange=\"handleInputChangeHtsService\"\r\n                  value={htsService.acceptedHts}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"Yes\">Yes</option> \r\n                    <option value=\"No\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Hiv Test Result\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"hivTestResult\"\r\n                  id=\"hivTestResult\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsService.hivTestResult}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"Yes\">Yes</option> \r\n                    <option value=\"No\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n\r\n                <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n                <FormGroup>\r\n                  <Label>\r\n                    Reffered for ART\r\n                  </Label>\r\n                  <Input\r\n                  type=\"select\"\r\n                  name=\"refferedForArt\"\r\n                  id=\"refferedForArt\"\r\n                  onChange={handleInputChangeHtsService}\r\n                  value={htsService.refferedForArt}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  >\r\n                    <option value=\"\">Select</option> \r\n                    <option value=\"Yes\">Yes</option> \r\n                    <option value=\"No\">No</option> \r\n                  </Input>\r\n                </FormGroup>\r\n                </div>\r\n            \r\n            </div>\r\n            \r\n            <br />\r\n\r\n            <div className='card'>\r\n\r\n            {/* <div className=\"row d-flex\"> */}\r\n            <LabelSui as='a' color='teal' style={{width:'100%', height:'45px'}} ribbon>\r\n\r\n            <h2 style={{color:'#fff'}}>PreP Services</h2>\r\n            </LabelSui> \r\n            <br />\r\n            <br />\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredPrep\"\r\n                id=\"offeredPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.offeredPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted PreP\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedPrep\"\r\n                id=\"acceptedPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.acceptedPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-xs-5 col-sm-5 col-md-5 col-lg-5 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"refferedForPrep\"\r\n                id=\"refferedForPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.refferedForPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            </div>\r\n            </div>\r\n\r\n\r\n            <div className='card'>\r\n            {/* <div className=\"row d-flex\"> */}\r\n\r\n            <LabelSui as='a' color='teal' style={{width:'106%', height:'45px'}} ribbon>\r\n\r\n              <h2 style={{color:'#fff'}}>Commodity Service</h2>\r\n              </LabelSui>\r\n             \r\n             <br />\r\n             <br />\r\n             <br />\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                Condom Dispensed \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"condomDispensed\"\r\n               id=\"condomDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.condomDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               Lubricants Dispensed\r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"lubricantsDispensed\"\r\n               id=\"lubricantsDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.lubricantsDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Oral Quick/ HIVST dispensed \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"oralQuickDispensed\"\r\n               id=\"oralQuickDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.oralQuickDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 New Needles/Syringe Dispesend \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"newNeedleDispensed\"\r\n               id=\"newNeedleDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.newNeedleDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Old Needles/Syringe Retrived  \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"oldNeedleRetrived\"\r\n               id=\"oldNeedleRetrived\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.oldNeedleRetrived}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Nalxone Provided \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"nalxoneProvided\"\r\n               id=\"nalxoneProvided\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.nalxoneProvided}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n           {/* </div> */}\r\n           </div>\r\n           <div className=\"row d-flex\">\r\n\r\n           <LabelSui as='a' color='teal' style={{width:'106%', height:'45px'}} ribbon>\r\n\r\n                  <h2 style={{color:'#fff'}}>HIV Education Provided </h2>\r\n                  </LabelSui>\r\n\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n             \r\n            \r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                IEC material/Pamphelt \r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"iecMaterial\"\r\n               id=\"iecMaterial\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.iecMaterial}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                 <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               InterPersonal Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"interPersonalCommunication\"\r\n               id=\"interPersonalCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.interPersonalCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Peer Group Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"peerGroupCommunication\"\r\n               id=\"peerGroupCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.peerGroupCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n           </div>\r\n           <div className=\"row d-flex\">\r\n           <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n\r\n                <h2 style={{color:'#fff'}}>Biomedical Services  </h2>\r\n                </LabelSui>\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n             \r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI screening\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={bioMedicalService.stiScreening}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiScreening === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  \r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreeningResponse\"\r\n                    id=\"stiScreeningResponse\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Syndromic Management\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiSyndromicManagement\"\r\n                    id=\"stiSyndromicManagement\"\r\n                    value={bioMedicalService.stiSyndromicManagement}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiSyndromicManagement === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    value={bioMedicalService.facilityRefferedTo} \r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Treatment/ Referral\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiTreatment\"\r\n                    id=\"stiTreatment\"\r\n                    value={bioMedicalService.stiTreatment}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={ioMedicalServices.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened for TB\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForTb\"\r\n                    id=\"screenedForTb\"\r\n                    value={bioMedicalService.screenedForTb}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.screenedForTb === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided with TPT\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithTpt\"\r\n                    id=\"providedWithTpt\"\r\n                    value={bioMedicalService.providedWithTpt}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened For Viral Heaptits \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForViralHepatits\"\r\n                    id=\"screenedForViralHepatits\"\r\n                    value={bioMedicalService.screenedForViralHepatits}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.screenedForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Viral Hepatits Screen Result \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"viralHepatitsScreenResult\"\r\n                    id=\"viralHepatitsScreenResult\"\r\n                    value={bioMedicalService.viralHepatitsScreenResult}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Positive\"> Positive </option>\r\n                    <option value=\"Negative\"> Negative</option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.viralHepatitsScreenResult === \"Positive\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Vaccination For Viral Hepatits\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"vaccinationForViralHepatits\"\r\n                    id=\"vaccinationForViralHepatits\"\r\n                    value={bioMedicalService.vaccinationForViralHepatits}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.vaccinationForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredFamilyPlanningServices\"\r\n                    id=\"offeredFamilyPlanningServices\"\r\n                    value={bioMedicalService.offeredFamilyPlanningServices}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.offeredFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Refferred For Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"refferedForFamilyPlanningServices\"\r\n                    id=\"refferedForFamilyPlanningServices\"\r\n                    value={bioMedicalService.refferedForFamilyPlanningServices}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.refferedForFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided With Drug Rehab\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithDrugRehab\"\r\n                    id=\"providedWithDrugRehab\"\r\n                    value={bioMedicalService.providedWithDrugRehab}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.providedWithDrugRehab === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered MHPSS\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredMhpss\"\r\n                    id=\"offeredMhpss\"\r\n                    value={bioMedicalService.offeredMhpss}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.offeredMhpss === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label>Facility Refferred to </Label> Type  of MHpss \r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                  \r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  On Medical Assisted Therapy (MAT) for atleast\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"onMedicalAssistedTherapy\"\r\n                    id=\"onMedicalAssistedTherapy\"\r\n                    value={bioMedicalService.onMedicalAssistedTherapy}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.onMedicalAssistedTherapy === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Recived Nalxone for Overdose Treatment \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"recivedNalxoneForOverdoseTreatment\"\r\n                    id=\"recivedNalxoneForOverdoseTreatment\"\r\n                    value={bioMedicalService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n             </div>\r\n\r\n             <div className=\"row d-flex\">\r\n\r\n             <LabelSui as='a' color='blue' style={{width:'106%', height:'45px'}} ribbon>\r\n\r\n              <h2 style={{color:'#fff'}}> Structural Services  </h2>\r\n              </LabelSui>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n             \r\n               \r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided or Reffered for Empowerment\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedOrRefferedForEmpowerment\"\r\n                    id=\"providedOrRefferedForEmpowerment\"\r\n                    //value={structuralService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {/* {structuralService.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )} */}\r\n\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                 Legal Aid Service Type\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"legalAidServiceType\"\r\n                    id=\"legalAidServiceType\"\r\n                    //value={structuralService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {/* {structuralService.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )} */}\r\n\r\n                </div>\r\n             </div>\r\n\r\n\r\n\r\n             </div>\r\n            {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              //hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n              //onClick={handleSubmit}\r\n              style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n              //disabled={attemptList.length <= 0 && !saving ? true : false}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {\" \"}\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update\"\r\n                    : \"Save\"}\r\n                </span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update...\"\r\n                    : \"Save...\"}\r\n                </span>\r\n              )}\r\n            </MatButton>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default KpPrev;\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\nimport KpPrev from '../KpPrev';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >KP-PREV /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}  \r\n\r\n          {activeContent.route==='kp-prev' &&(<KpPrev patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}       \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        COVID_ADVERSE_EFFECT()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    //COVID_ADVERSE_EFFECT\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n        }\r\n                \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value === \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value === \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const [htsService, setHtsService] = useState({  \r\n        offeredHts:\"\",\r\n        acceptedHts:\"\",\r\n        hivTestResult:\"\",\r\n        refferedForArt:\"\",\r\n        \r\n\r\n});\r\nconst [prepServices,setPrepServices]= useState({\r\n        offeredPrep:\"\",\r\n        acceptedPrep:\"\",\r\n        refferedForPrep:\"\"\r\n\r\n\r\n\r\n})\r\nconst [commodityService, setCommodityService] =useState({\r\n      condomDispensed:\"\",\r\n      lubricantsDispensed:\"\",\r\n      oralQuickDispensed:\"\",\r\n      newNeedleDispensed:\"\",\r\n      oldNeedleRetrived:\"\",\r\n      nalxoneProvided:\"\"\r\n\r\n})\r\nconst [hivEducationProvided, setHivEducationProvided] =useState({\r\n        iecMaterial:\"\",\r\n        interPersonalCommunication:\"\",\r\n        peerGroupCommunication:\"\"\r\n})\r\nconst [bioMedicalService, setBioMedicalService] = useState({\r\n    stiScreening:\"\",\r\n    stiSyndromicManagement:\"\",\r\n    stiTreatment:\"\",\r\n    screenedForTb:\"\",\r\n    providedWithTpt:\"\",\r\n    screenedForViralHepatits:\"\",\r\n    viralHepatitsScreenResult:\"\",\r\n    vaccinationForViralHepatits:\"\",\r\n    offeredFamilyPlanningServices:\"\",\r\n    refferedForFamilyPlanningServices:\"\",\r\n    providedWithDrugRehab:\"\",\r\n    offeredMhpss:\"\",\r\n    onMedicalAssistedTherapy:\"\",\r\n    recivedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n});\r\n\r\n    \r\n    const handleInputChangeHtsService= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHtsService({...htsService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangePrepServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setPrepServices({...prepServices,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeCommodityServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setCommodityService({...commodityService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeHivEducationProvided = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHivEducationProvided({...hivEducationProvided,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    const handleInputChangeBioMedicalServices = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setBioMedicalService ({...bioMedicalService,  [e.target.name]: e.target.value});\r\n       \r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Kp-Prev /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration===\"\" ? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        \r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"5\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <p><b style={{color:\"red\"}}>{basicInfo.age!==\"\" && basicInfo.age< 5 ? \"The minimum age is 5\" : \" \"} </b></p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                    {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showContactCard && (\r\n                                  <div className=\"card-body\">\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'phoneNumber')}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                                  {errors.phoneNumber !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                      ) : \"\" }\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Alt. Phone Number</Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"altPhonenumber\"\r\n                                                    id=\"altPhonenumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'altPhonenumber')}}\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                 />\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Email</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"email\"\r\n                                                      name=\"email\"\r\n                                                      id=\"email\"\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      value={basicInfo.email}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      required\r\n                                                  />\r\n                                                \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Street Address <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"address\"\r\n                                                      id=\"address\"\r\n                                                      value={basicInfo.address}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                  />\r\n                                                {errors.address !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.address}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Landmark</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"landmark\"\r\n                                                      id=\"landmark\"\r\n                                                      value={basicInfo.landmark}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      \r\n                                                  />\r\n                                                  \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                    {showRelative===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showRelative && (\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                                                        <Input\r\n                                                                            type=\"text\"\r\n                                                                            name=\"phone\"\r\n                                                                            id=\"phone\"\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                            value={relatives.phone}\r\n                                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {errors.phone !==\"\" ? (\r\n                                                                            <span className={classes.error}>{errors.phone}</span>\r\n                                                                            ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                                    {/* </div> */}\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Adding First DOSAGE FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Key Population Prevention </h5>\r\n                                </div>\r\n\r\n                                \r\n            <div className=\"row d-flex\">\r\n              <h2>Service Provider </h2>\r\n              <br />\r\n              <br />\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Date Of Service Provisions \r\n                </Label>\r\n                <Input\r\n                type=\"date\"\r\n                name=\"dateOfServiceProvisions\"\r\n                value=\"\"\r\n                id=\"dateOfServiceProvisions\"\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <h2>HTS Services</h2>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered HTS\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredHts\"\r\n                id=\"offeredHts\"\r\n                onChange ={handleInputChangeHtsService}\r\n                value={htsService.offeredHts}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted HTS\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedHts\"\r\n                id=\"acceptedHts\"\r\n                onChange=\"handleInputChangeHtsService\"\r\n                value={htsService.acceptedHts}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Hiv Test Result\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"hivTestResult\"\r\n                id=\"hivTestResult\"\r\n                onChange={handleInputChangeHtsService}\r\n                value={htsService.hivTestResult}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for ART\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"refferedForArt\"\r\n                id=\"refferedForArt\"\r\n                onChange={handleInputChangeHtsService}\r\n                value={htsService.refferedForArt}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row d-flex\">\r\n             \r\n              <h2>PreP Services</h2>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredPrep\"\r\n                id=\"offeredPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.offeredPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted PreP\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedPrep\"\r\n                id=\"acceptedPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.acceptedPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              \r\n              {/* <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Hiv Test Result\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"htsService\"\r\n                id=\"htsService\"\r\n                onChange=\"handleInputChangePrepServices\"\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div> */}\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"refferedForPrep\"\r\n                id=\"refferedForPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.refferedForPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n             \r\n             <h2>Commodity Service</h2>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                Condom Dispensed \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"condomDispensed\"\r\n               id=\"condomDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.condomDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               Lubricants Dispensed\r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"lubricantsDispensed\"\r\n               id=\"lubricantsDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.lubricantsDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Oral Quick/ HIVST dispensed \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"oralQuickDispensed\"\r\n               id=\"oralQuickDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.oralQuickDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 New Needles/Syringe Dispesend \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"newNeedleDispensed\"\r\n               id=\"newNeedleDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.newNeedleDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Old Needles/Syringe Retrived  \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"oldNeedleRetrived\"\r\n               id=\"oldNeedleRetrived\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.oldNeedleRetrived}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Nalxone Provided \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"nalxoneProvided\"\r\n               id=\"nalxoneProvided\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.nalxoneProvided}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n           </div>\r\n           <div className=\"row d-flex\">\r\n             \r\n             <h2>HIV Education Provided </h2>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                IEC material/Pamphelt \r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"iecMaterial\"\r\n               id=\"iecMaterial\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.iecMaterial}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                 <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               InterPersonal Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"interPersonalCommunication\"\r\n               id=\"interPersonalCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.interPersonalCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Peer Group Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"peerGroupCommunication\"\r\n               id=\"peerGroupCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.peerGroupCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n           </div>\r\n           <div className=\"row d-flex\">\r\n             \r\n             <h2>Biomedical Services </h2>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI screening\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={bioMedicalService.stiScreening}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiScreening === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  \r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreeningResponse\"\r\n                    id=\"stiScreeningResponse\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Syndromic Management\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiSyndromicManagement\"\r\n                    id=\"stiSyndromicManagement\"\r\n                    value={bioMedicalService.stiSyndromicManagement}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiSyndromicManagement === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    value={bioMedicalService.facilityRefferedTo} \r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Treatment/ Referral\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiTreatment\"\r\n                    id=\"stiTreatment\"\r\n                    value={bioMedicalService.stiTreatment}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={ioMedicalServices.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened for TB\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForTb\"\r\n                    id=\"screenedForTb\"\r\n                    value={bioMedicalService.screenedForTb}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.screenedForTb === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided with TPT\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithTpt\"\r\n                    id=\"providedWithTpt\"\r\n                    value={bioMedicalService.providedWithTpt}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened For Viral Heaptits \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForViralHepatits\"\r\n                    id=\"screenedForViralHepatits\"\r\n                    value={bioMedicalService.screenedForViralHepatits}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.screenedForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Viral Hepatits Screen Result \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"viralHepatitsScreenResult\"\r\n                    id=\"viralHepatitsScreenResult\"\r\n                    value={bioMedicalService.viralHepatitsScreenResult}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Positive\"> Positive </option>\r\n                    <option value=\"Negative\"> Negative</option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.viralHepatitsScreenResult === \"Positive\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Vaccination For Viral Hepatits\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"vaccinationForViralHepatits\"\r\n                    id=\"vaccinationForViralHepatits\"\r\n                    value={bioMedicalService.vaccinationForViralHepatits}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.vaccinationForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredFamilyPlanningServices\"\r\n                    id=\"offeredFamilyPlanningServices\"\r\n                    value={bioMedicalService.offeredFamilyPlanningServices}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.offeredFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Refferred For Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"refferedForFamilyPlanningServices\"\r\n                    id=\"refferedForFamilyPlanningServices\"\r\n                    value={bioMedicalService.refferedForFamilyPlanningServices}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.refferedForFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided With Drug Rehab\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithDrugRehab\"\r\n                    id=\"providedWithDrugRehab\"\r\n                    value={bioMedicalService.providedWithDrugRehab}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.providedWithDrugRehab === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered MHPSS\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredMhpss\"\r\n                    id=\"offeredMhpss\"\r\n                    value={bioMedicalService.offeredMhpss}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.offeredMhpss === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label>Facility Refferred to </Label> Type  of MHpss \r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                  \r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  On Medical Assisted Therapy (MAT) for atleast\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"onMedicalAssistedTherapy\"\r\n                    id=\"onMedicalAssistedTherapy\"\r\n                    value={bioMedicalService.onMedicalAssistedTherapy}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.onMedicalAssistedTherapy === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Recived Nalxone for Overdose Treatment \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"recivedNalxoneForOverdoseTreatment\"\r\n                    id=\"recivedNalxoneForOverdoseTreatment\"\r\n                    value={bioMedicalService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n             </div>\r\n\r\n             <div className=\"row d-flex\">\r\n             \r\n                <h2>Structural Services </h2>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided or Reffered for Empowerment\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedOrRefferedForEmpowerment\"\r\n                    id=\"providedOrRefferedForEmpowerment\"\r\n                    //value={structuralService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {/* {structuralService.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )} */}\r\n\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                 Legal Aid Service Type\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"legalAidServiceType\"\r\n                    id=\"legalAidServiceType\"\r\n                    //value={structuralService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {/* {structuralService.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )} */}\r\n\r\n                </div>\r\n             </div>\r\n\r\n\r\n\r\n             </div>\r\n\r\n                            \r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport KpPrev from \"./main/webapp/jsx/components/KpPrev\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n          <Route path=\"/kp-prev\">\r\n            <KpPrev />\r\n          </Route>\r\n\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}