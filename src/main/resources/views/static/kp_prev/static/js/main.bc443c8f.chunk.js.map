{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/PatientVaccinatedLIst.js","main/webapp/jsx/components/KpPrev/index.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Vaccination/AddViccination.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Admission/InclusionCriteria.js","main/webapp/jsx/components/Admission/Demograhic.js","main/webapp/jsx/components/Admission/Vaccination.js","main/webapp/jsx/components/Admission/Comorbitie.js","main/webapp/jsx/components/Admission/VitalSign.js","main/webapp/jsx/components/Admission/ReInfection.js","main/webapp/jsx/components/Admission/ChronicMedication.js","main/webapp/jsx/components/Admission/Medication.js","main/webapp/jsx/components/Admission/SignsSymptons.js","main/webapp/jsx/components/Admission/SupportiveCare.js","main/webapp/jsx/components/Admission/AddmissionHome.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","Patients","calculate_age","dob","today","Date","birthDate","age_now","getFullYear","getMonth","children","MaterialTable","icons","title","columns","field","filtering","data","query","Promise","resolve","reject","axios","get","concat","baseUrl","pageSize","page","search","headers","then","response","result","records","map","row","name","firstName","lastName","hospital_number","participantId","gender","age","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","size","Button","MdDashboard","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","split","m","getDate","count","Label","vaccinationStatus","useStyles","flexGrow","borderRadius","KpPrev","useTheme","selectedOptions","setSelectedOptions","useState","errors","setErrors","temp","classes","saving","setSaving","selected","setSelected","observation","setObservation","dateOfObservation","facilityId","personId","type","visitId","htsService","setHtsService","offeredHts","acceptedHts","hivTestResult","refferedForArt","prepServices","setPrepServices","offeredPrep","acceptedPrep","refferedForPrep","commodityService","setCommodityService","condomDispensed","lubricantsDispensed","oralQuickDispensed","newNeedleDispensed","oldNeedleRetrived","nalxoneProvided","hivEducationProvided","setHivEducationProvided","iecMaterial","interPersonalCommunication","peerGroupCommunication","bioMedicalService","setBioMedicalService","stiScreening","stiSyndromicManagement","stiTreatment","screenedForTb","providedWithTpt","screenedForViralHepatits","viralHepatitsScreenResult","vaccinationForViralHepatits","offeredFamilyPlanningServices","refferedForFamilyPlanningServices","providedWithDrugRehab","offeredMhpss","onMedicalAssistedTherapy","recivedNalxoneForOverdoseTreatment","handleInputChangeHtsService","e","target","value","handleInputChangePrepServices","handleInputChangeCommodityServices","handleInputChangeHivEducationProvided","handleInputChangeBioMedicalServices","Card","className","CardBody","FormGroup","Input","id","border","onChange","facilityRefferedTo","Spinner","divStyle","Home","key","setKey","Fragment","startIcon","FaUserPlus","textTransform","Row","Col","xl","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","PatientVaccinatedLIst","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","console","log","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","ButtonMui","TiArrowBack","dateParts","dateObject","moment","format","identifier","phoneNumber","contactPoint","find","obj","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","navItemText","SubMenu","patientObjs","setpatientObj","genderType","setGenderType","Observation","filter","x","catch","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","getAge","Vaccination","covidEffect","setCovidEffect","vaccine","setVaccine","objValues","setObjValues","adverseEffect","batchNumber","doseNumber","location","patientId","vaccinationFacility","vaccineDate","VACCINE","COVID_ADVERSE_EFFECT","handleInputChange","Modal","isOpen","showModal","toggle","Form","ModalHeader","ModalBody","_Fragment","InputGroup","max","MatButton","SaveIcon","preventDefault","Object","values","every","post","toast","loadPatients","disabled","CancelIcon","PatientVaccinationHistory","vacinationList","setVaccinationtList","modal","setModal","openDeleteModal","setOpenDeleteModal","React","toggleDeleteModal","record","setRecord","async","patients","vaccineName","position","Dropdown","item","LoadEditModal","IconMenu","LoadDeleteModal","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","RecentHistory","VaccinationHistory","PatientnHistory","recentActivities","setRecentActivities","loading","setLoading","useHistory","PatientHistory","activities","LoadViewPage","action","path","actionType","isLoading","date","viewable","Icon","LoadDeletePage","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","green","fingersCodeset","length","personCapturedFingers","_","uniq","biometricItems","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Toggle","as","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","alignRight","deleteBiometric","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","for","deviceName","selectedDevice","errorType","errorName","required","_ref","validate","window","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","InclusionCriteria","vaccination","setVaccination","setValues","category","patient_id","questionAnswers","visit_date","datatype","responses","_ref2","_ref3","entries","question_id","answer","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","VitalSigns","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","chronicMedicationModal","setChronicMedicationModal","supportiveCareModal","setSupportiveCareModal","vaccinationHistory","setVaccinationHistory","inclusionHistory","setInclusionHistory","demograhicHistory","setDemographicHistory","vitalHistory","setVitalHistory","comobitieHistory","setComobitieHistory","reinfectionHistory","setReinfectionHistory","signsSymptomsHistory","setSignsSymptomsHistory","chronicMedicationHistory","setChronicMedicationHistory","medicationHistory","setMedicationHistory","supportiveCarenHistory","setSupportiveCareHistory","CardContent","Grid","padded","Column","Segment","raised","ribbon","cursor","divided","floated","inclusionCriteriaToggle","Demographic","demographicToggle","ViccinationToggle","VitalSign","VitalSignToggle","Comorbitie","ComorbitieToggle","ReinfectionToggle","ChronicMedicationToggle","MedicationToggle","SignsSymptoms","SignsSymptomsToggle","SupportiveCareToggle","art","setArt","activeTab","prepId","PatientCardDetail","AddmissionHome","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","basicInfo","setBasicInfo","active","contact","dateOfBirth","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","relatives","setRelatives","phone","email","relationshipId","middleName","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","patientDTO","setPatientDTO","userDetail","user","useLocation","showContactCard","setShowContactCard","knownMedicalCondition","medicalCondition","occupation","vaccineId","visitDate","workInHealthSector","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","GetCountry","setStateByCountryId","useCallback","sort","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","hospitalNumber","uniqueId","getRelationship","relationship","handleInputChangeRelatives","replace","slice","handleInputChangePhoneNumber","inputName","NumberValue","checkNumberLimit","onClickContactCard","onClickRelativeCard","autoClose","hideProgressBar","margingRight","min","defaultChecked","ageNumber","currentDate","setDate","setMonth","dobNew","toISOString","Math","abs","maritalStatusOption","occupationOption","educationOption","FaPlus","FaAngleDown","getCountryId","landmark","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","checked","htmlFor","adverseEffectOption","newConatctsInfo","contactInfo","fullName","surname","push","patientForm","person","vaccinationEnrollment","POSITION","BOTTOM_CENTER","subErrors","handleCancel","setToday","substr","editRelative","setEditRelative","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","femaleStatus","setfemaleStatus","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","sourceReferral","setSourceReferral","hivStatus","setHivStatus","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","newSex","setNewSex","pregnancyStatus","setPregnancyStatus","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","hideTargetGroup","setHideTargetGroup","getSex","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","identifiers","altphone","country","maritalStatus","employmentStatus","education","getStateId","patientAge","sex","alert","getSexId","checkPhoneNumberBasic","dateOfRegistration1","PhoneInput","containerStyle","inputStyle","placeholder","maxLength","AddIcon","handleAddRelative","code","TOP_RIGHT","maxWidth","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","enrollment","getCharacters","handleCheckBox","floor","random","hivEnrollment","put","App","Router","Switch","Route","PatientDetail","RegisterPatientPage","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","label","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.bc443c8f.chunk.js","sourcesContent":["// export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\n// export const url = '/api/v1/'\r\n\r\nexport const url =  'http://localhost:8383/api/v1/';\r\nexport const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzA5MjExNTE3fQ.cxLi3KOzrFlpKcgm8Vp451gOHEqYgHM8kPsy6fI8flYvAcEYIvkJ_KusVUTBwQZlAIDPobgNvHWSG4oFrIQ2Fw';","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        //const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        // if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n        //     age_now--;\r\n        // }\r\n\r\n        // if (age_now === 0) {\r\n        //     return m + \" month(s)\";\r\n        // }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            //{ title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/all-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender: row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    //count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Enroll Patient </span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const calculate_age = (dob) => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n\r\n        if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n            age_now--;\r\n        }\r\n\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            // { title: \"Batch number\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"Vaccination Status\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}covid/vaccinated-patients?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            resolve({\r\n                                data: result.data.records && result.data.records!==null && result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.lastName,\r\n                                    hospital_number: row.participantId,\r\n                                    gender:  row.gender!==null ? row.gender.display : \"\" ,\r\n                                    age: calculate_age(row.dob),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.vaccinationStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Card,CardBody, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Table  } from \"react-bootstrap\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport Select from '@mui/material/Select';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } ,\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n}))\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\n  function getStyles(name, selectedOptions, theme) {\r\n    return {\r\n      fontWeight:\r\n        selectedOptions.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst KpPrev = (props) =>{\r\n    const theme = useTheme();\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    const patientObj = props.patientObj;\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    const classes = useStyles()\r\n   \r\n    const [saving, setSaving] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    // const [optionsForCallOutCome, setOptionsForCallOutCome] = useState([]);\r\n    const [observation, setObservation]=useState({\r\n            data: {},\r\n            dateOfObservation: \"\",\r\n            facilityId: null,\r\n            personId: 0,\r\n            type: \"Client Verificatio n\",\r\n            visitId: null\r\n    })\r\n    const [htsService, setHtsService] = useState({  \r\n            offeredHts:\"\",\r\n            acceptedHts:\"\",\r\n            hivTestResult:\"\",\r\n            refferedForArt:\"\",\r\n            \r\n    \r\n    });\r\n    const [prepServices,setPrepServices]= useState({\r\n            offeredPrep:\"\",\r\n            acceptedPrep:\"\",\r\n            refferedForPrep:\"\"\r\n\r\n\r\n\r\n    })\r\n    const [commodityService, setCommodityService] =useState({\r\n          condomDispensed:\"\",\r\n          lubricantsDispensed:\"\",\r\n          oralQuickDispensed:\"\",\r\n          newNeedleDispensed:\"\",\r\n          oldNeedleRetrived:\"\",\r\n          nalxoneProvided:\"\"\r\n\r\n    })\r\n    const [hivEducationProvided, setHivEducationProvided] =useState({\r\n            iecMaterial:\"\",\r\n            interPersonalCommunication:\"\",\r\n            peerGroupCommunication:\"\"\r\n    })\r\n    const [bioMedicalService, setBioMedicalService] = useState({\r\n        stiScreening:\"\",\r\n        stiSyndromicManagement:\"\",\r\n        stiTreatment:\"\",\r\n        screenedForTb:\"\",\r\n        providedWithTpt:\"\",\r\n        screenedForViralHepatits:\"\",\r\n        viralHepatitsScreenResult:\"\",\r\n        vaccinationForViralHepatits:\"\",\r\n        offeredFamilyPlanningServices:\"\",\r\n        refferedForFamilyPlanningServices:\"\",\r\n        providedWithDrugRehab:\"\",\r\n        offeredMhpss:\"\",\r\n        onMedicalAssistedTherapy:\"\",\r\n        recivedNalxoneForOverdoseTreatment:\"\",\r\n\r\n\r\n\r\n    });\r\n\r\n    \r\n    // useEffect(() => {\r\n    //         if(props.activeContent.actionType==='update' || props.activeContent.actionType==='view'){\r\n    //             GetFormDetail(props.activeContent.id)\r\n    //         }\r\n    // }, [props.activeContent.actionType]);\r\n    // const GetFormDetail =(id)=>{\r\n    //     axios\r\n    //         .get(`${baseUrl}observation/${id}`,\r\n    //             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n    //         )\r\n    //         .then((response) => {\r\n    //             const Obj= response.data\r\n    //             setObservation({...Obj})\r\n    //             //setClientVerificationObj({...Obj.data})\r\n    //             setAttemptList([...Obj.data.attempt]);\r\n    //             setSelected([...Obj.data.anyOfTheFollowing])\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             //console.log(error);\r\n    //         });\r\n    // }\r\n\r\n\r\n  \r\n\r\n    // const handleInputChangeAttempt = e => {\r\n    //     console.log('checking for date',e.target.value)\r\n    //     setErrors({...temp, [e.target.name]:\"\"})\r\n    //     setAttempt ({...attempt,  [e.target.name]: e.target.value});\r\n    // }\r\n\r\n    // const handleChange = (event) => {\r\n    //     const {\r\n    //       target: { value },\r\n    //     } = event;\r\n    //     setSelectedOptions(\r\n    //       typeof value === 'string' ? value.split(',') : value,\r\n    //     );\r\n    //   };\r\n\r\n    const handleInputChangeHtsService= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHtsService({...htsService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangePrepServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setPrepServices({...prepServices,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeCommodityServices= e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setCommodityService({...commodityService,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n    const handleInputChangeHivEducationProvided = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setHivEducationProvided({...hivEducationProvided,  [e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    const handleInputChangeBioMedicalServices = e => {\r\n        //console.log(e.target.value)\r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setBioMedicalService ({...bioMedicalService,  [e.target.name]: e.target.value});\r\n       \r\n    }\r\n\r\n    //Validations of the forms\r\n    // const validateAttempt = () => { \r\n    //     //attempt.verificationAttempts=selected\r\n    //     temp.indicationForClientVerification = selected.length > 0 ? \"\" : \"This field is required\";\r\n    //     temp.dateOfAttempt =attempt.dateOfAttempt?\"\": \"This field is required\"\r\n    //     temp.verificationStatus = attempt.verificationStatus ? \"\" : \"This field is required\"\r\n    //     temp.outcome = attempt.outcome ? \"\" : \"This field is required\"\r\n    //     temp.verificationAttempts = attempt.verificationAttempts ? \"\" : \"This field is required\"\r\n    //     setErrors({\r\n    //         ...temp\r\n    //     })\r\n    //     return Object.values(temp).every(x => x === \"\")\r\n    // }\r\n    // const clientVerificationFormObj = () => {\r\n    //     clientVerificationObj.anyOfTheFollowing=selected\r\n    //     temp.serialEnrollmentNo =clientVerificationObj.serialEnrollmentNo?\"\": \"This field is required\"\r\n    //     temp.discontinuation = clientVerificationObj.discontinuation ? \"\" : \"This field is required\"\r\n    //     temp.anyOfTheFollowing = clientVerificationObj.anyOfTheFollowing ? \"\" : \"This field is required\"\r\n    //     setErrors({\r\n    //         ...temp\r\n    //     })\r\n    //     return Object.values(temp).every(x => x === \"\")\r\n    // }\r\n   \r\n    /* Remove  function **/\r\n    \r\n    \r\n    /**** Submit Button Processing  */\r\n    // const handleSubmit = (e) => {        \r\n    //     e.preventDefault();\r\n    //     clientVerificationObj.attempt=attemptList // Assgining all the attempted list to the ClientVerifiction Object \r\n    //     observation.data=clientVerificationObj\r\n    //     if(clientVerificationFormObj()) {\r\n    //         if (attemptList.length > 0) {\r\n    //             observation.dateOfObservation = observation.dateOfObservation !== \"\" ? observation.dateOfObservation : moment(new Date()).format(\"YYYY-MM-DD\")\r\n    //             observation.personId = patientObj.id\r\n    //             // observation.data=attemptList        \r\n    //             setSaving(true);\r\n    //             if(props.activeContent && props.activeContent.actionType==='update'){//If the the action type is update\r\n    //                 axios.put(`${baseUrl}observation/${props.activeContent.id}`, observation,\r\n    //                     {headers: {\"Authorization\": `Bearer ${token}`}},\r\n    //                 )\r\n    //                     .then(response => {\r\n    //                         setSaving(false);\r\n    //                         toast.success(\"Client Verfication form Save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         props.setActiveContent({...props.activeContent, route: 'recent-history'})\r\n\r\n    //                     })\r\n    //                     .catch(error => {\r\n    //                         setSaving(false);\r\n    //                         if (error.response && error.response.data) {\r\n    //                             let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n    //                             if (error.response.data.apierror && error.response.data.apierror.message !== \"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message !== \"\") {\r\n    //                                 toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             } else {\r\n    //                                 toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             }\r\n    //                         } else {\r\n    //                             toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         }\r\n    //                     });\r\n    //             }else{//this is to call the POST API\r\n    //                 axios.post(`${baseUrl}observation`, observation,\r\n    //                     {headers: {\"Authorization\": `Bearer ${token}`}},\r\n    //                 )\r\n    //                     .then(response => {\r\n    //                         setSaving(false);\r\n    //                         toast.success(\"Client Verfication form Save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         props.setActiveContent({...props.activeContent, route: 'recent-history'})\r\n\r\n    //                     })\r\n    //                     .catch(error => {\r\n    //                         setSaving(false);\r\n    //                         if (error.response && error.response.data) {\r\n    //                             let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n    //                             if (error.response.data.apierror && error.response.data.apierror.message !== \"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message !== \"\") {\r\n    //                                 toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             } else {\r\n    //                                 toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                             }\r\n    //                         } else {\r\n    //                             toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //                         }\r\n    //                     });\r\n    //             }\r\n\r\n    //         } else {\r\n    //             toast.error(\"Attempt to Contact can not be empty\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //         }\r\n    //     }else{\r\n    //         toast.error(\"All fields are required\", {position: toast.POSITION.BOTTOM_CENTER});\r\n    //     }\r\n       \r\n    // }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row d-flex\">\r\n              <h2>KEY POPULATION PREVENTION FORM </h2>\r\n              <br />\r\n              <br />\r\n            </div>\r\n\r\n            <div className=\"row d-flex\">\r\n              <h2>Service Provider </h2>\r\n              <br />\r\n              <br />\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Date Of Service Provisions \r\n                </Label>\r\n                <Input\r\n                type=\"date\"\r\n                name=\"dateOfServiceProvisions\"\r\n                value=\"\"\r\n                id=\"dateOfServiceProvisions\"\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <h2>HTS Services</h2>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered HTS\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredHts\"\r\n                id=\"offeredHts\"\r\n                onChange ={handleInputChangeHtsService}\r\n                value={htsService.offeredHts}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted HTS\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedHts\"\r\n                id=\"acceptedHts\"\r\n                onChange=\"handleInputChangeHtsService\"\r\n                value={htsService.acceptedHts}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Hiv Test Result\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"hivTestResult\"\r\n                id=\"hivTestResult\"\r\n                onChange={handleInputChangeHtsService}\r\n                value={htsService.hivTestResult}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for ART\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"refferedForArt\"\r\n                id=\"refferedForArt\"\r\n                onChange={handleInputChangeHtsService}\r\n                value={htsService.refferedForArt}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row d-flex\">\r\n             \r\n              <h2>PreP Services</h2>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                 Offered Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"offeredPrep\"\r\n                id=\"offeredPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.offeredPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                Accepted PreP\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"acceptedPrep\"\r\n                id=\"acceptedPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.acceptedPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              \r\n              {/* <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Hiv Test Result\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"htsService\"\r\n                id=\"htsService\"\r\n                onChange=\"handleInputChangePrepServices\"\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div> */}\r\n\r\n              <div className = \"form-group mb-3 col-md-4 \"> \r\n              <FormGroup>\r\n                <Label>\r\n                  Reffered for Prep\r\n                </Label>\r\n                <Input\r\n                type=\"select\"\r\n                name=\"refferedForPrep\"\r\n                id=\"refferedForPrep\"\r\n                onChange={handleInputChangePrepServices}\r\n                value={prepServices.refferedForPrep}\r\n                style={{\r\n                  border: \"1px solid #014D88\",\r\n                  borderRadius: \"0.25rem\",\r\n                }}\r\n                >\r\n                  <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n             \r\n             <h2>Commodity Service</h2>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                Condom Dispensed \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"condomDispensed\"\r\n               id=\"condomDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.condomDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               Lubricants Dispensed\r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"lubricantsDispensed\"\r\n               id=\"lubricantsDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.lubricantsDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Oral Quick/ HIVST dispensed \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"oralQuickDispensed\"\r\n               id=\"oralQuickDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.oralQuickDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 New Needles/Syringe Dispesend \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"newNeedleDispensed\"\r\n               id=\"newNeedleDispensed\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.newNeedleDispensed}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Old Needles/Syringe Retrived  \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"oldNeedleRetrived\"\r\n               id=\"oldNeedleRetrived\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.oldNeedleRetrived}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-4 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Nalxone Provided \r\n               </Label>\r\n               <Input\r\n               type=\"number\"\r\n               name=\"nalxoneProvided\"\r\n               id=\"nalxoneProvided\"\r\n               onChange={handleInputChangeCommodityServices}\r\n               value={commodityService.nalxoneProvided}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n           </div>\r\n           <div className=\"row d-flex\">\r\n             \r\n             <h2>HIV Education Provided </h2>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                IEC material/Pamphelt \r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"iecMaterial\"\r\n               id=\"iecMaterial\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.iecMaterial}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                 <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n               InterPersonal Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"interPersonalCommunication\"\r\n               id=\"interPersonalCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.interPersonalCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n             <div className = \"form-group mb-3 col-md-6 \"> \r\n             <FormGroup>\r\n               <Label>\r\n                 Peer Group Communication\r\n               </Label>\r\n               <Input\r\n               type=\"select\"\r\n               name=\"peerGroupCommunication\"\r\n               id=\"peerGroupCommunication\"\r\n               onChange={handleInputChangeHivEducationProvided}\r\n               value={hivEducationProvided.peerGroupCommunication}\r\n               style={{\r\n                 border: \"1px solid #014D88\",\r\n                 borderRadius: \"0.25rem\",\r\n               }}\r\n               >\r\n                <option value=\"\">Select</option> \r\n                  <option value=\"Yes\">Yes</option> \r\n                  <option value=\"No\">No</option> \r\n                \r\n               </Input>\r\n             </FormGroup>\r\n             </div>\r\n\r\n           </div>\r\n           <div className=\"row d-flex\">\r\n             \r\n             <h2>Biomedical Services </h2>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI screening\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={bioMedicalService.stiScreening}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiScreening === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  \r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreeningResponse\"\r\n                    id=\"stiScreeningResponse\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Syndromic Management\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiSyndromicManagement\"\r\n                    id=\"stiSyndromicManagement\"\r\n                    value={bioMedicalService.stiSyndromicManagement}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiSyndromicManagement === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    value={bioMedicalService.facilityRefferedTo} \r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  STI Treatment/ Referral\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiTreatment\"\r\n                    id=\"stiTreatment\"\r\n                    value={bioMedicalService.stiTreatment}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.stiTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={ioMedicalServices.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened for TB\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForTb\"\r\n                    id=\"screenedForTb\"\r\n                    value={bioMedicalService.screenedForTb}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.screenedForTb === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided with TPT\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithTpt\"\r\n                    id=\"providedWithTpt\"\r\n                    value={bioMedicalService.providedWithTpt}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Screened For Viral Heaptits \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"screenedForViralHepatits\"\r\n                    id=\"screenedForViralHepatits\"\r\n                    value={bioMedicalService.screenedForViralHepatits}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.screenedForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Viral Hepatits Screen Result \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"viralHepatitsScreenResult\"\r\n                    id=\"viralHepatitsScreenResult\"\r\n                    value={bioMedicalService.viralHepatitsScreenResult}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Positive\"> Positive </option>\r\n                    <option value=\"Negative\"> Negative</option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.viralHepatitsScreenResult === \"Positive\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Vaccination For Viral Hepatits\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"vaccinationForViralHepatits\"\r\n                    id=\"vaccinationForViralHepatits\"\r\n                    value={bioMedicalService.vaccinationForViralHepatits}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.vaccinationForViralHepatits === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredFamilyPlanningServices\"\r\n                    id=\"offeredFamilyPlanningServices\"\r\n                    value={bioMedicalService.offeredFamilyPlanningServices}\r\n                    onChange={handleInputChangeBioMedicalServices}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.offeredFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Refferred For Family Planning Services\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"refferedForFamilyPlanningServices\"\r\n                    id=\"refferedForFamilyPlanningServices\"\r\n                    value={bioMedicalService.refferedForFamilyPlanningServices}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.refferedForFamilyPlanningServices === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided With Drug Rehab\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedWithDrugRehab\"\r\n                    id=\"providedWithDrugRehab\"\r\n                    value={bioMedicalService.providedWithDrugRehab}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.providedWithDrugRehab === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Offered MHPSS\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"offeredMhpss\"\r\n                    id=\"offeredMhpss\"\r\n                    value={bioMedicalService.offeredMhpss}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.offeredMhpss === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label>Facility Refferred to </Label> Type  of MHpss \r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                  \r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  On Medical Assisted Therapy (MAT) for atleast\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"onMedicalAssistedTherapy\"\r\n                    id=\"onMedicalAssistedTherapy\"\r\n                    value={bioMedicalService.onMedicalAssistedTherapy}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n              {bioMedicalService.onMedicalAssistedTherapy === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Recived Nalxone for Overdose Treatment \r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"recivedNalxoneForOverdoseTreatment\"\r\n                    id=\"recivedNalxoneForOverdoseTreatment\"\r\n                    value={bioMedicalService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n              </div>\r\n             </div>\r\n\r\n             <div className=\"row d-flex\">\r\n             \r\n                <h2>Structural Services </h2>\r\n\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                  Provided or Reffered for Empowerment\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"providedOrRefferedForEmpowerment\"\r\n                    id=\"providedOrRefferedForEmpowerment\"\r\n                    //value={structuralService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {/* {structuralService.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )} */}\r\n\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                 Legal Aid Service Type\r\n                    \r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"legalAidServiceType\"\r\n                    id=\"legalAidServiceType\"\r\n                    //value={structuralService.recivedNalxoneForOverdoseTreatment}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    <option value=\"Yes\"> Yes </option>\r\n                    <option value=\"No\"> No </option>\r\n                  </Input>\r\n                  {/* {errors.discontinuation !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.discontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )} */}\r\n                </FormGroup>\r\n                {/* {structuralService.recivedNalxoneForOverdoseTreatment === \"Yes\" && (\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                  <Label> Facility Refferred to </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"facilityRefferedTo\"\r\n                    id=\"facilityRefferedTo\"\r\n                    //value={clientVerificationObj.dateOfDiscontinuation} //  min={enrollDate}\r\n                    //onChange={handleInputChangeDiscontinuation}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              )} */}\r\n\r\n                </div>\r\n             </div>\r\n\r\n\r\n\r\n             </div>\r\n            {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n\r\n            {/* <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              hidden={props.activeContent.actionType === \"view\" ? true : false}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: \"#014d88\", color: \"#ffffff\" }}\r\n              disabled={attemptList.length <= 0 && !saving ? true : false}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {\" \"}\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update\"\r\n                    : \"Save\"}\r\n                </span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>\r\n                  {props.activeContent.actionType === \"update\"\r\n                    ? \"Update...\"\r\n                    : \"Save...\"}\r\n                </span>\r\n              )}\r\n            </MatButton> */}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default KpPrev;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList'\r\nimport PatientVaccinatedLIst from './Patient/PatientVaccinatedLIst'\r\nimport KpPrev from \"./KpPrev/index\";\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>KP-PREV</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n                  <Tab eventKey=\"vaccinated\" title=\"Vaccinated Patients\">                   \r\n                    <PatientVaccinatedLIst />\r\n                  </Tab>\r\n                  <Tab eventKey=\"vaccinated\" title=\"Kp-Prev\">                   \r\n                    <KpPrev />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj\r\n  //const [patientObj, setpatientObj] = useState(patientObjs)\r\n  // const [biometricStatus, setBiometricStatus] = useState(false);\r\n  // const [devices, setDevices] = useState([]);\r\n  //const [biometricModal, setBiometricModal] = useState(false);\r\n  // const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  // const [hivStatus, setHivStatus] = useState();\r\n  console.log(patientObj)\r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n    const getPhoneNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(\r\n        (obj) => obj.type === \"phone\"\r\n      );\r\n      return phoneNumber ? phoneNumber.value : \"\";\r\n    };\r\n    const getAddress = (identifier) => {\r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find((obj) => obj.city);\r\n      const houseAddress =\r\n        address && address.line[0] !== null ? address.line[0] : \"\";\r\n      const landMark =\r\n        address && address.city && address.city !== null ? address.city : \"\";\r\n      return address ? houseAddress + \" \" + landMark : \"\";\r\n    };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.lastName }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{patientObj.participantId}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dob }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>\r\n                          {calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>\r\n                          {patientObj.gender!==null ? patientObj.gender.display : \"\"}\r\n                        </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>\r\n                        {getPhoneNumber(patientObj.contactPoint)}\r\n                          </b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)}{\" \"}</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n\r\n    \r\n    // const loadVaccination = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'vaccination'})\r\n    // }\r\n    // const loadIcu = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'icu'})\r\n    // }\r\n    // const loadAddmission = (row) =>{\r\n    //     props.setActiveContent({...props.activeContent, route:'addmission'})\r\n    // }\r\n    // const onClickDischarge = (row) =>{        \r\n    //     props.setActiveContent({...props.activeContent, route:'discharge'})\r\n    // }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadKpPrev = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:\"kp-prev\"})\r\n    }\r\n    // const loadPatientHistory = ()=>{\r\n    //     //setActiveItem('history')\r\n    //     props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    // }\r\n\r\n\r\n    return ( \r\n         <div>\r\n            <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>      \r\n                <Menu.Item onClick={() => loadKpPrev()} > Kp-Prev</Menu.Item>               \r\n                 {/* <Menu.Item onClick={() => loadVaccination()} >Vaccination</Menu.Item>\r\n                 <Menu.Item onClick={() => loadAddmission()} >Addmission</Menu.Item>\r\n                <Menu.Item onClick={() => loadIcu()} >Patient ICU</Menu.Item>\r\n                <Menu.Item onClick={() => onClickDischarge()} > Discharg/Death</Menu.Item>\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                     */}\r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,InputGroup,\r\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet getAge =\"\"\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }, \r\n}))\r\n\r\nconst Vaccination = (props) => {\r\n    const [errors, setErrors] = useState({})\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    let temp = { ...errors }\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [vaccine, setVaccine] = useState([]);\r\n    const [objValues, setObjValues] = useState(\r\n        {  \r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        VACCINE();\r\n        COVID_ADVERSE_EFFECT();\r\n        if(props.records && props.records!==null){\r\n            setObjValues(props.records)\r\n        }       \r\n    }, [props.records]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n    }    \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now;\r\n    };           \r\n    getAge=calculate_age(moment(props.patientObj.dob).format(\"DD-MM-YYYY\"))\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSaving(true);\r\n        if(validate()){\r\n            axios.post(`${baseUrl}covid/vaccinations`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //Clearing the form values\r\n                setObjValues({\r\n                    adverseEffect: \"\",\r\n                    batchNumber: \"\",\r\n                    doseNumber: \"\",\r\n                    location: \"\",\r\n                    patientId: patientObj.id,\r\n                    vaccinationFacility: \"\",\r\n                    vaccine: \"\",\r\n                    vaccineDate: \"\"\r\n                })\r\n                toast.success(\"Patient Vaccination Successful\");\r\n                props.toggle()\r\n                props.loadPatients()\r\n                //history.push(\"/\")\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }\r\n    }\r\n    const CancelPage =()=>{ \r\n        //Clearing the form values\r\n        setObjValues({\r\n            adverseEffect: \"\",\r\n            batchNumber: \"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: patientObj.id,\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\"\r\n        })   \r\n        props.toggle();\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\r\n              <Form >\r\n              <ModalHeader  style={{backgroundColor:\"#eeeeee\"}}>VACCINATION </ModalHeader>\r\n                <ModalBody> \r\n                        <Card >\r\n                            <CardBody>\r\n                            <Row >\r\n                            {getAge>=5 ?\r\n                            \r\n                            (\r\n                            <>\r\n                                 \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaccine\"\r\n                                    id=\"vaccine\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.vaccine} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    {vaccine.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.name}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n\r\n                                \r\n                                {errors.vaccine !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccine}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.batchNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.batchNumber}</span>\r\n                                ) : \"\" }                                         \r\n                                </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Vaccination Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Vaccination Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"number\"\r\n                                        name=\"doseNumber\"\r\n                                        id=\"doseNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.doseNumber} \r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                {errors.doseNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.doseNumber}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                              </div>                               \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"location\"\r\n                                        id=\"location\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.location} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Facility\" >Facility</option>\r\n                                        <option value=\"Community\" >Community</option>\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.location !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.location}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Facility Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"vaccinationFacility\"\r\n                                        id=\"vaccinationFacility\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.vaccinationFacility} \r\n                                    >\r\n                                    </Input>\r\n                                </InputGroup> \r\n                                {errors.vaccinationFacility !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                ) : \"\" }                                        \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}\r\n\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>    \r\n                                </>\r\n                                )\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <p><h4>The Age is less than 5</h4></p>\r\n                                </>\r\n                                )\r\n                                }                   \r\n                            </Row>\r\n                                <br/>\r\n                                <br/>                               \r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            disabled={getAge<5 || saving ?\"true\":\"\"}\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >   \r\n                            {saving?\"Saving\" : \"Save\"} \r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={()=>CancelPage()}\r\n                            style={{backgroundColor:'#992E62', color:\"#fff\"}}\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                        </CardBody>\r\n                    </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccination;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { FaShare, } from \"react-icons/fa\";\r\nimport { Dropdown, Menu, Icon as IconMenu } from 'semantic-ui-react'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Vaccination from './../Vaccination/AddViccination'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientVaccinationHistory = (props) => {\r\n    const [vacinationList, setVaccinationtList] = useState([])\r\n    const patientObj = props && props.patientObj ? props.patientObj : []\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState(false)\r\n    const toggleDeleteModal = () => setOpenDeleteModal(!openDeleteModal);\r\n    const [record, setRecord] = useState(null)\r\n    const [saving, setSaving] = useState(false)\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients Vaccinations\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}covid/vaccinations/patients/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVaccinationtList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const loadVaccinationModal =(row)=> {\r\n        setModal(!modal)\r\n    }\r\n    const LoadEditModal =(row)=>{\r\n        setRecord(row)\r\n        toggle()  \r\n    }\r\n    const LoadDeleteModal =(row)=>{\r\n        toggleDeleteModal()\r\n        setRecord(row)\r\n    }\r\n    console.log(record)\r\n    const LoadDeletePage =()=>{\r\n        setSaving(true)       \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}covid/vaccinations/${record.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            patients()\r\n            toggleDeleteModal()\r\n            setSaving(false) \r\n        })\r\n        .catch((error) => {\r\n            setSaving(false) \r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n            }\r\n            else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n        });  \r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                onClick={() => loadVaccinationModal()}\r\n                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination </span>\r\n            </Button>       \r\n            <br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Vaccination History \"\r\n              columns={[\r\n                { title: \"Vaccine\", field: \"vaccine\", filtering: false },\r\n                {\r\n                  title: \"Vaccine Date\",\r\n                  field: \"vaccineDate\",\r\n                },\r\n                \r\n                { title: \"Dose Number\", field: \"doseNumber\", filtering: false },  \r\n                { title: \"Location\", field: \"location\", filtering: false },      \r\n                { title: \"Batch Number\", field: \"batchNumber\", filtering: false }, \r\n                { title: \"Adverse Effect \", field: \"adverseEffect\", filtering: false },\r\n                { title: \"Vaccination Facility\", field: \"vaccinationFacility\", filtering: false }, \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ vacinationList.map((row) => ({\r\n                    vaccine: row.vaccineName,\r\n                    vaccineDate: row.vaccineDate,\r\n                    batchNumber: row.batchNumber,\r\n                    doseNumber: row.doseNumber,\r\n                    location: row.location,\r\n                    vaccinationFacility: row.vaccinationFacility,\r\n                    adverseEffect: row.adverseEffect,\r\n                    actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)', color:\"#fff\"}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                <Dropdown.Item onClick={()=>LoadEditModal(row)} ><IconMenu name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item onClick={()=>LoadDeleteModal(row)} > <IconMenu name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </div>\r\n                  \r\n                  }))}\r\n            \r\n                options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            />\r\n    \r\n        </CardBody>\r\n       </Card>\r\n      <Vaccination toggle={toggle} showModal={modal} patientObj={props.patientObj} loadPatients={patients} records={record}/>\r\n      <Modal show={openDeleteModal} toggle={toggleDeleteModal} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete - <b>{record && record.batchNumber}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggleDeleteModal} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientVaccinationHistory;\r\n\r\n\r\n","import React, { Fragment} from \"react\";\r\nimport VaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst RecentHistory = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"row\">\r\n        <VaccinationHistory patientObj={props.patientObj}/>\r\n     \r\n      </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst InclusionCriteria = (props) => {\r\n    \r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'INCLUSION_CRITERIA'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient record save successful\");\r\n                  props.getInclusionHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Inclusion Criteria \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InclusionCriteria;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Demograhic = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'DEMOGRAPHICS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Demographics Save Successful\");\r\n                  props.getDemographicHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Demograhics \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demograhic;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Viccination = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'VACCINATION_STATUS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Record Save Successful\");\r\n                  props.getVaccinationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Vaccination Status\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viccination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Commorbitie = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'COMORBIDITIES'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getComobitieHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Co-Morbitie\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commorbitie;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst VitalSigns = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.getVitalsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                 Admission Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VitalSigns;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ReInfection = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.getReinfectionHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Reinfection \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReInfection;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst ChronicMedication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'CHRONIC_MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getChronicMedicationHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Chronic Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChronicMedication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { token as token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst Medication = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'MEDICATION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.toggle()\r\n                  props.getMedicationHistory()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Medication \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medication;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SignsSymptons = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSignsSymptomsHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Signs and Symptoms \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignsSymptons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SupportiveCare = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [vaccination, setVaccination] = useState([])\r\n    const [values, setValues] = useState([]);\r\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    \r\n                    setVaccination(response.data);\r\n                    //setValues(response.data)\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n        const handleInputChange = e => {\r\n            setValues ({...values,  [e.target.name]: e.target.value});\r\n          }\r\n          \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        const obj = (Object.entries(values).map(([key, value]) => ({\r\n            question_id: key,\r\n            answer: value,\r\n          })))\r\n          objValues.category= 'REINFECTION'\r\n          objValues.patient_id= patientObj.id\r\n          objValues.questionAnswers =obj\r\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\r\n\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}covid/encounters`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Patient Inclusion Criteria Successful\");\r\n                  props.getSupportiveCareHistory()\r\n                  props.toggle()\r\n                  //history.push(\"/\")\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n              <Form >\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Supportive Care \r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                   \r\n                                 \r\n                                        {vaccination.map((value) => (\r\n                                            <>\r\n                                                <div className=\"form-group mb-3 col-md-6\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"role\">{value.name}</Label>\r\n                                                    {value.datatype===\"date\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"date\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"number\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                            type=\"number\"\r\n                                                            name={value.id}\r\n                                                            id={value.id}\r\n                                                            //value={value.name}\r\n                                                            onChange={handleInputChange}\r\n                                                            required\r\n                                                            >\r\n                                                            \r\n                                                        </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"select\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        {value.datatype===\"checkbox\"?\r\n                                                        (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name={value.id}\r\n                                                                id={value.id}\r\n                                                                //value={values.name}\r\n                                                                onChange={handleInputChange}\r\n                                                                required\r\n                                                                >\r\n                                                                <option value=\"\"> </option>\r\n                                                                {value.responses.map(({ name, id }) => (\r\n                                                                    <option key={id} value={id}>\r\n                                                                    {name}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Input>\r\n                                                        )\r\n                                                            :\r\n                                                            \" \"\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div>\r\n                                            </>\r\n                                        \r\n                                        ))}\r\n                                        \r\n                                             \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SaveIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                              Save \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                             onClick={props.toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportiveCare;\r\n","import React,{useState, useEffect} from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import { Link } from 'react-router-dom'\r\n//import ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from \"axios\";\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Button } from \"react-bootstrap\";\r\nimport InclusionCriteria from './InclusionCriteria';\r\nimport Demographic from './Demograhic';\r\nimport Viccination from './Vaccination';\r\nimport  Comorbitie from './Comorbitie';\r\nimport  VitalSign from './VitalSign';\r\nimport  ReInfection from './ReInfection';\r\nimport ChronicMedication from './ChronicMedication';\r\nimport  Medication from './Medication';\r\nimport  SignsSymptoms from './SignsSymptons';\r\nimport  SupportiveCare from './SupportiveCare';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nlet resultData=\"\"\r\n\r\nfunction AddmissionHome(props) {\r\n    let history = useHistory();\r\n    const { classes } = props;\r\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const [patientObj, setpatientObj] = useState(patientObjValue)\r\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\r\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\r\n    const [demographicModal, setDemographicModal] = useState(false);\r\n    const demographicToggle = () => setDemographicModal(!demographicModal);\r\n    const [viccinationModal, setViccinationModal] = useState(false);\r\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\r\n    const [comorbitieModal, setComorbitieModal] = useState(false);\r\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\r\n    const [vitalSignModal, setVitalSignModal] = useState(false);\r\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\r\n    const [reInfectionModal, setReinfectionModal] = useState(false);\r\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\r\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\r\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\r\n    const [medicationModal, setMedicationModal] = useState(false);\r\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\r\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\r\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\r\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\r\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\r\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\r\n    const [inclusionHistory, setInclusionHistory] = useState([])\r\n    const [demograhicHistory, setDemographicHistory] = useState([])\r\n    const [vitalHistory, setVitalHistory] = useState([])\r\n    const [comobitieHistory, setComobitieHistory] = useState([])\r\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\r\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\r\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\r\n    const [medicationHistory, setMedicationHistory] = useState([])\r\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\r\n\r\n    const loadInclusionCriteriaModal =()=> {\r\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\r\n    }\r\n    const DemographicModal =()=> {\r\n      setDemographicModal(!demographicModal)\r\n    }\r\n    const ViccinationModal =()=> {\r\n      setViccinationModal(!viccinationModal)\r\n    }\r\n    const VitalSignModal =()=> {\r\n      setVitalSignModal(!vitalSignModal)\r\n    }\r\n    const ComorbitieModal =()=> {\r\n      setComorbitieModal(!comorbitieModal)\r\n    }\r\n    const ReInfectionModal =()=> {\r\n      setReinfectionModal(!reInfectionModal)\r\n    }\r\n    const SignsSymptomsModal =()=> {\r\n      setSignsSymptomsModal(!signsSymptomsModal)\r\n    }\r\n    const ChronicMedicationModal =()=> {\r\n      setChronicMedicationModal(!chronicMedicationModal)\r\n    }\r\n    const MedicationModal =()=> {\r\n      setMedicationModal(!medicationModal)\r\n    }\r\n    const SupportiveCareModal =()=> {\r\n      setSupportiveCareModal(!supportiveCareModal)\r\n    }\r\n    useEffect(() => {\r\n        getVaccinationHistory()\r\n        getInclusionHistory()\r\n        getDemographicHistory()\r\n        getVitalsHistory()\r\n        getComobitieHistory()\r\n        getReinfectionHistory()\r\n        getSignsSymptomsHistory()\r\n        getChronicMedicationHistory()\r\n        getMedicationHistory()\r\n        getSupportiveCareHistory()\r\n    },[])\r\n    const getVaccinationHistory = (category) => {\r\n      axios\r\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVaccinationHistory(response.data)\r\n        })\r\n        .catch((error) => {    \r\n        }); \r\n        //return resultData\r\n    }\r\n    const getInclusionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setInclusionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getDemographicHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setDemographicHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getVitalsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getComobitieHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setComobitieHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getReinfectionHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setReinfectionHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getChronicMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setChronicMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSignsSymptomsHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSignsSymptomsHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getMedicationHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setMedicationHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n    const getSupportiveCareHistory = () => {\r\n        axios\r\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSupportiveCareHistory(response.data)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        //return resultData\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n       \r\n            {/* Sematic Ui Card */}\r\n            <Grid centered columns={2} padded>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                <Label as='a' color='blue'  ribbon>\r\n                        INCLUSION CRITERIA \r\n                        \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\r\n                    <List divided verticalAlign='middle'>\r\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\r\n                          <>\r\n                            <List.Item>\r\n                              <List.Content floated='right'>\r\n                              <Label>\r\n                                View\r\n                              </Label>\r\n                              </List.Content>\r\n                              <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                          </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='orange' ribbon='left'>\r\n                        DEMOGRAPHICS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='brown' ribbon>\r\n                    VACCINATION \r\n                    </Label>\r\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\r\n                            <List divided verticalAlign='middle'>\r\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                <Label>\r\n                                View\r\n                                </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='pink' ribbon='left'>\r\n                        VITAL SIGNS \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\r\n                                    <>\r\n                                    <List.Item>\r\n                                    <List.Content floated='right'>\r\n                                    <Label>\r\n                                    View\r\n                                    </Label>\r\n                                </List.Content>\r\n                                <Icon name='info circle'  />\r\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                                </List.Item>\r\n                                </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='purple' ribbon>\r\n                    CO-MORBIDITIE\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                            </List.Item>\r\n                            </>\r\n                            ))\r\n                            }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='violet' ribbon='left'>\r\n                    REINFECTION\r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                        ))\r\n                        }\r\n                        </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='teal' ribbon>\r\n                    SIGNS AND SYMPTOMS\r\n                   \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='green' ribbon='left'>\r\n                    CHRONIC MEDICATION \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Segment raised>\r\n                    <Label as='a' color='olive' ribbon>\r\n                    MEDICATION  \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Segment>\r\n                    <Label as='a' color='yellow' ribbon='left'>\r\n                    SUPPORTIVE CARE \r\n                    </Label>\r\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\r\n                        <List divided verticalAlign='middle'>\r\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\r\n                                <>\r\n                                <List.Item>\r\n                                <List.Content floated='right'>\r\n                            <Label>\r\n                            View\r\n                            </Label>\r\n                            </List.Content>\r\n                            <Icon name='info circle'  />\r\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\r\n                        </List.Item>\r\n                        </>\r\n                    ))\r\n                    }\r\n                    </List>\r\n                </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n\r\n         </CardContent>\r\n      </Card>\r\n\r\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\r\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\r\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\r\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\r\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\r\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\r\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\r\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\r\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\r\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(AddmissionHome);\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport Biometrics from './Biometric'\r\nimport AddmissionHome from './../Admission/AddmissionHome';\r\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >KP-PREV /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='addmission' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='vaccination' &&( <PatientVaccinationHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='discharge' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='icu' &&( <AddmissionHome patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} />)}\r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash, } from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {FaPlus, FaAngleDown} from 'react-icons/fa'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:1,\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    //const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [covidEffect, setCovidEffect] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    //const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"vaccinationEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [showContactCard, setShowContactCard] = useState(true);\r\n     const [vaccine, setVaccine] = useState([]);\r\n     //const [showRelativeCard, setShowRelativeCard] = useState(false);\r\n     const [objValues, setObjValues] = useState(\r\n        {   adverseEffect: \"\",\r\n            batchNumber:\"\",\r\n            doseNumber: \"\",\r\n            location: \"\",\r\n            patientId: \"\",\r\n            vaccinationFacility: \"\",\r\n            vaccine: \"\",\r\n            vaccineDate: \"\",\r\n            knownMedicalCondition: \"\",\r\n            medicalCondition: \"\",\r\n            occupation: \"\",\r\n            vaccineId: \"\",\r\n            visitDate: \"\",\r\n            patientId: \"\",\r\n            visitId: \"\",\r\n            workInHealthSector: \"\"\r\n        });\r\n     \r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        VACCINE();        \r\n        GetCountry();\r\n        setStateByCountryId()\r\n        COVID_ADVERSE_EFFECT()\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            toast.error('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n    //covid/codeset?category=VACCINE\r\n    const VACCINE = () => {\r\n        axios\r\n        .get(`${baseUrl}covid/codeset?category=VACCINE`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setVaccine(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    const COVID_ADVERSE_EFFECT = () => {\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COVID_ADVERSE_EFFECT`,\r\n            { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setCovidEffect(response.data);\r\n        })\r\n        .catch((error) => {\r\n            //console.log(error);\r\n        });\r\n\r\n    }\r\n    //COVID_ADVERSE_EFFECT\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    // const loadTopLevelCountry = useCallback(async () => {\r\n    //     const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n    //     settopLevelUnitCountryOptions(response.data);\r\n    // }, []);\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n    const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n            setStateByCountryId(1); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId() {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/1`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data.sort());\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n        }\r\n                \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value === \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value === \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {  \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n           // temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            //temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //VACCINATION FORM VALIDATION\r\n            temp.vaccine = objValues.vaccine ? \"\" : \"This field is required\"\r\n            temp.vaccineDate = objValues.vaccineDate ? \"\" : \"This field is required\"\r\n            //temp.doseNumber = objValues.doseNumber ? \"\" : \"This field is required\"\r\n            temp.location = objValues.location ? \"\" : \"This field is required\"\r\n            temp.batchNumber = objValues.batchNumber ? \"\" : \"This field is required\"\r\n            temp.adverseEffect = objValues.adverseEffect ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            setSaving(true)\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                //patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.vaccinationEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}covid/enrollments`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                setSaving(false)\r\n                history.push('/');\r\n            } catch (error) {   \r\n                setSaving(false)             \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name==='location' && objValues.location!=='Facility'){\r\n            objValues.vaccinationFacility=\"\"\r\n            setObjValues ({...objValues,  ['vaccinationFacility']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setRelatives({...relatives, [inputName]: NumberValue})    \r\n    }\r\n    // const checkPhoneNumberBasic=(e, inputName)=>{\r\n    //     const limit = 10;\r\n    //     setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    // } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox handleCheckBoxworkInHealthSector handleCheckBoxknownMedicalCondition\r\n    const handleCheckBoxworkInHealthSector =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['workInHealthSector']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['workInHealthSector']: false}); \r\n        }\r\n    }\r\n    \r\n    const handleInputChangePhoneNumber=(e, inputName)=>{\r\n        const limit = 11;\r\n        const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, ''))\r\n        setBasicInfo({...basicInfo, [inputName]: NumberValue})\r\n    }\r\n    const checkNumberLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    const handleCheckBoxknownMedicalCondition =e =>{\r\n        if(e.target.checked){\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: e.target.checked});  \r\n            //setOvcEnrolled(true)\r\n        }else{\r\n            setObjValues ({...objValues,  ['knownMedicalCondition']: false});  \r\n        }\r\n    }\r\n    const onClickContactCard =() =>{\r\n      setShowContactCard(!showContactCard)\r\n    }\r\n    const onClickRelativeCard =() =>{\r\n      setShowRelative(!showRelative)\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >COVID-19 /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration===\"\" ? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        \r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"5\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                                <p><b style={{color:\"red\"}}>{basicInfo.age!==\"\" && basicInfo.age< 5 ? \"The minimum age is 5\" : \" \"} </b></p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status </Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level </Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                    {showContactCard===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickContactCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showContactCard && (\r\n                                  <div className=\"card-body\">\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      maxLength={5}\r\n                                                      name=\"phoneNumber\"\r\n                                                      id=\"phoneNumber\"\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'phoneNumber')}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                                  {errors.phoneNumber !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                      ) : \"\" }\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Alt. Phone Number</Label>\r\n                                                  {/* <PhoneInput\r\n                                                      containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                      inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                      country={'ng'}\r\n                                                      placeholder=\"(234)7099999999\"\r\n                                                      value={basicInfo.altPhonenumber}\r\n                                                      masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                      onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                      \r\n                                                  /> */}\r\n                                                  <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"altPhonenumber\"\r\n                                                    id=\"altPhonenumber\"\r\n                                                    onChange={(e)=>{handleInputChangePhoneNumber(e,'altPhonenumber')}}\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                 />\r\n                                                  {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                  <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                  ) : \"\" } */}\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Email</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"email\"\r\n                                                      name=\"email\"\r\n                                                      id=\"email\"\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      value={basicInfo.email}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      required\r\n                                                  />\r\n                                                \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Country <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"countryId\"\r\n                                                      id=\"countryId\"\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      value={basicInfo.countryId}\r\n                                                      disabled\r\n                                                      onChange={getStates}\r\n                                                      >\r\n                                                      <option value={\"\"}>Select</option>\r\n                                                      {countries.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.countryId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.countryId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>State <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"stateId\"\r\n                                                      id=\"stateId\"\r\n                                                      value={basicInfo.stateId}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={getProvinces}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {states.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.stateId !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.stateId}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Province/District/LGA <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <select\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"district\"\r\n                                                      id=\"district\"\r\n                                                      value={basicInfo.district}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      >\r\n                                                      <option value=\"\">Select</option>\r\n                                                      {provinces.map((value, index) => (\r\n                                                          <option key={index} value={value.id}>\r\n                                                              {value.name}\r\n                                                          </option>\r\n                                                      ))}\r\n                                                  </select>\r\n                                                  {errors.district !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.district}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n\r\n                                      <div className={\"row\"}>\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Street Address <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"address\"\r\n                                                      id=\"address\"\r\n                                                      value={basicInfo.address}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                  />\r\n                                                {errors.address !==\"\" ? (\r\n                                                      <span className={classes.error}>{errors.address}</span>\r\n                                                      ) : \"\" }\r\n                                              </FormGroup>\r\n                                          </div>\r\n\r\n                                          <div className=\"form-group  col-md-4\">\r\n                                              <FormGroup>\r\n                                                  <Label>Landmark</Label>\r\n                                                  <input\r\n                                                      className=\"form-control\"\r\n                                                      type=\"text\"\r\n                                                      name=\"landmark\"\r\n                                                      id=\"landmark\"\r\n                                                      value={basicInfo.landmark}\r\n                                                      onChange={handleInputChangeBasic}\r\n                                                      style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                      \r\n                                                  />\r\n                                                  \r\n                                              </FormGroup>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                    {showRelative===false  ? (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaPlus /></span></>) :  (<><span className=\"float-end\" style={{cursor: \"pointer\"}} onClick={onClickRelativeCard}><FaAngleDown /></span> </>)}\r\n                                </div>\r\n                                {showRelative && (\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        {/* <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        /> */}\r\n                                                                        <Input\r\n                                                                            type=\"text\"\r\n                                                                            name=\"phone\"\r\n                                                                            id=\"phone\"\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                            value={relatives.phone}\r\n                                                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {errors.phone !==\"\" ? (\r\n                                                                            <span className={classes.error}>{errors.phone}</span>\r\n                                                                            ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        {/* <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton> */}\r\n                                    {/* </div> */}\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Adding First DOSAGE FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>COVID-19 First Dosage</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-4\">                                    \r\n                            <div className=\"form-check custom-checkbox ml-1 \">\r\n                                <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name=\"workInHealthSector\"\r\n                                id=\"workInHealthSector\"                                        \r\n                                onChange={handleCheckBoxworkInHealthSector}\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"workInHealthSector\"\r\n                                >\r\n                                Do you work in the Health sector ?\r\n                                </label>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                        \r\n                            <div className=\"form-check custom-checkbox ml-1 \">\r\n                                <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name=\"knownMedicalCondition\"\r\n                                id=\"knownMedicalCondition\"                                        \r\n                                onChange={handleCheckBoxknownMedicalCondition}\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"knownMedicalCondition\"\r\n                                >\r\n                                Any known medical condition ?\r\n                                </label>\r\n                            </div>\r\n                            </div>\r\n                            {objValues.knownMedicalCondition===true &&(                                    \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label for=\"knownMedicalCondition\">Medical conditions </Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"medicalCondition\"\r\n                                            value={basicInfo.medicalCondition}\r\n                                            id=\"medicalCondition\"\r\n                                            onChange={handleInputChangeBasic}\r\n                                            style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                \r\n                            </div>\r\n                            )}\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                          <FormGroup>\r\n                                          <Label >Vaccine <span style={{ color:\"red\"}}> *</span></Label>\r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"vaccine\"\r\n                                              id=\"vaccine\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccine} \r\n                                          >\r\n                                              <option value=\"\" >Select</option>\r\n                                              {vaccine.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.name}\r\n                                                </option>\r\n                                            ))}\r\n                                          </Input>\r\n\r\n                                         \r\n                                          {errors.vaccine !==\"\" ? (\r\n                                                  <span className={classes.error}>{errors.vaccine}</span>\r\n                                          ) : \"\" }           \r\n                                          </FormGroup>\r\n                              </div>     \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Date of First Dosage <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"date\"\r\n                                              name=\"vaccineDate\"\r\n                                              id=\"vaccineDate\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccineDate} \r\n                                              max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                          />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.vaccineDate !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccineDate}</span>\r\n                                      ) : \"\" }\r\n                                      </FormGroup>\r\n                              </div>\r\n                                                             \r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Location <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"select\"\r\n                                              name=\"location\"\r\n                                              id=\"location\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.location} \r\n                                          >\r\n                                              <option value=\"\" >Select</option>\r\n                                              <option value=\"Facility\" >Facility</option>\r\n                                              <option value=\"Community\" >Community</option>\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.location !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.location}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              {objValues.location==='Facility' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Facility Name </Label>\r\n                                      <InputGroup> \r\n                                          <Input \r\n                                              type=\"text\"\r\n                                              name=\"vaccinationFacility\"\r\n                                              id=\"vaccinationFacility\"\r\n                                              onChange={handleInputChange}\r\n                                              value={objValues.vaccinationFacility} \r\n                                          >\r\n                                          </Input>\r\n                                      </InputGroup> \r\n                                      {errors.vaccinationFacility !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.vaccinationFacility}</span>\r\n                                      ) : \"\" }                                        \r\n                                      </FormGroup>\r\n                              </div>\r\n                              )}\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                      <FormGroup>\r\n                                      <Label >Batch Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                                      <InputGroup> \r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"batchNumber\"\r\n                                        id=\"batchNumber\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.batchNumber} \r\n                                    />\r\n\r\n                                      </InputGroup>\r\n                                      {errors.batchNumber !==\"\" ? (\r\n                                              <span className={classes.error}>{errors.batchNumber}</span>\r\n                                      ) : \"\" }                                         \r\n                                      </FormGroup>\r\n                              </div>\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Adverse Effect </Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffect\"\r\n                                        id=\"adverseEffect\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffect} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"Yes\" >Yes</option>\r\n                                        <option value=\"No\" >No</option>\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              {objValues.adverseEffect==='Yes' && (\r\n                              <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Reaction Type (Adverse Effect)</Label>\r\n                                <InputGroup> \r\n                                    <Input \r\n                                        type=\"select\"\r\n                                        name=\"adverseEffectOption\"\r\n                                        id=\"adverseEffectOption\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.adverseEffectOption} \r\n                                    >\r\n                                        <option value=\"\" >Select</option>\r\n                                            {covidEffect.map((value) => (\r\n                                            <option key={value.id} value={value.display}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n\r\n                                </InputGroup>\r\n                                {errors.adverseEffect !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.adverseEffect}</span>\r\n                                ) : \"\" }           \r\n                                </FormGroup>\r\n                              </div>\r\n                              )}      \r\n                            </div>\r\n                           \r\n                            </div>\r\n                            </div>\r\n                            {/* END OF First DOSAGE */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport KpPrev from \"./main/webapp/jsx/components/KpPrev\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n          <Route path=\"/kp-prev\">\r\n            <KpPrev />\r\n          </Route>\r\n\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}