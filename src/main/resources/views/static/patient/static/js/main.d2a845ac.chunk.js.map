{"version":3,"sources":["api.js","main/webapp/components/RegisterPatient.js","main/webapp/components/ViewPatient.js","main/webapp/components/CaptureBiometric.js","main/webapp/components/PatientCard.js","main/webapp/images/fingerprintimage.png","main/webapp/components/Biometrics.js","main/webapp/components/PatientDashboard.js","main/webapp/components/PersonDemographics/index.js","main/webapp/components/ClientDashboard/CheckIn/index.js","main/webapp/components/ClientDashboard/index.js","main/webapp/components/PatientsCard.js","main/webapp/components/ReCaptureBiometric.js","main/webapp/components/SplitActionButton.js","main/webapp/components/PatientRecapture.js","main/webapp/components/Recapture.js","main/webapp/components/PreviousRecapture.js","main/webapp/components/biometrics/index.js","main/webapp/images/fingers/left_hand_6.png","main/webapp/images/fingers/left_hand_7.png","main/webapp/images/fingers/left_hand_8.png","main/webapp/images/fingers/left_hand_9.png","main/webapp/images/fingers/left_hand_10.png","main/webapp/images/fingers/right_hand_1.png","main/webapp/images/fingers/right_hand_2.png","main/webapp/images/fingers/right_hand_3.png","main/webapp/images/fingers/right_hand_4.png","main/webapp/images/fingers/right_hand_5.png","main/webapp/components/Home/PatientList.js","main/webapp/components/Home/BiometricsList.js","main/webapp/components/Home/NotCaptured.js","main/webapp/components/Home/Biometrics.js","main/webapp/components/Home/CheckedInPatients.js","main/webapp/components/MigrationDQA/DuplicateHospitalNumbers.js","main/webapp/components/MigrationDQA/index.js","main/webapp/components/index.js","App.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","library","add","faCheckSquare","faCoffee","faEdit","faTrash","useStyles","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","Select","height","button","root","marginBottom","flexGrow","color","fontWeight","borderRadius","fontSize","demo","backgroundColor","palette","background","default","inline","schema","yup","shape","dateOfRegistration","required","hospitalNumber","firstName","middleName","nullable","lastName","sex","employmentStatus","maritalStatus","dob","dateOfBirth","age","ninNumber","pnumber","altPhonenumber","email","address","landmark","countryId","stateId","district","RegisterPatient","props","patientId","_useForm","useForm","resolver","yupResolver","register","watch","setValue","getValues","clearErrors","setError","handleSubmit","reset","formState","errors","_useState","isSubmitting","useState","Date","toISOString","substr","replace","_useState2","_slicedToArray","today","_useState3","_useState4","minDOB","_useState5","_useState6","maxDOB","setMaxDOB","_useState7","_useState8","contacts","setContacts","_useState9","_useState10","saving","_useState11","_useState12","ageDisabled","setAgeDisabled","_useState13","_useState14","showRelative","setShowRelative","_useState15","_useState16","editRelative","setEditRelative","_useState17","_useState18","_useState19","_useState20","sexOptions","setSexOptions","_useState21","_useState22","maritalStatusOptions","setMaritalStatusOptions","_useState23","_useState24","educationOptions","setEducationOptions","_useState25","_useState26","occupationOptions","setOccupationOptions","_useState27","_useState28","relationshipOptions","setRelationshipOptions","_useState29","_useState30","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","_useState31","_useState32","stateUnitOptions","setStateUnitOptions","_useState33","_useState34","districtUnitOptions","setDistrictUnitOptions","_useState35","_useState36","checkHospitalNumberError","setCheckHospitalNumberError","_useState37","_useState38","checkNINError","setCheckNINError","userDetail","state","user","_useState39","_useState40","patientFacilityId","setPatientFacilityId","classes","history","useHistory","_React$useState","React","_React$useState2","open","setOpen","toggle","locationState","useLocation","getRelationship","relationshipId","relationship","find","obj","id","getPhoneContactPoint","contactPoint","value","phoneNumberFormatCheck","phone","_phone$value","undefined","charAt","calculate_age","birthDate","split","getFullYear","getPatient","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_contactPoint$contact","_contactPoint$contact2","_contactPoint$contact3","response","sexCodeset","patient","_contacts","identifiers","altphone","country","education","stateOptions","districtOptions","wrap","_context","prev","next","axios","concat","baseUrl","headers","Authorization","sent","data","console","log","contact","identifier","type","length","gender","_","upperFirst","lowerCase","facilityId","otherName","surname","format","loadOrganisationUnitsByParentId","t0","t1","city","line","stop","checkHospitalNumber","_ref2","_callee2","e","_context2","post","responseType","then","catch","error","_x","apply","arguments","checkNIN","_ref3","_callee3","_context3","target","_x2","onSubmit","_ref4","_callee4","patientForm","_response","_context4","toast","position","POSITION","TOP_RIGHT","active","organisationUnitId","postalCode","deceased","deceasedDateTime","sexId","assignerId","maritalStatusId","educationId","highestQualification","employmentStatusId","isDateOfBirthEstimated","push","put","status","success","_x3","loadSexes","_callee5","_context5","loadMaritalStatus","_callee6","_context6","loadEducation","_callee7","_context7","loadOccupation","_callee8","_context8","loadRelationships","_callee9","_context9","loadTopLevelCountry","_callee10","_context10","_ref11","_callee11","parentId","_context11","abrupt","_x4","onCountryChange","_ref12","_callee12","_context12","_x5","statesList","_ref13","_callee13","_context13","onStateChange","_ref14","_callee14","_context14","_x6","handleDateOfBirthChange","useEffect","sexRows","maritalStatusRows","educationRows","occupationRows","relationshipRows","topLevelUnitCountryRows","stateRows","districtRows","map","index","_jsx","children","maritalStatusOption","educationOption","occupationOption","relationshipOption","topLevelUnitCountryOption","name","stateUnitOption","districtUnitOption","checkPhoneNumber","inputName","alphabetOnly","result","_jsxs","_Fragment","ToastContainer","autoClose","hideProgressBar","Card","className","CardContent","style","paddingBottom","Breadcrumbs","Typography","Link","to","pathname","Button","variant","startIcon","TiArrowBack","textTransform","Form","FormGroup","Label","for","_objectSpread","max","onChange","border","autoComplete","onInput","maxLength","slice","minLength","message","defaultChecked","min","age_now","handleDobChange","disabled","currentDate","setDate","setMonth","moment","toDate","handleAgeChange","PhoneInput","containerStyle","inputStyle","masks","ng","at","placeholder","isValid","countryCode","validate","test","isValidEmail","item","onClick","relative","handleEditRelative","FontAwesomeIcon","icon","setTimeout","splice","handleDeleteRelative","relationshipType","cfirstName","cmiddleName","onlyCountries","contactPhoneNumber","contactEmail","contactAddress","MatButton","clastName","fullName","shouldFocus","AddIcon","Spinner","SaveIcon","CancelIcon","Modal","show","size","centered","backdrop","Header","Title","Body","Footer","ViewPatient","setDisValue","_useState41","_useState42","_useState43","_useState44","patientData","setPatientData","m","getMonth","getDate","districtValue","defaultValue","Object","keys","readOnly","input","withStyles","heading","typography","pxToRem","secondaryHeading","text","secondary","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","link","primary","main","textDecoration","patientObj","permissions","modal","setModal","patientBiometricStatus","setPatientBiometricStatus","biometricStatus","setBiometricStatus","setDevices","TemplateType","Accordion","defaultExpanded","AccordionSummary","Row","Col","md","root2","getHospitalNumber","fontFamily","phoneContact","getPhone","AccordionDetails","Detail","includes","as","tag","marginLeft","lineHeight","Biometrics","biometricDevices","setbiometricDevices","biometricType","templateType","device","reason","objValues","setObjValues","fingerType","setFingerType","devices","loading","setLoading","pageLoading","setPageLoading","_React$useState3","_React$useState4","_React$useState5","_React$useState6","setTryAgain","_React$useState7","_React$useState8","setSuccess","setErrors","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","imageQuality","setImageQuality","isNewStatus","setIsNewStatus","getPersonBiometrics","bgcolor","green","_ref","fingersCodeset","personCapturedFingers","biometricItems","_biometricItems","uniq","extend","captured","clear_storelist","x","handleInputChange","_objectSpread2","_defineProperty","saveBiometrics","preventDefault","capturedObj","recapture","capturedBiometricsList","uniqBy","BOTTOM_CENTER","updatePatientBiometricStatus","deleteTempBiometrics","delete","resp","deletedRecord","filter","info","getFingerprintsQuality","Badge","flex","boxShadow","Input","temp","values","every","ERROR","biometricsEnrollments","_toConsumableArray","FingerprintIcon","List","celled","horizontal","Item","paddingLeft","mainImageQuality","Icon","float","Content","justifyContent","RestartAltIcon","minHeight","flexWrap","biometric","lastModifiedDate","Dropdown","Toggle","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","y","cx","cy","r","Menu","alignRight","finger","newStoredBiometrics","reject","DeleteIcon","src","fingerprintimage","alt","iso","Alert","severity","AlertTitle","CheckBoxOutlineBlankIcon","CheckBoxIcon","checkinModal","maxWidth","textAlign","checkInDatePicker","newDate","Index","checkInDate","setCheckInDate","checkOutDate","setCheckOutDate","control","allServices","setAllServices","checkinStatus","setCheckinStatus","modalCheckOut","setModalCheckOut","services","setServices","selected","selectedServices","setSelectedServices","patientVisits","setPatientVisits","personId","visitStartDate","serviceIds","visitDto","checkInObj","loadServices","entries","label","moduleServiceName","moduleServiceCode","Swal","fire","title","loadPatientVisits","visits","service","MenuItem","onCancelCheckIn","onCancelCheckOut","checkInServicesID","floated","isOpen","ModalHeader","ModalBody","Paper","gridRowGap","Grid","container","xs","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDateTimePicker","renderInput","params","TextField","sx","fullWidth","newValue","maxDate","maxTime","DualListBox","options","selectedValues","getVisitID","biometricsModuleInstalled","setBiometricsModuleInstalled","bioStatus","panes","menuItem","render","Tab","Pane","MaterialTable","columns","field","filtering","headerStyle","paddingRight","isLoading","row","rowStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","paddingTop","PersonDemographics","CheckIn","SplitActionButton","anchorRef","useRef","selectedIndex","handleClose","ButtonGroup","ref","actions","borderRight","Divider","orientation","flexItem","prevOpen","FaCaretDown","Popper","anchorEl","current","role","transition","disablePortal","zIndex","TransitionProps","placement","Grow","transformOrigin","minWidth","ClickAwayListener","onClickAway","MenuList","autoFocusItem","option","deleteAction","Math","random","PatientRecapture","_props$storedBiometri","maxHeight","fullscreen","ModalFooter","Recapture","recapturedFingered","setRecapturedFingered","CircularProgress","warning","WARNING","LinearProgress","getRecaptureCount","tableIcons","Add","forwardRef","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","PreviousRecapture","createdDate","modalNew","setModalNew","toggleNew","tableRef","biometrics","setBiometrics","setCurrentPage","icons","record","archived","captureDate","count","number","personUuid","biometricData","date","actionItems","onChangePage","page","PatientsCard","PatientList","localStorage","setItem","JSON","stringify","enablePPI","setEnablePPI","currentPage","FaEye","MdPerson","MdModeEdit","MdDeleteForever","onCancelDelete","enablePPIColumns","PPISelect","FormControlLabel","Checkbox","checked","hidden","query","Promise","resolve","totalCount","records","Boolean","join","toLowerCase","toUpperCase","totalRecords","firstname","getItem","removeItem","timer","BiometricsList","setPatients","setPermissions","loadPatients","MdFingerprint","NotCaptured","setStatus","onDelete","reload","select","helperText","handleChangeStatus","CheckedInPatients","DuplicateHospitalNumbers","rowData","userPermission","BiometricsCapture","MigrationDQA","CardBody","FaUserPlus","App","Router","Switch","Route","path","BiometricsDashboard","RegisterPatientPage","PatientDashboardPage","Dashboard","Components","ClientDashboard","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2a845ac.chunk.js","sourcesContent":["\r\nexport const token = new URLSearchParams(window.location.search).get(\"jwt\");\r\nexport const url = \"/api/v1/\";\r\n/*\r\nexport const url = \"http://localhost:8383/api/v1/\";\r\nexport const token =\r\n  \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjg5MTk0MDQxfQ.p--pBMUzv-s66CMYB7-ohr7ekeXqTIdiG_lcDVw6nJm485H_KvcexyF5LqdJ2dIgCMvjHvoU5ssU6TJyPAARoA\";\r\n*/","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Form, FormGroup, Label, Spinner } from \"reactstrap\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport _ from \"lodash\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {},\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    marginBottom: 20,\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nconst schema = yup.object().shape({\r\n  dateOfRegistration: yup.date().required(),\r\n  hospitalNumber: yup.string().required(),\r\n  firstName: yup.string().required(),\r\n  middleName: yup.string().nullable(),\r\n  lastName: yup.string().required(),\r\n  sex: yup.number().required(),\r\n  employmentStatus: yup.number().required(),\r\n  //highestQualification: yup.number().nullable(),\r\n  maritalStatus: yup.number().required(),\r\n  dob: yup.date().required(),\r\n  dateOfBirth: yup.string().required(),\r\n  age: yup.number(),\r\n  ninNumber: yup.string().nullable(),\r\n  pnumber: yup.string().nullable(),\r\n  altPhonenumber: yup.string().nullable(),\r\n  email: yup.string().nullable(),\r\n  address: yup.string().nullable(),\r\n  landmark: yup.string().nullable(),\r\n  countryId: yup.number().required(),\r\n  stateId: yup.number().required(),\r\n  district: yup.number().nullable(),\r\n});\r\n\r\nconst isValidEmail = (email) =>\r\n  // eslint-disable-next-line no-useless-escape\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n    email\r\n  );\r\n\r\nconst RegisterPatient = (props) => {\r\n  const {\r\n    register,\r\n    watch,\r\n    setValue,\r\n    getValues,\r\n    clearErrors,\r\n    setError,\r\n    handleSubmit,\r\n    reset,\r\n    formState,\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const { errors, isSubmitting } = formState;\r\n  const watchPnumber = watch(\"pnumber\", false);\r\n  const watchAltPhonenumber = watch(\"altPhonenumber\", false);\r\n  const watchContactPhoneNumber = watch(\"contactPhoneNumber\", false);\r\n  const watchShowAge = watch(\"age\", false);\r\n  const [today, setToday] = useState(\r\n    new Date().toISOString().substr(0, 10).replace(\"T\", \" \")\r\n  );\r\n  const [minDOB, setMinDOB] = useState(\r\n    new Date(\"1/1/1930\").toISOString().substr(0, 10).replace(\"T\", \" \")\r\n  );\r\n  const [maxDOB, setMaxDOB] = useState(\r\n    new Date().toISOString().substr(0, 10).replace(\"T\", \" \")\r\n  );\r\n  const [contacts, setContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  const [editRelative, setEditRelative] = useState(null);\r\n  const [submit, setSubmit] = useState(false);\r\n  const [sexOptions, setSexOptions] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n  const [stateUnitOptions, setStateUnitOptions] = useState([]);\r\n  const [districtUnitOptions, setDistrictUnitOptions] = useState([]);\r\n  const [checkHospitalNumberError, setCheckHospitalNumberError] =\r\n    useState(false);\r\n  const [checkNINError, setCheckNINError] = useState(false);\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const [patientFacilityId, setPatientFacilityId] = useState(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const location = useLocation();\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  patientId = locationState ? locationState.patientId : null;\r\n\r\n  const getNames = (relationship) => {\r\n    const surname = relationship.surname;\r\n    const firstName = relationship.firstName;\r\n    const otherName = relationship.otherName ? relationship.otherName : \"\";\r\n    return surname + \", \" + firstName + \" \" + otherName;\r\n  };\r\n  const getRelationship = (relationshipId) => {\r\n    const relationship = relationshipOptions.find(\r\n      (obj) => obj.id == relationshipId\r\n    );\r\n    return relationship ? relationship.display : \"\";\r\n  };\r\n  const getPhoneContactPoint = (contactPoint) => {\r\n    if (contactPoint.value === null) {\r\n    } else {\r\n      return contactPoint ? phoneNumberFormatCheck(contactPoint).value : \"\";\r\n    }\r\n  };\r\n  const getAddress = (address) => {\r\n    return address && address.line && address.line.length > 0\r\n      ? address.line[0]\r\n      : \"\";\r\n  };\r\n  const phoneNumberFormatCheck = (phone) => {\r\n    //console.log(\"err\", phone);\r\n    if (\r\n      phone != undefined &&\r\n      typeof phone?.value !== null &&\r\n      typeof phone?.value !== \"undefined\" &&\r\n      phone?.value?.charAt(0) === \"0\"\r\n    ) {\r\n      phone.value = phone.value.replace(\"0\", \"234\");\r\n    }\r\n    return phone;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    //const m = today.getMonth() - birthDate.getMonth();\r\n    // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n    //   age_now--;\r\n    // }\r\n    // if (age_now === 0) {\r\n    //   return m;\r\n    // }\r\n    return age_now;\r\n  };\r\n  const getPatient = useCallback(async () => {\r\n    if (patientId) {\r\n      const response = await axios.get(`${baseUrl}patient/${patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const sexCodeset = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const patient = response.data;\r\n      console.log(patient);\r\n      const contacts = patient.contact ? patient.contact : [];\r\n      setContacts(contacts.contact);\r\n      const identifiers = patient.identifier;\r\n      const address = patient.address;\r\n      const contactPoint = patient?.contactPoint;\r\n      const hospitalNumber = identifiers.identifier.find(\r\n        (obj) => obj.type == \"HospitalNumber\"\r\n      );\r\n      const phone = phoneNumberFormatCheck(\r\n        contactPoint?.contactPoint?.find((obj) => obj.type == \"phone\")\r\n      );\r\n      const email = contactPoint?.contactPoint?.find(\r\n        (obj) => obj.type == \"email\"\r\n      );\r\n      const altphone = phoneNumberFormatCheck(\r\n        contactPoint?.contactPoint?.find((obj) => obj.type == \"altphone\")\r\n      );\r\n      const country =\r\n        address && address.address && address.address.length > 0\r\n          ? address.address[0]\r\n          : null;\r\n      const gender = patient.gender;\r\n      //console.log(sexCodeset.data);\r\n      //console.log(_.upperFirst(_.lowerCase(patient.sex)));\r\n      const sex = _.find(sexCodeset.data, {\r\n        display: _.upperFirst(_.lowerCase(patient.sex)),\r\n      }).id;\r\n      const employmentStatus = patient.employmentStatus;\r\n      const education = patient.education;\r\n      const maritalStatus = patient.maritalStatus;\r\n      setPatientFacilityId(patient.facilityId);\r\n      setValue(\"dateOfRegistration\", patient.dateOfRegistration);\r\n      setValue(\"facilityId\", patient.facilityId);\r\n      setValue(\"ninNumber\", patient.ninNumber);\r\n      setValue(\"firstName\", patient.firstName);\r\n      setValue(\"middleName\", patient.otherName);\r\n      setValue(\"lastName\", patient.surname);\r\n      setValue(\"hospitalNumber\", hospitalNumber ? hospitalNumber.value : \"\");\r\n      setValue(\"maritalStatus\", maritalStatus ? maritalStatus.id : \"\");\r\n      setValue(\"employmentStatus\", employmentStatus ? employmentStatus.id : \"\");\r\n\r\n      //setValue('gender', gender.id);\r\n      setValue(\"sex\", sex);\r\n      setValue(\"highestQualification\", education ? education.id : \"\");\r\n      setValue(\"dob\", format(new Date(patient.dateOfBirth), \"yyyy-MM-dd\"));\r\n      setValue(\"age\", calculate_age(patient.dateOfBirth));\r\n      if (country) {\r\n        setValue(\"countryId\", country.countryId);\r\n        const stateOptions = country.countryId\r\n          ? await loadOrganisationUnitsByParentId(country.countryId)\r\n          : \"\";\r\n        setStateUnitOptions(stateOptions);\r\n        setValue(\"stateId\", country.stateId);\r\n        const districtOptions = country.stateId\r\n          ? await loadOrganisationUnitsByParentId(country.stateId)\r\n          : \"\";\r\n        setDistrictUnitOptions(districtOptions);\r\n        setValue(\"district\", country.district);\r\n        setValue(\"address\", country.city);\r\n        setValue(\"landmark\", country.line[0]);\r\n      }\r\n      setValue(\"pnumber\", phone ? phone.value : \"+234\");\r\n      setValue(\"email\", email ? email.value : null);\r\n      setValue(\"altPhonenumber\", altphone ? altphone.value : \"+234\");\r\n    }\r\n  }, []);\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  const checkHospitalNumber = async (e) => {\r\n    setCheckHospitalNumberError(false);\r\n    await axios\r\n      .post(`${baseUrl}patient/exist/hospital-number`, e, {\r\n        responseType: \"text\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"text/plain\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setCheckHospitalNumberError(true);\r\n        } else {\r\n          setCheckHospitalNumberError(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const checkNIN = async (e) => {\r\n    setCheckNINError(false);\r\n    if (e.target.value.length > 0) {\r\n      await axios\r\n        .post(\r\n          `${baseUrl}patient/exist/nin-number/${e.target.value}`,\r\n          e.target.value,\r\n          {\r\n            responseType: \"text\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setCheckNINError(true);\r\n          } else {\r\n            setCheckNINError(false);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const handleSaveRelationship = (e) => {\r\n    const relationshipType = getValues(\"relationshipType\");\r\n    const cfirstName = getValues(\"cfirstName\");\r\n    const cmiddleName = getValues(\"cmiddleName\");\r\n    const clastName = getValues(\"clastName\");\r\n    const contactPhoneNumber = getValues(\"contactPhoneNumber\");\r\n    const contactEmail = getValues(\"contactEmail\");\r\n    const contactAddress = getValues(\"contactAddress\");\r\n    if (!relationshipType) {\r\n      setError(\r\n        \"relationshipType\",\r\n        { type: \"custom\", message: \"Relationship is required\" },\r\n        { shouldFocus: true }\r\n      );\r\n      return;\r\n    }\r\n    if (!cfirstName) {\r\n      setError(\r\n        \"cfirstName\",\r\n        { type: \"custom\", message: \"FirstName is required\" },\r\n        { shouldFocus: true }\r\n      );\r\n      return;\r\n    }\r\n    //        if (!clastName) {\r\n    //            setError(\"clastName\", {  type: 'custom', message: 'LastName is required' }, { shouldFocus: true });\r\n    //            return;\r\n    //        }\r\n\r\n    if (!contactAddress) {\r\n      setError(\r\n        \"contactAddress\",\r\n        { type: \"custom\", message: \"Address is required\" },\r\n        { shouldFocus: true }\r\n      );\r\n      return;\r\n    }\r\n\r\n    const contact = {\r\n      address: {\r\n        line: [contactAddress],\r\n      },\r\n      contactPoint: {\r\n        type: \"phone\",\r\n        value: contactPhoneNumber,\r\n      },\r\n      firstName: cfirstName,\r\n      fullName: cfirstName + \" \" + cmiddleName + \" \" + clastName,\r\n      relationshipId: relationshipType,\r\n      surname: clastName,\r\n      otherName: cmiddleName,\r\n    };\r\n\r\n    if (editRelative != null) {\r\n      contacts.splice(editRelative, 1);\r\n      setContacts(contacts.concat(contact));\r\n    } else {\r\n      if (contacts === undefined) {\r\n        setContacts([].concat(contact));\r\n      } else {\r\n        setContacts(contacts.concat(contact));\r\n      }\r\n    }\r\n    setShowRelative(false);\r\n  };\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  const handleEmailValidation = (email) => {\r\n    console.log(\"ValidateEmail was called with\", email);\r\n\r\n    const isValid = isValidEmail(email);\r\n    if (!isValid) {\r\n      errors.email.message = \"Please enter a valid email\";\r\n    }\r\n    const validityChanged =\r\n      (errors.email && isValid) || (!errors.email && !isValid);\r\n    if (validityChanged) {\r\n      console.log(\"Fire tracker with\", isValid ? \"Valid\" : \"Invalid\");\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n  const onSubmit = async (data) => {\r\n    console.log(\"data\", data);\r\n\r\n    if (\r\n      _.find(errors, function (error) {\r\n        return console.log(\"err\", error);\r\n      })\r\n    ) {\r\n      toast.error(\"Failed to save form kindly check the form for errors\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    } else {\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: data.address,\r\n              countryId: data.countryId,\r\n              district: data.district,\r\n              line: [data.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: \"\",\r\n              stateId: data.stateId,\r\n            },\r\n          ],\r\n          contact: contacts,\r\n          contactPoint: [],\r\n          dateOfBirth: new Date(data.dob),\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: data.firstName,\r\n          sexId: data.sex,\r\n          /*genderId:data.sex,*/\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: data.hospitalNumber,\r\n            },\r\n          ],\r\n          ninNumber: data.ninNumber,\r\n          otherName: data.middleName,\r\n          maritalStatusId: data.maritalStatus,\r\n          surname: data.lastName,\r\n          educationId: data.highestQualification,\r\n          employmentStatusId:\r\n            data.employmentStatus != null ? data.employmentStatus : null,\r\n          dateOfRegistration: data.dateOfRegistration,\r\n          isDateOfBirthEstimated: data.dateOfBirth == \"Actual\" ? false : true,\r\n        };\r\n        //console.log(data.pnumber);\r\n\r\n        if (data.pnumber) {\r\n          const phone = {\r\n            type: \"phone\",\r\n            value: data.pnumber,\r\n          };\r\n          patientForm.contactPoint.push(phone);\r\n        }\r\n\r\n        if (data.email) {\r\n          const email = {\r\n            type: \"email\",\r\n            value: data.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (data.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: \"altphone\",\r\n            value: data.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n\r\n        console.log(\"patient\", patientForm);\r\n        reset();\r\n        if (patientId) {\r\n          patientForm.id = null;\r\n          patientForm.facilityId = patientFacilityId;\r\n          const response = await axios.put(\r\n            `${baseUrl}patient/${patientId}`,\r\n            patientForm,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n        } else {\r\n          const response = await axios.post(`${baseUrl}patient`, patientForm, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n\r\n          if (response.status === 200) {\r\n            reset();\r\n          }\r\n\r\n          toast.success(\"Patient Register successful\");\r\n          history.push(\"/\");\r\n          console.log(response);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n        toast.error(\"An error occured while registering a patient !\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const onError = (errors) => {\r\n    console.error(errors);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    setValue(\"relationshipType\", relative.relationshipId);\r\n    setValue(\"cfirstName\", relative.firstName);\r\n    setValue(\"cmiddleName\", relative.otherName);\r\n    setValue(\"clastName\", relative.surname);\r\n    setValue(\r\n      \"contactPhoneNumber\",\r\n      relative.contactPoint\r\n        ? phoneNumberFormatCheck(relative.contactPoint).value\r\n        : \"\"\r\n    );\r\n    setValue(\r\n      \"contactAddress\",\r\n      relative.address &&\r\n        relative.address.line &&\r\n        relative.address.line.length > 0\r\n        ? relative.address.line[0]\r\n        : \"\"\r\n    );\r\n    setShowRelative(true);\r\n    setEditRelative(index);\r\n  };\r\n  const handleDeleteRelative = (index) => {\r\n    setTimeout(() => {\r\n      contacts.splice(index, 1);\r\n      setContacts(contacts);\r\n      setShowRelative(true);\r\n      setShowRelative(false);\r\n    }, 500);\r\n  };\r\n\r\n  const loadSexes = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      await setSexOptions(response.data);\r\n    } catch (e) {\r\n      toast.error(\"An error occured while fetching sex codesets !\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data);\r\n    } catch (e) {\r\n      toast.error(\"An error occured while fetching marital codesets !\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data);\r\n    } catch (e) {\r\n      toast.error(\"An error occured while fetching education codesets !\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data);\r\n    } catch (e) {\r\n      toast.error(\"An error occured while fetching occupation codesets !\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data);\r\n    } catch (e) {\r\n      toast.error(\"An error occured while fetching relationship codesets !\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  }, []);\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data);\r\n  }, []);\r\n  const loadOrganisationUnitsByParentId = async (parentId) => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n  const onCountryChange = async (e) => {\r\n    if (e.target.value) {\r\n      const stateOptions = await loadOrganisationUnitsByParentId(1);\r\n      setStateUnitOptions(stateOptions);\r\n    } else {\r\n      setStateUnitOptions([]);\r\n    }\r\n  };\r\n  const statesList = async () => {\r\n    const stateOptions = await loadOrganisationUnitsByParentId(1);\r\n    setStateUnitOptions(stateOptions);\r\n  };\r\n  const onStateChange = async (e) => {\r\n    if (e.target.value) {\r\n      const districtOptions = await loadOrganisationUnitsByParentId(\r\n        e.target.value\r\n      );\r\n      setDistrictUnitOptions(districtOptions);\r\n    } else {\r\n      setDistrictUnitOptions([]);\r\n    }\r\n  };\r\n\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      // const m = today.getMonth() - birthDate.getMonth();\r\n      // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //   age_now--;\r\n      // }\r\n      setValue(\"age\", age_now);\r\n    } else {\r\n      setValue(\"age\", null);\r\n    }\r\n  };\r\n\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n\r\n  const handleAgeChange = (e) => {\r\n    console.log(e.target.value);\r\n    if (!ageDisabled && e.target.value) {\r\n      setValue(\"age\", e.target.value);\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dob = estDob.add(e.target.value * -1, \"years\");\r\n      setValue(\"dob\", format(new Date(dob.toDate()), \"yyyy-MM-dd\"));\r\n      if (calculate_age(format(new Date(dob.toDate()), \"yyyy-MM-dd\")) >= 60) {\r\n        toggle();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    statesList();\r\n    loadSexes();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    loadTopLevelCountry();\r\n    getPatient();\r\n  }, [\r\n    loadSexes,\r\n    loadMaritalStatus,\r\n    loadEducation,\r\n    loadOccupation,\r\n    loadRelationships,\r\n    loadTopLevelCountry,\r\n    getPatient,\r\n  ]);\r\n\r\n  let genderRows = null;\r\n  let sexRows = null;\r\n  let maritalStatusRows = null;\r\n  let educationRows = null;\r\n  let occupationRows = null;\r\n  let relationshipRows = null;\r\n  let topLevelUnitCountryRows = null;\r\n  let stateRows = null;\r\n  let districtRows = null;\r\n  if (sexOptions && sexOptions.length > 0) {\r\n    sexRows = sexOptions.map((sex, index) => (\r\n      <option key={sex.id} value={sex.id}>\r\n        {sex.display}\r\n      </option>\r\n    ));\r\n  }\r\n  if (maritalStatusOptions && maritalStatusOptions.length > 0) {\r\n    maritalStatusRows = maritalStatusOptions.map(\r\n      (maritalStatusOption, index) => (\r\n        <option key={maritalStatusOption.id} value={maritalStatusOption.id}>\r\n          {maritalStatusOption.display}\r\n        </option>\r\n      )\r\n    );\r\n  }\r\n  if (educationOptions && educationOptions.length > 0) {\r\n    educationRows = educationOptions.map((educationOption, index) => (\r\n      <option key={educationOption.id} value={educationOption.id}>\r\n        {educationOption.display}\r\n      </option>\r\n    ));\r\n  }\r\n  if (occupationOptions && occupationOptions.length > 0) {\r\n    occupationRows = occupationOptions.map((occupationOption, index) => (\r\n      <option key={occupationOption.id} value={occupationOption.id}>\r\n        {occupationOption.display}\r\n      </option>\r\n    ));\r\n  }\r\n  if (relationshipOptions && relationshipOptions.length > 0) {\r\n    relationshipRows = relationshipOptions.map((relationshipOption, index) => (\r\n      <option key={relationshipOption.id} value={relationshipOption.id}>\r\n        {relationshipOption.display}\r\n      </option>\r\n    ));\r\n  }\r\n  if (topLevelUnitCountryOptions && topLevelUnitCountryOptions.length > 0) {\r\n    topLevelUnitCountryRows = topLevelUnitCountryOptions.map(\r\n      (topLevelUnitCountryOption, index) => (\r\n        <option\r\n          key={topLevelUnitCountryOption.id}\r\n          value={topLevelUnitCountryOption.id}\r\n        >\r\n          {topLevelUnitCountryOption.name}\r\n        </option>\r\n      )\r\n    );\r\n  }\r\n  if (stateUnitOptions && stateUnitOptions.length > 0) {\r\n    stateRows = stateUnitOptions.map((stateUnitOption, index) => (\r\n      <option key={stateUnitOption.id} value={stateUnitOption.id}>\r\n        {stateUnitOption.name}\r\n      </option>\r\n    ));\r\n  }\r\n  if (districtUnitOptions && districtUnitOptions.length > 0) {\r\n    districtRows = districtUnitOptions.map((districtUnitOption, index) => (\r\n      <option key={districtUnitOption.id} value={districtUnitOption.id}>\r\n        {districtUnitOption.name}\r\n      </option>\r\n    ));\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    setValue(inputName, e);\r\n  };\r\n\r\n  const alphabetOnly = (e, inputName) => {\r\n    const result = e.target.value.replace(/[^a-z]/gi, \"\");\r\n    setValue(inputName, result);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"row mb-12 col-md-12\" style={{ paddingBottom: \"5px\" }}>\r\n            <div className=\"mb-6 col-md-6\">\r\n              <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Typography style={{ color: \"#992E62\" }}>Patient</Typography>\r\n                <Typography style={{ color: \"#014d88\" }}>\r\n                  Registration\r\n                </Typography>\r\n              </Breadcrumbs>\r\n            </div>\r\n            <div className=\"mb-6 col-md-6\">\r\n              <Link\r\n                to={{\r\n                  pathname: \"/\",\r\n                  state: \"users\",\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className=\" float-right ms-1\"\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                  startIcon={<TiArrowBack />}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Back </span>\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={handleSubmit(onSubmit, onError)}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                  }}\r\n                >\r\n                  <h5\r\n                    className=\"card-title\"\r\n                    style={{ color: \"#fff\", fontWeight: \"bolder\" }}\r\n                  >\r\n                    {userDetail === null\r\n                      ? \"Basic Information\"\r\n                      : \"Edit User Information\"}\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            max={today}\r\n                            {...register(\"dateOfRegistration\")}\r\n                            onChange={(e) => {\r\n                              if (\r\n                                new Date(e.target.value) instanceof Date &&\r\n                                e.target.value != \"\"\r\n                              ) {\r\n                                setMaxDOB(\r\n                                  new Date(e.target.value)\r\n                                    .toISOString()\r\n                                    .substr(0, 10)\r\n                                    .replace(\"T\", \" \")\r\n                                );\r\n                              } else {\r\n                                setMaxDOB(\r\n                                  new Date()\r\n                                    .toISOString()\r\n                                    .substr(0, 10)\r\n                                    .replace(\"T\", \" \")\r\n                                );\r\n                              }\r\n                            }}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          />\r\n                          {errors.dateOfRegistration && (\r\n                            <p>Enter the registration date</p>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            Hospital Number\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            autoComplete=\"off\"\r\n                            onInput={(e) => {\r\n                              e.target.value = e.target.value.replace(\r\n                                /\\s/g,\r\n                                \"\"\r\n                              );\r\n                              console.log(e.target.value);\r\n                              checkHospitalNumber(e.target.value);\r\n                            }}\r\n                            onChange={checkHospitalNumber}\r\n                            {...register(\"hospitalNumber\", {\r\n                              onChange: (e) => {\r\n                                checkHospitalNumber(\r\n                                  e.target.value.replace(/\\s/g, \"\")\r\n                                );\r\n                              },\r\n                            })}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          />\r\n                          {checkHospitalNumberError && (\r\n                            <p>Hospital number has been registered before</p>\r\n                          )}\r\n                          {!checkHospitalNumberError &&\r\n                            errors.hospitalNumber && (\r\n                              <p>Enter the hospital number</p>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"ninNumber\">\r\n                            National Identification Number (NIN)\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            name=\"ninNumber\"\r\n                            type=\"number\"\r\n                            {...register(\"ninNumber\")}\r\n                            id=\"ninNumber\"\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => {\r\n                              console.log(\"here\");\r\n                              clearErrors(\"ninNumber\");\r\n                              e.target.value = e.target.value.replace(\r\n                                /\\D/g,\r\n                                \"\"\r\n                              );\r\n                              checkNIN(e);\r\n                              if (e.target.value.length > e.target.maxLength) {\r\n                                e.target.value = e.target.value.slice(\r\n                                  0,\r\n                                  e.target.maxLength\r\n                                );\r\n                                clearErrors(\"ninNumber\");\r\n                              } else if (\r\n                                e.target.value.length > 0 &&\r\n                                e.target.value.length < e.target.maxLength\r\n                              ) {\r\n                                setError(\"ninNumber\");\r\n                              } else if (\r\n                                e.target.value.length <= 0 ||\r\n                                e.target.value.length == e.target.maxLength\r\n                              ) {\r\n                                clearErrors(\"ninNumber\");\r\n                              }\r\n                            }}\r\n                            minLength={11}\r\n                            maxLength={11}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          />\r\n                          {checkNINError && (\r\n                            <p>NIN has been registered before</p>\r\n                          )}\r\n                          {!checkNINError && errors.ninNumber && (\r\n                            <p>Enter a valid NIN Number</p>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {/*                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"emrId\">EMR ID *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        disabled={true}\r\n                                                        type=\"text\"\r\n                                                        name=\"emrId\"\r\n                                                        id=\"emrId\"\r\n                                                        style={{border: \"1px solid #014d88\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>*/}\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">\r\n                            First Names <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            {...register(\"firstName\", {\r\n                              onChange: (e) => {\r\n                                alphabetOnly(e, \"firstName\");\r\n                              },\r\n                            })}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          />\r\n                          {errors.firstName && <p>First Name is required</p>}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            {...register(\"middleName\", {\r\n                              onChange: (e) => {\r\n                                alphabetOnly(e, \"middleName\");\r\n                              },\r\n                            })}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          />\r\n                          {errors.middleName && (\r\n                            <p>{errors.middleName.message}</p>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Last Name <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            {...register(\"lastName\", {\r\n                              onChange: (e) => {\r\n                                alphabetOnly(e, \"lastName\");\r\n                              },\r\n                            })}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          />\r\n                          {errors.lastName && <p>Last Name is required</p>}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Sex <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sex\"\r\n                            id=\"sex\"\r\n                            {...register(\"sex\")}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          >\r\n                            <option value={\"\"}>Select Sex</option>\r\n                            {sexRows}\r\n                          </select>\r\n                          {errors.sex && <p>Select Sex</p>}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date Of Birth</Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                {...register(\"dateOfBirth\")}\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{ border: \"1px solid #014d88\" }}\r\n                              />{\" \"}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                {...register(\"dateOfBirth\")}\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{ border: \"1px solid #014d88\" }}\r\n                              />{\" \"}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dob\"\r\n                            id=\"dob\"\r\n                            min={minDOB}\r\n                            max={maxDOB}\r\n                            {...register(\"dob\")}\r\n                            onChange={(e) => {\r\n                              clearErrors(\"dob\");\r\n                              if (new Date(e.target.value) instanceof Date) {\r\n                                console.log(\"date\");\r\n                                handleDobChange(e);\r\n                                clearErrors(\"dob\");\r\n                              } else {\r\n                                setError(\"dob\");\r\n                              }\r\n                            }}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          />\r\n                          {errors.dob && (\r\n                            <p>Enter a valid date of birth (dd/mm/yyyy)</p>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            id=\"age\"\r\n                            {...register(\"age\")}\r\n                            disabled={ageDisabled}\r\n                            onChange={(e) => handleAgeChange(e)}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      {/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Marital Status{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatus\"\r\n                            id=\"maritalStatus\"\r\n                            {...register(\"maritalStatus\")}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          >\r\n                            <option value={\"\"}>Select Marital Status</option>\r\n                            {maritalStatusRows}\r\n                          </select>\r\n                          {errors.maritalStatus && <p>Select Marital Status</p>}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Employment Status{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatus\"\r\n                            id=\"employmentStatus\"\r\n                            {...register(\"employmentStatus\")}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          >\r\n                            <option value={\"\"}>Select Employment Status</option>\r\n                            {occupationRows}\r\n                          </select>\r\n                          {errors.employmentStatus && (\r\n                            <p>Select Employment Status</p>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {/*\r\n                                            </>\r\n                                            }\r\n*/}\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Education Level</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"highestQualification\"\r\n                            id=\"highestQualification\"\r\n                            {...register(\"highestQualification\")}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                          >\r\n                            <option value={\"\"}>\r\n                              Select the Education Level\r\n                            </option>\r\n                            {educationRows}\r\n                          </select>\r\n                          {errors.highestQualification && (\r\n                            <p>Select the Education Level</p>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\">Contact Details</h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className={\"row\"}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Phone Number</Label>\r\n                        {/*<input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"pnumber\"\r\n                                                        id=\"pnumber\"\r\n                                                        {...register(\"pnumber\")}\r\n                                                        onChange={(e)=>{checkPhoneNumber(e,'pnumber')}}\r\n                                                        style={{border: \"1px solid #014d88\"}}\r\n                                                    />*/}\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: \"100%\",\r\n                            border: \"1px solid #014d88\",\r\n                          }}\r\n                          inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                          country={\"ng\"}\r\n                          masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                          placeholder=\"(234)7099999999\"\r\n                          value={getValues(\"pnumber\")}\r\n                          onChange={(e) => {\r\n                            checkPhoneNumber(e, \"pnumber\");\r\n                          }}\r\n                          isValid={(value, country) => {\r\n                            if (value === country.countryCode) {\r\n                              return true;\r\n                            } else {\r\n                              if (value.length < 13) {\r\n                                errors.pnumber = true;\r\n                                return false;\r\n                              } else {\r\n                                errors.pnumber = false;\r\n                                return true;\r\n                              }\r\n                            }\r\n                          }}\r\n                        />\r\n\r\n                        {/*                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"tel\"\r\n                                                    name=\"pnumber\"\r\n                                                    id=\"pnumber\"\r\n                                                    {...register(\"pnumber\",{\r\n                                                        onChange:(e)=>{checkPhoneNumber(e,'pnumber')}\r\n                                                    })}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    style={{border: \"1px solid #014d88\"}}\r\n                                                />*/}\r\n                        {/* {errors.pnumber && <p>Phone number is required</p>} */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Alt. Phone Number</Label>\r\n                        {/* <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"altPhonenumber\"\r\n                                                        id=\"altPhonenumber\"\r\n                                                        {...register(\"altPhonenumber\")}\r\n                                                        onChange={(e)=>{checkPhoneNumber(e,'altPhonenumber')}}\r\n                                                        style={{border: \"1px solid #014d88\"}}\r\n                                                    />*/}\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: \"100%\",\r\n                            border: \"1px solid #014d88\",\r\n                          }}\r\n                          inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                          country={\"ng\"}\r\n                          masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                          placeholder=\"(234)7099999999\"\r\n                          value={getValues(\"altPhonenumber\")}\r\n                          onChange={(e) => {\r\n                            checkPhoneNumber(e, \"altPhonenumber\");\r\n                          }}\r\n                          isValid={(value, country) => {\r\n                            if (value === country.countryCode) {\r\n                              return true;\r\n                            } else {\r\n                              if (value.length < 13) {\r\n                                errors.altPhonenumber = true;\r\n                                return \"Enter a valid phone number\";\r\n                              } else {\r\n                                errors.altPhonenumber = false;\r\n                                return true;\r\n                              }\r\n                            }\r\n                          }}\r\n                        />\r\n                        {/*                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"tel\"\r\n                                                    name=\"altPhoneNumber\"\r\n                                                    id=\"altPhoneNumber\"\r\n                                                    {...register(\"altPhonenumber\",{\r\n                                                        onChange:(e)=>{checkPhoneNumber(e,'altPhonenumber')}\r\n                                                    })}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    style={{border: \"1px solid #014d88\"}}\r\n                                                />*/}\r\n                        {errors.altPhonenumber && (\r\n                          <p>{errors.altPhonenumber.message}</p>\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          {...register(\"email\", {\r\n                            required: true,\r\n                            validate: handleEmailValidation,\r\n                          })}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          /*ref={register()}*/\r\n                        />\r\n                        {errors.email && <p>{errors.email.message}</p>}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Country <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"country\"\r\n                          id=\"country\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          {...register(\"countryId\")}\r\n                          onChange={(e) => onCountryChange(e)}\r\n                        >\r\n                          {/*<option value={\"\"}>Select Country</option>*/}\r\n                          {topLevelUnitCountryRows}\r\n                        </select>\r\n                        {/*errors.countryId && <p>Select Country</p>*/}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          State <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          {...register(\"stateId\")}\r\n                          onChange={(e) => onStateChange(e)}\r\n                        >\r\n                          <option value={\"\"}>Select State</option>\r\n                          {stateRows}\r\n                        </select>\r\n                        {errors.stateId && <p>Select State</p>}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Province/District/LGA{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          {...register(\"district\")}\r\n                        >\r\n                          <option value={\"\"}>\r\n                            Select Province/District/LGA\r\n                          </option>\r\n                          {districtRows}\r\n                        </select>\r\n                        {errors.district && <p>Select Province/District/LGA</p>}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className={\"row\"}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Street Address</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          id=\"address\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          {...register(\"address\")}\r\n                        />\r\n                        {errors.address && <p>{errors.address.message}</p>}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Landmark</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          id=\"landmark\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          {...register(\"landmark\")}\r\n                        />\r\n                        {errors.landmark && <p>{errors.landmark.message}</p>}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\">Relationship / Next Of Kin</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    {contacts && contacts.length > 0 && (\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        <table style={{ width: \"100%\" }}>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Relationship Type</th>\r\n                              <th>Name</th>\r\n                              <th>Phone</th>\r\n                              <th>Address</th>\r\n                              <th>Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {contacts.map((item, index) => {\r\n                              return (\r\n                                <tr key={item.index}>\r\n                                  <td>\r\n                                    {getRelationship(item.relationshipId)}\r\n                                  </td>\r\n                                  <td>{getNames(item)}</td>\r\n                                  <td>\r\n                                    {getPhoneContactPoint(item.contactPoint)}\r\n                                  </td>\r\n                                  <td>{getAddress(item.address)}</td>\r\n                                  <td>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                      onClick={(e) =>\r\n                                        handleEditRelative(item, index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"edit\" />\r\n                                    </button>\r\n                                    &nbsp;&nbsp;\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-danger btn-sm removeRow\"\r\n                                      onClick={(e) =>\r\n                                        handleDeleteRelative(index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"trash\" />\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                      {showRelative && (\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"relationshipType\">\r\n                                    Relationship Type{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"relationshipType\"\r\n                                    id=\"relationshipType\"\r\n                                    style={{ border: \"1px solid #014d88\" }}\r\n                                    {...register(\"relationshipType\")}\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    {relationshipRows}\r\n                                  </select>\r\n                                  {errors.relationshipType && (\r\n                                    <p>{errors.relationshipType.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"cfirstName\">\r\n                                    First Name{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"cfirstName\"\r\n                                    id=\"cfirstName\"\r\n                                    style={{ border: \"1px solid #014d88\" }}\r\n                                    {...register(\"cfirstName\", {\r\n                                      onChange: (e) => {\r\n                                        alphabetOnly(e, \"cfirstName\");\r\n                                      },\r\n                                    })}\r\n                                  />\r\n                                  {errors.cfirstName && (\r\n                                    <p>{errors.cfirstName.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Middle Name</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"cmiddleName\"\r\n                                    id=\"cmiddleName\"\r\n                                    style={{ border: \"1px solid #014d88\" }}\r\n                                    {...register(\"cmiddleName\", {\r\n                                      onChange: (e) => {\r\n                                        alphabetOnly(e, \"cmiddleName\");\r\n                                      },\r\n                                    })}\r\n                                  />\r\n                                  {errors.cmiddleName && (\r\n                                    <p>{errors.cmiddleName.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Last Name </Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"clastName\"\r\n                                    id=\"clastName\"\r\n                                    style={{ border: \"1px solid #014d88\" }}\r\n                                    {...register(\"clastName\", {\r\n                                      onChange: (e) => {\r\n                                        alphabetOnly(e, \"clastName\");\r\n                                      },\r\n                                    })}\r\n                                  />\r\n                                  {/*errors.clastName && <p>{errors.clastName.message}</p>*/}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactPhoneNumber\">\r\n                                    Phone Number\r\n                                  </Label>\r\n                                  <PhoneInput\r\n                                    containerStyle={{\r\n                                      width: \"100%\",\r\n                                      border: \"1px solid #014d88\",\r\n                                    }}\r\n                                    inputStyle={{\r\n                                      width: \"100%\",\r\n                                      borderRadius: \"0px\",\r\n                                    }}\r\n                                    country={\"ng\"}\r\n                                    onlyCountries={[\"ng\"]}\r\n                                    masks={{\r\n                                      ng: \"...-...-....\",\r\n                                      at: \"(....) ...-....\",\r\n                                    }}\r\n                                    placeholder=\"(234)7099999999\"\r\n                                    value={getValues(\"contactPhoneNumber\")}\r\n                                    onChange={(e) => {\r\n                                      checkPhoneNumber(e, \"contactPhoneNumber\");\r\n                                    }}\r\n                                    isValid={(value, country) => {\r\n                                      if (value === country.countryCode) {\r\n                                        return true;\r\n                                      } else {\r\n                                        if (value.length < 13) {\r\n                                          errors.contactPhoneNumber = true;\r\n                                          return \"Enter a valid phone number\";\r\n                                        } else {\r\n                                          errors.contactPhoneNumber = false;\r\n                                          return true;\r\n                                        }\r\n                                      }\r\n                                    }}\r\n                                  />\r\n                                  {/*                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"contactPhoneNumber\"\r\n                                                                            id=\"contactPhoneNumber\"\r\n                                                                            style={{border: \"1px solid #014d88\"}}\r\n                                                                            {...register(\"contactPhoneNumber\",{\r\n                                                                                onChange:(e)=>{checkPhoneNumber(e,'contactPhoneNumber')}\r\n                                                                            })}\r\n                                                                        />*/}\r\n                                  {errors.contactPhoneNumber && (\r\n                                    <p>{errors.contactPhoneNumber.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactEmail\">Email</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"contactEmail\"\r\n                                    id=\"contactEmail\"\r\n                                    style={{ border: \"1px solid #014d88\" }}\r\n                                    {...register(\"contactEmail\", {\r\n                                      onChange: (e) => {\r\n                                        checkPhoneNumber(e, \"contactEmail\");\r\n                                      },\r\n                                    })}\r\n                                  />\r\n                                  {errors.contactEmail && (\r\n                                    <p>{errors.contactEmail.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactAddress\">\r\n                                    Address{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"contactAddress\"\r\n                                    id=\"contactAddress\"\r\n                                    style={{ border: \"1px solid #014d88\" }}\r\n                                    {...register(\"contactAddress\")}\r\n                                  />\r\n                                  {errors.contactAddress && (\r\n                                    <p>{errors.contactAddress.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleSaveRelationship}\r\n                                  style={{\r\n                                    backgroundColor: \"#014d88\",\r\n                                    color: \"#fff\",\r\n                                  }}\r\n                                >\r\n                                  Add\r\n                                </MatButton>\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"secondary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleCancelSaveRelationship}\r\n                                  style={{\r\n                                    backgroundColor: \"#992E62\",\r\n                                    color: \"#fff\",\r\n                                  }}\r\n                                >\r\n                                  Cancel\r\n                                </MatButton>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <MatButton\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      startIcon={<AddIcon />}\r\n                      onClick={handleAddRelative}\r\n                      style={{\r\n                        backgroundColor: \"#014d88\",\r\n                        fontWeight: \"bolder\",\r\n                      }}\r\n                    >\r\n                      Add a Relative/Next Of Kin\r\n                    </MatButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              {!checkHospitalNumberError && (\r\n                <>\r\n                  {userDetail === null ? (\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          Save\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          Saving...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  ) : (\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          Save\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          Saving...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                onClick={handleCancel}\r\n                style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n              </MatButton>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPatient;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Form, FormGroup, Label, Spinner } from \"reactstrap\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport _ from \"lodash\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {},\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    marginBottom: 20,\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nconst schema = yup.object().shape({\r\n  dateOfRegistration: yup.date().required(),\r\n  hospitalNumber: yup.string().required(),\r\n  firstName: yup.string().required(),\r\n  middleName: yup.string().nullable(),\r\n  lastName: yup.string().required(),\r\n  sex: yup.number().required(),\r\n  employmentStatus: yup.number().required(),\r\n  //highestQualification: yup.number().nullable(),\r\n  maritalStatus: yup.number().required(),\r\n  dob: yup.date().required(),\r\n  dateOfBirth: yup.string().required(),\r\n  age: yup.number(),\r\n  ninNumber: yup.string().nullable(),\r\n  pnumber: yup.string().required(),\r\n  altPhonenumber: yup.string().nullable(),\r\n  email: yup.string().nullable(),\r\n  address: yup.string().nullable(),\r\n  landmark: yup.string().nullable(),\r\n  countryId: yup.number().required(),\r\n  stateId: yup.number().required(),\r\n  district: yup.number().nullable(),\r\n});\r\n\r\nconst isValidEmail = (email) =>\r\n  // eslint-disable-next-line no-useless-escape\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n    email\r\n  );\r\n\r\nconst ViewPatient = (props) => {\r\n  const {\r\n    register,\r\n    watch,\r\n    setValue,\r\n    getValues,\r\n    clearErrors,\r\n    setError,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const [disValue, setDisValue] = useState(\"\");\r\n  const { errors, isSubmitting } = formState;\r\n  const watchPnumber = watch(\"pnumber\", false);\r\n  const watchAltPhonenumber = watch(\"altPhonenumber\", false);\r\n  const watchContactPhoneNumber = watch(\"contactPhoneNumber\", false);\r\n  const watchShowAge = watch(\"age\", false);\r\n  const [today, setToday] = useState(\r\n    new Date().toISOString().substr(0, 10).replace(\"T\", \" \")\r\n  );\r\n  const [minDOB, setMinDOB] = useState(\r\n    new Date(\"1/1/1930\").toISOString().substr(0, 10).replace(\"T\", \" \")\r\n  );\r\n  const [maxDOB, setMaxDOB] = useState(\r\n    new Date().toISOString().substr(0, 10).replace(\"T\", \" \")\r\n  );\r\n  const [contacts, setContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  const [editRelative, setEditRelative] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [sexOptions, setSexOptions] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n  const [stateUnitOptions, setStateUnitOptions] = useState([]);\r\n  const [districtUnitOptions, setDistrictUnitOptions] = useState([]);\r\n  const [checkHospitalNumberError, setCheckHospitalNumberError] =\r\n    useState(false);\r\n  const [checkNINError, setCheckNINError] = useState(false);\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const [patientFacilityId, setPatientFacilityId] = useState(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const location = useLocation();\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  patientId = locationState ? locationState.patientId : null;\r\n  const [patientData, setPatientData] = useState({});\r\n\r\n  const getNames = (relationship) => {\r\n    const surname = relationship.surname;\r\n    const firstName = relationship.firstName;\r\n    const otherName = relationship.otherName ? relationship.otherName : \"\";\r\n    return surname + \", \" + firstName + \" \" + otherName;\r\n  };\r\n  const getRelationship = (relationshipId) => {\r\n    const relationship = relationshipOptions.find(\r\n      (obj) => obj.id == relationshipId\r\n    );\r\n    return relationship ? relationship.display : \"\";\r\n  };\r\n  const getPhoneContactPoint = (contactPoint) => {\r\n    if (contactPoint.value === null) {\r\n    } else {\r\n      return contactPoint ? phoneNumberFormatCheck(contactPoint).value : \"\";\r\n    }\r\n  };\r\n  const getAddress = (address) => {\r\n    return address && address.line && address.line.length > 0\r\n      ? address.line[0]\r\n      : \"\";\r\n  };\r\n  const phoneNumberFormatCheck = (phone) => {\r\n    //console.log(phone);\r\n    if (\r\n      phone != undefined &&\r\n      typeof phone?.value !== null &&\r\n      typeof phone?.value !== \"undefined\" &&\r\n      phone?.value?.charAt(0) === \"0\"\r\n    ) {\r\n      phone.value = phone.value.replace(\"0\", \"234\");\r\n    }\r\n    return phone;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n    // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n    //     age_now--;\r\n    // }\r\n    if (age_now === 0) {\r\n      return m;\r\n    }\r\n    return age_now;\r\n  };\r\n  const getPatient = useCallback(async () => {\r\n    if (patientId) {\r\n      const response = await axios.get(`${baseUrl}patient/${patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const sexCodeset = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const patient = response.data;\r\n      //console.log(patient);\r\n      setPatientData(patient);\r\n      const contacts = patient.contact ? patient.contact : [];\r\n      setContacts(contacts.contact);\r\n      const identifiers = patient.identifier;\r\n      const address = patient.address;\r\n      const contactPoint = patient?.contactPoint;\r\n      const hospitalNumber = identifiers.identifier.find(\r\n        (obj) => obj.type == \"HospitalNumber\"\r\n      );\r\n      const phone = phoneNumberFormatCheck(\r\n        contactPoint?.contactPoint?.find((obj) => obj.type == \"phone\")\r\n      );\r\n      const email = contactPoint?.contactPoint?.find(\r\n        (obj) => obj.type == \"email\"\r\n      );\r\n      const altphone = phoneNumberFormatCheck(\r\n        contactPoint?.contactPoint?.find((obj) => obj.type == \"altphone\")\r\n      );\r\n      const country =\r\n        address && address.address && address.address.length > 0\r\n          ? address.address[0]\r\n          : null;\r\n      const gender = patient.gender;\r\n\r\n      //console.log(_.upperFirst(_.lowerCase(patient.sex)))\r\n      const sex = _.find(sexCodeset.data, {\r\n        display: _.upperFirst(_.lowerCase(patient.sex)),\r\n      }).id;\r\n      const employmentStatus = patient.employmentStatus;\r\n      const education = patient.education;\r\n      const maritalStatus = patient.maritalStatus;\r\n      setPatientFacilityId(patient.facilityId);\r\n      setValue(\"dateOfRegistration\", patient.dateOfRegistration);\r\n      setValue(\"facilityId\", patient.facilityId);\r\n      setValue(\"ninNumber\", patient.ninNumber);\r\n      setValue(\"firstName\", patient.firstName);\r\n      setValue(\"middleName\", patient.otherName);\r\n      setValue(\"lastName\", patient.surname);\r\n      setValue(\"hospitalNumber\", hospitalNumber ? hospitalNumber.value : \"\");\r\n      setValue(\"maritalStatus\", maritalStatus ? maritalStatus.id : \"\");\r\n      setValue(\"employmentStatus\", employmentStatus ? employmentStatus.id : \"\");\r\n\r\n      //setValue('gender', gender.id);\r\n      setValue(\"sex\", sex);\r\n      setValue(\"highestQualification\", education ? education.id : \"\");\r\n      setValue(\"dob\", format(new Date(patient.dateOfBirth), \"yyyy-MM-dd\"));\r\n      setValue(\"age\", calculate_age(patient.dateOfBirth));\r\n      if (country) {\r\n        setValue(\"countryId\", country.countryId);\r\n        const stateOptions = country.countryId\r\n          ? await loadOrganisationUnitsByParentId(country.countryId)\r\n          : \"\";\r\n        setStateUnitOptions(stateOptions);\r\n        setValue(\"stateId\", country.stateId);\r\n        const districtOptions = country.stateId\r\n          ? await loadOrganisationUnitsByParentId(country.stateId)\r\n          : \"\";\r\n        setDistrictUnitOptions(districtOptions);\r\n        setValue(\"district\", country.district);\r\n        setValue(\"address\", country.city);\r\n        setValue(\"landmark\", country.line[0]);\r\n      }\r\n      setValue(\"pnumber\", phone ? phone.value : \"+234\");\r\n      setValue(\"email\", email ? email.value : null);\r\n      setValue(\"altPhonenumber\", altphone ? altphone.value : \"+234\");\r\n    }\r\n  }, []);\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  const checkHospitalNumber = async (e) => {\r\n    setCheckHospitalNumberError(false);\r\n    await axios\r\n      .post(`${baseUrl}patient/exist/hospital-number`, e, {\r\n        responseType: \"text\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"text/plain\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setCheckHospitalNumberError(true);\r\n        } else {\r\n          setCheckHospitalNumberError(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const checkNIN = async (e) => {\r\n    setCheckNINError(false);\r\n    if (e.target.value.length > 0) {\r\n      await axios\r\n        .post(\r\n          `${baseUrl}patient/exist/nin-number/${e.target.value}`,\r\n          e.target.value,\r\n          {\r\n            responseType: \"text\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setCheckNINError(true);\r\n          } else {\r\n            setCheckNINError(false);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const handleSaveRelationship = (e) => {\r\n    const relationshipType = getValues(\"relationshipType\");\r\n    const cfirstName = getValues(\"cfirstName\");\r\n    const cmiddleName = getValues(\"cmiddleName\");\r\n    const clastName = getValues(\"clastName\");\r\n    const contactPhoneNumber = getValues(\"contactPhoneNumber\");\r\n    const contactEmail = getValues(\"contactEmail\");\r\n    const contactAddress = getValues(\"contactAddress\");\r\n    if (!relationshipType) {\r\n      setError(\r\n        \"relationshipType\",\r\n        { type: \"custom\", message: \"Relationship is required\" },\r\n        { shouldFocus: true }\r\n      );\r\n      return;\r\n    }\r\n    if (!cfirstName) {\r\n      setError(\r\n        \"cfirstName\",\r\n        { type: \"custom\", message: \"FirstName is required\" },\r\n        { shouldFocus: true }\r\n      );\r\n      return;\r\n    }\r\n    if (!clastName) {\r\n      setError(\r\n        \"clastName\",\r\n        { type: \"custom\", message: \"LastName is required\" },\r\n        { shouldFocus: true }\r\n      );\r\n      return;\r\n    }\r\n\r\n    const contact = {\r\n      address: {\r\n        line: [contactAddress],\r\n      },\r\n      contactPoint: {\r\n        type: \"phone\",\r\n        value: contactPhoneNumber,\r\n      },\r\n      firstName: cfirstName,\r\n      fullName: cfirstName + \" \" + cmiddleName + \" \" + clastName,\r\n      relationshipId: relationshipType,\r\n      surname: clastName,\r\n      otherName: cmiddleName,\r\n    };\r\n\r\n    if (editRelative != null) {\r\n      contacts.splice(editRelative, 1);\r\n      setContacts(contacts.concat(contact));\r\n    } else {\r\n      if (contacts === undefined) {\r\n        setContacts([].concat(contact));\r\n      } else {\r\n        setContacts(contacts.concat(contact));\r\n      }\r\n    }\r\n    setShowRelative(false);\r\n  };\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  const handleEmailValidation = (email) => {\r\n    console.log(\"ValidateEmail was called with\", email);\r\n\r\n    const isValid = isValidEmail(email);\r\n    if (!isValid) {\r\n      errors.email.message = \"Please enter a valid email\";\r\n    }\r\n    const validityChanged =\r\n      (errors.email && isValid) || (!errors.email && !isValid);\r\n    if (validityChanged) {\r\n      console.log(\"Fire tracker with\", isValid ? \"Valid\" : \"Invalid\");\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    if (\r\n      _.find(errors, function (error) {\r\n        return error;\r\n      })\r\n    ) {\r\n      toast.error(\"Failed to save form kindly check the form for errors\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    } else {\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: data.address,\r\n              countryId: data.countryId,\r\n              district: data.district,\r\n              line: [data.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: \"\",\r\n              stateId: data.stateId,\r\n            },\r\n          ],\r\n          contact: contacts,\r\n          contactPoint: [],\r\n          dateOfBirth: new Date(data.dob),\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: data.firstName,\r\n          sexId: data.sex,\r\n          /*genderId:data.sex,*/\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: data.hospitalNumber,\r\n            },\r\n          ],\r\n          ninNumber: data.ninNumber,\r\n          otherName: data.middleName,\r\n          maritalStatusId: data.maritalStatus,\r\n          surname: data.lastName,\r\n          educationId: data.highestQualification,\r\n          employmentStatusId:\r\n            data.employmentStatus != null ? data.employmentStatus : null,\r\n          dateOfRegistration: data.dateOfRegistration,\r\n          isDateOfBirthEstimated: data.dateOfBirth == \"Actual\" ? false : true,\r\n        };\r\n        const phone = {\r\n          type: \"phone\",\r\n          value: data.pnumber,\r\n        };\r\n        if (data.email) {\r\n          const email = {\r\n            type: \"email\",\r\n            value: data.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (data.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: \"altphone\",\r\n            value: data.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        if (patientId) {\r\n          patientForm.id = null;\r\n          patientForm.facilityId = patientFacilityId;\r\n          const response = await axios.put(\r\n            `${baseUrl}patient/${patientId}`,\r\n            patientForm,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n        } else {\r\n          const response = await axios.post(`${baseUrl}patient`, patientForm, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n        }\r\n        toast.success(\"Patient Register successful\");\r\n        history.push(\"/\");\r\n      } catch (e) {\r\n        console.log(e);\r\n        toast.error(\"An error occured while registering a patient !\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const onError = (errors) => {\r\n    console.error(errors);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    setValue(\"relationshipType\", relative.relationshipId);\r\n    setValue(\"cfirstName\", relative.firstName);\r\n    setValue(\"cmiddleName\", relative.otherName);\r\n    setValue(\"clastName\", relative.surname);\r\n    setValue(\r\n      \"contactPhoneNumber\",\r\n      relative.contactPoint\r\n        ? phoneNumberFormatCheck(relative.contactPoint).value\r\n        : \"\"\r\n    );\r\n    setValue(\r\n      \"contactAddress\",\r\n      relative.address &&\r\n        relative.address.line &&\r\n        relative.address.line.length > 0\r\n        ? relative.address.line[0]\r\n        : \"\"\r\n    );\r\n    setShowRelative(true);\r\n    setEditRelative(index);\r\n  };\r\n  const handleDeleteRelative = (index) => {\r\n    setTimeout(() => {\r\n      contacts.splice(index, 1);\r\n      setContacts(contacts);\r\n      setShowRelative(true);\r\n      setShowRelative(false);\r\n    }, 500);\r\n  };\r\n\r\n  const loadSexes = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      await setSexOptions(response.data);\r\n    } catch (e) {\r\n      toast.error(\"An error occured while fetching sex codesets !\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data);\r\n    } catch (e) {\r\n      toast.error(\"An error occured while fetching marital codesets !\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data);\r\n    } catch (e) {\r\n      toast.error(\"An error occured while fetching education codesets !\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data);\r\n    } catch (e) {\r\n      toast.error(\"An error occured while fetching occupation codesets !\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data);\r\n    } catch (e) {\r\n      toast.error(\"An error occured while fetching relationship codesets !\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  }, []);\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data);\r\n  }, []);\r\n  const loadOrganisationUnitsByParentId = async (parentId) => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n  const onCountryChange = async (e) => {\r\n    if (e.target.value) {\r\n      const stateOptions = await loadOrganisationUnitsByParentId(\r\n        e.target.value\r\n      );\r\n      setStateUnitOptions(stateOptions);\r\n    } else {\r\n      setStateUnitOptions([]);\r\n    }\r\n  };\r\n  const onStateChange = async (e) => {\r\n    if (e.target.value) {\r\n      const districtOptions = await loadOrganisationUnitsByParentId(\r\n        e.target.value\r\n      );\r\n      setDistrictUnitOptions(districtOptions);\r\n    } else {\r\n      setDistrictUnitOptions([]);\r\n    }\r\n  };\r\n\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      setValue(\"age\", age_now);\r\n    } else {\r\n      setValue(\"age\", null);\r\n    }\r\n  };\r\n\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value == \"Actual\") {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == \"Estimated\") {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n\r\n  const handleAgeChange = (e) => {\r\n    if (!ageDisabled && e.target.value) {\r\n      setValue(\"age\", e.target.value);\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dob = estDob.add(e.target.value * -1, \"years\");\r\n      setValue(\"dob\", format(new Date(dob.toDate()), \"yyyy-MM-dd\"));\r\n      if (calculate_age(format(new Date(dob.toDate()), \"yyyy-MM-dd\")) >= 60) {\r\n        toggle();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSexes();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    loadTopLevelCountry();\r\n    getPatient();\r\n    districtValue();\r\n  }, [\r\n    loadSexes,\r\n    loadMaritalStatus,\r\n    loadEducation,\r\n    loadOccupation,\r\n    loadRelationships,\r\n    loadTopLevelCountry,\r\n    getPatient,\r\n  ]);\r\n\r\n  let genderRows = null;\r\n  let sexRows = null;\r\n  let maritalStatusRows = null;\r\n  let educationRows = null;\r\n  let occupationRows = null;\r\n  let relationshipRows = null;\r\n  let topLevelUnitCountryRows = null;\r\n  let stateRows = null;\r\n  let districtRows = null;\r\n  if (sexOptions && sexOptions.length > 0) {\r\n    sexRows = sexOptions.map((sex, index) => (\r\n      <option key={sex.id} value={sex.id}>\r\n        {sex.display}\r\n      </option>\r\n    ));\r\n  }\r\n  if (maritalStatusOptions && maritalStatusOptions.length > 0) {\r\n    maritalStatusRows = maritalStatusOptions.map(\r\n      (maritalStatusOption, index) => (\r\n        <option\r\n          key={maritalStatusOption.id}\r\n          value={maritalStatusOption.id}\r\n          defaultValue={maritalStatusOption.display}\r\n        >\r\n          {maritalStatusOption.display}\r\n        </option>\r\n      )\r\n    );\r\n  }\r\n  if (educationOptions && educationOptions.length > 0) {\r\n    educationRows = educationOptions.map((educationOption, index) => (\r\n      <option key={educationOption.id} value={educationOption.id}>\r\n        {educationOption.display}\r\n      </option>\r\n    ));\r\n  }\r\n  if (occupationOptions && occupationOptions.length > 0) {\r\n    occupationRows = occupationOptions.map((occupationOption, index) => (\r\n      <option key={occupationOption.id} value={occupationOption.id}>\r\n        {occupationOption.display}\r\n      </option>\r\n    ));\r\n  }\r\n  if (relationshipOptions && relationshipOptions.length > 0) {\r\n    relationshipRows = relationshipOptions.map((relationshipOption, index) => (\r\n      <option key={relationshipOption.id} value={relationshipOption.id}>\r\n        {relationshipOption.display}\r\n      </option>\r\n    ));\r\n  }\r\n  if (topLevelUnitCountryOptions && topLevelUnitCountryOptions.length > 0) {\r\n    topLevelUnitCountryRows = topLevelUnitCountryOptions.map(\r\n      (topLevelUnitCountryOption, index) => (\r\n        <option\r\n          key={topLevelUnitCountryOption.id}\r\n          value={topLevelUnitCountryOption.id}\r\n        >\r\n          {topLevelUnitCountryOption.name}\r\n        </option>\r\n      )\r\n    );\r\n  }\r\n  if (stateUnitOptions && stateUnitOptions.length > 0) {\r\n    stateRows = stateUnitOptions.map((stateUnitOption, index) => (\r\n      <option key={stateUnitOption.id} value={stateUnitOption.id}>\r\n        {stateUnitOption.name}\r\n      </option>\r\n    ));\r\n  }\r\n  if (districtUnitOptions && districtUnitOptions.length > 0) {\r\n    districtRows = districtUnitOptions.map((districtUnitOption, index) => (\r\n      <option key={districtUnitOption.id} value={districtUnitOption.id}>\r\n        {districtUnitOption.name}\r\n      </option>\r\n    ));\r\n  }\r\n\r\n  const districtValue = () => {\r\n    let value = \"\";\r\n    if (\r\n      Object.keys(patientData).length !== 0 &&\r\n      patientData.address.address[0].district !== null\r\n    ) {\r\n      districtUnitOptions.map((districtUnitOption, index) => {\r\n        if (districtUnitOption.id === patientData.address.address[0].district) {\r\n          value = districtUnitOption.name;\r\n          setDisValue(value);\r\n        }\r\n      });\r\n    }\r\n    return value;\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    setValue(inputName, e);\r\n  };\r\n\r\n  const alphabetOnly = (e, inputName) => {\r\n    const result = e.target.value.replace(/[^a-z]/gi, \"\");\r\n    setValue(inputName, result);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"row mb-12 col-md-12\" style={{ paddingBottom: \"5px\" }}>\r\n            <div className=\"mb-6 col-md-6\">\r\n              <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Typography style={{ color: \"#992E62\" }}>Patient</Typography>\r\n                <Typography style={{ color: \"#014d88\" }}>\r\n                  Registration\r\n                </Typography>\r\n              </Breadcrumbs>\r\n            </div>\r\n            <div className=\"mb-6 col-md-6\">\r\n              <Link\r\n                to={{\r\n                  pathname: \"/\",\r\n                  state: \"users\",\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className=\" float-right ms-1\"\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                  startIcon={<TiArrowBack />}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Back </span>\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form onSubmit={handleSubmit(onSubmit, onError)}>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                  }}\r\n                >\r\n                  <h5\r\n                    className=\"card-title\"\r\n                    style={{ color: \"#fff\", fontWeight: \"bolder\" }}\r\n                  >\r\n                    {userDetail === null\r\n                      ? \"Basic Information\"\r\n                      : \"Edit User Information\"}\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration*{\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            max={today}\r\n                            {...register(\"dateOfRegistration\")}\r\n                            onChange={(e) => {\r\n                              if (\r\n                                new Date(e.target.value) instanceof Date &&\r\n                                e.target.value != \"\"\r\n                              ) {\r\n                                setMaxDOB(\r\n                                  new Date(e.target.value)\r\n                                    .toISOString()\r\n                                    .substr(0, 10)\r\n                                    .replace(\"T\", \" \")\r\n                                );\r\n                              } else {\r\n                                setMaxDOB(\r\n                                  new Date()\r\n                                    .toISOString()\r\n                                    .substr(0, 10)\r\n                                    .replace(\"T\", \" \")\r\n                                );\r\n                              }\r\n                            }}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            readOnly\r\n                          />\r\n                          {errors.dateOfRegistration && (\r\n                            <p>Enter the registration date</p>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">Hospital Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            autoComplete=\"off\"\r\n                            onInput={(e) => {\r\n                              e.target.value = e.target.value.replace(\r\n                                /\\s/g,\r\n                                \"\"\r\n                              );\r\n                              console.log(e.target.value);\r\n                              checkHospitalNumber(e.target.value);\r\n                            }}\r\n                            onChange={checkHospitalNumber}\r\n                            {...register(\"hospitalNumber\", {\r\n                              onChange: (e) => {\r\n                                checkHospitalNumber(\r\n                                  e.target.value.replace(/\\s/g, \"\")\r\n                                );\r\n                              },\r\n                            })}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            readOnly\r\n                          />\r\n                          {checkHospitalNumberError && (\r\n                            <p>Hospital number has been registered before</p>\r\n                          )}\r\n                          {!checkHospitalNumberError &&\r\n                            errors.hospitalNumber && (\r\n                              <p>Enter the hospital number</p>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"ninNumber\">\r\n                            National Identification Number (NIN)\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            name=\"ninNumber\"\r\n                            type=\"number\"\r\n                            {...register(\"ninNumber\")}\r\n                            id=\"ninNumber\"\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => {\r\n                              console.log(\"here\");\r\n                              clearErrors(\"ninNumber\");\r\n                              e.target.value = e.target.value.replace(\r\n                                /\\D/g,\r\n                                \"\"\r\n                              );\r\n                              checkNIN(e);\r\n                              if (e.target.value.length > e.target.maxLength) {\r\n                                e.target.value = e.target.value.slice(\r\n                                  0,\r\n                                  e.target.maxLength\r\n                                );\r\n                                clearErrors(\"ninNumber\");\r\n                              } else if (\r\n                                e.target.value.length > 0 &&\r\n                                e.target.value.length < e.target.maxLength\r\n                              ) {\r\n                                setError(\"ninNumber\");\r\n                              } else if (\r\n                                e.target.value.length <= 0 ||\r\n                                e.target.value.length == e.target.maxLength\r\n                              ) {\r\n                                clearErrors(\"ninNumber\");\r\n                              }\r\n                            }}\r\n                            minLength={11}\r\n                            maxLength={11}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            readOnly\r\n                          />\r\n                          {checkNINError && (\r\n                            <p>NIN has been registered before</p>\r\n                          )}\r\n                          {!checkNINError && errors.ninNumber && (\r\n                            <p>Enter a valid NIN Number</p>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {/*                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"emrId\">EMR ID *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        disabled={true}\r\n                                                        type=\"text\"\r\n                                                        name=\"emrId\"\r\n                                                        id=\"emrId\"\r\n                                                        style={{border: \"1px solid #014d88\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>*/}\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">First Names *</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            {...register(\"firstName\", {\r\n                              onChange: (e) => {\r\n                                alphabetOnly(e, \"firstName\");\r\n                              },\r\n                            })}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            readOnly\r\n                          />\r\n                          {errors.firstName && <p>First Name is required</p>}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            {...register(\"middleName\", {\r\n                              onChange: (e) => {\r\n                                alphabetOnly(e, \"middleName\");\r\n                              },\r\n                            })}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            readOnly\r\n                          />\r\n                          {errors.middleName && (\r\n                            <p>{errors.middleName.message}</p>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Last Name *</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            {...register(\"lastName\", {\r\n                              onChange: (e) => {\r\n                                alphabetOnly(e, \"lastName\");\r\n                              },\r\n                            })}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            readOnly\r\n                          />\r\n                          {errors.lastName && <p>Last Name is required</p>}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Sex *</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"sex\"\r\n                            id=\"sex\"\r\n                            value={\r\n                              patientData.sex !== null ? patientData.sex : \" \"\r\n                            }\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            readOnly\r\n                          />\r\n                          {errors.sex && <p>Select Sex</p>}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date Of Birth</Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                {...register(\"dateOfBirth\")}\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{ border: \"1px solid #014d88\" }}\r\n                              />{\" \"}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                {...register(\"dateOfBirth\")}\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{ border: \"1px solid #014d88\" }}\r\n                              />{\" \"}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dob\"\r\n                            id=\"dob\"\r\n                            min={minDOB}\r\n                            max={maxDOB}\r\n                            {...register(\"dob\")}\r\n                            onChange={(e) => {\r\n                              clearErrors(\"dob\");\r\n                              if (new Date(e.target.value) instanceof Date) {\r\n                                console.log(\"date\");\r\n                                handleDobChange(e);\r\n                                clearErrors(\"dob\");\r\n                              } else {\r\n                                setError(\"dob\");\r\n                              }\r\n                            }}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            readOnly\r\n                          />\r\n                          {errors.dob && (\r\n                            <p>Enter a valid date of birth (dd/mm/yyyy)</p>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            id=\"age\"\r\n                            {...register(\"age\")}\r\n                            disabled={ageDisabled}\r\n                            onChange={(e) => handleAgeChange(e)}\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            readOnly\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      {/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status *</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"maritalStatus\"\r\n                            id=\"maritalStatus\"\r\n                            value={\r\n                              Object.keys(patientData).length !== 0 &&\r\n                              patientData.maritalStatus !== null\r\n                                ? patientData.maritalStatus.display\r\n                                : \"\"\r\n                            }\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            readOnly\r\n                          />\r\n                          {errors.maritalStatus && <p>Select Marital Status</p>}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Employment Status *</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"employmentStatus\"\r\n                            id=\"employmentStatus\"\r\n                            value={\r\n                              Object.keys(patientData).length !== 0 &&\r\n                              patientData.employmentStatus !== null\r\n                                ? patientData.employmentStatus.display\r\n                                : \" \"\r\n                            }\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            readOnly\r\n                          />\r\n                          {errors.employmentStatus && (\r\n                            <p>Select Employment Status</p>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      {/*\r\n                                            </>\r\n                                            }\r\n*/}\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Education Level</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"highestQualification\"\r\n                            id=\"highestQualification\"\r\n                            value={\r\n                              Object.keys(patientData).length !== 0 &&\r\n                              patientData.education !== null\r\n                                ? patientData.education.display\r\n                                : \"\"\r\n                            }\r\n                            style={{ border: \"1px solid #014d88\" }}\r\n                            readOnly\r\n                          />\r\n                          {errors.highestQualification && (\r\n                            <p>Select the Education Level</p>\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\">Contact Details</h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className={\"row\"}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Phone Number *</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: \"100%\",\r\n                            border: \"1px solid #014d88\",\r\n                          }}\r\n                          inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                          country={\"ng\"}\r\n                          masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                          placeholder=\"(234)7099999999\"\r\n                          value={getValues(\"pnumber\")}\r\n                          onChange={(e) => {\r\n                            checkPhoneNumber(e, \"pnumber\");\r\n                          }}\r\n                          isValid={(value, country) => {\r\n                            if (value === country.countryCode) {\r\n                              return true;\r\n                            } else {\r\n                              if (value.length < 13) {\r\n                                errors.pnumber = true;\r\n                                return false;\r\n                              } else {\r\n                                errors.pnumber = false;\r\n                                return true;\r\n                              }\r\n                            }\r\n                          }}\r\n                          disabled={true}\r\n                        />\r\n\r\n                        {/*                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"tel\"\r\n                                                    name=\"pnumber\"\r\n                                                    id=\"pnumber\"\r\n                                                    {...register(\"pnumber\",{\r\n                                                        onChange:(e)=>{checkPhoneNumber(e,'pnumber')}\r\n                                                    })}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    style={{border: \"1px solid #014d88\"}}\r\n                                                />*/}\r\n                        {/*errors.pnumber && <p>Phone number is required</p>*/}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Alt. Phone Number</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: \"100%\",\r\n                            border: \"1px solid #014d88\",\r\n                          }}\r\n                          inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                          country={\"ng\"}\r\n                          masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                          placeholder=\"(234)7099999999\"\r\n                          value={getValues(\"altPhonenumber\")}\r\n                          onChange={(e) => {\r\n                            checkPhoneNumber(e, \"altPhonenumber\");\r\n                          }}\r\n                          isValid={(value, country) => {\r\n                            if (value === country.countryCode) {\r\n                              return true;\r\n                            } else {\r\n                              if (value.length < 13) {\r\n                                errors.altPhonenumber = true;\r\n                                return \"Enter a valid phone number\";\r\n                              } else {\r\n                                errors.altPhonenumber = false;\r\n                                return true;\r\n                              }\r\n                            }\r\n                          }}\r\n                          disabled={true}\r\n                        />\r\n                        {/*                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"tel\"\r\n                                                    name=\"altPhoneNumber\"\r\n                                                    id=\"altPhoneNumber\"\r\n                                                    {...register(\"altPhonenumber\",{\r\n                                                        onChange:(e)=>{checkPhoneNumber(e,'altPhonenumber')}\r\n                                                    })}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    style={{border: \"1px solid #014d88\"}}\r\n                                                />*/}\r\n                        {errors.altPhonenumber && (\r\n                          <p>{errors.altPhonenumber.message}</p>\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          {...register(\"email\", {\r\n                            required: true,\r\n                            validate: handleEmailValidation,\r\n                          })}\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          readOnly\r\n                        />\r\n                        {errors.email && <p>{errors.email.message}</p>}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Country *</Label>\r\n                        {/* <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"country\"\r\n                                                    id=\"country\"\r\n                                                    value={Object.keys(patientData).length !== 0 &&  patientData.address.address[0]?.countryId === 1 ? \"Nigeria\" : \"\"}\r\n                                                    style={{border: \"1px solid #014d88\"}}\r\n                                                    readOnly\r\n                                                />*/}\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"country\"\r\n                          id=\"country\"\r\n                          readOnly\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          {...register(\"countryId\")}\r\n                          onChange={(e) => onCountryChange(e)}\r\n                        >\r\n                          {/*<option value={\"\"}>Select Country</option>*/}\r\n                          {topLevelUnitCountryRows}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>State *</Label>\r\n                        {/*<input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={Object.keys(patientData).length !== 0 && patientData.address.address[0].city !== null ? patientData.address.address[0].city : \"\"}\r\n                                                    style={{border: \"1px solid #014d88\"}}\r\n                                                    readOnly\r\n                                                />*/}\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          readOnly\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          {...register(\"stateId\")}\r\n                          onChange={(e) => onStateChange(e)}\r\n                        >\r\n                          <option value={\"\"}>Select State</option>\r\n                          {stateRows}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Province/District/LGA *</Label>\r\n                        {/*  <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"district\"\r\n                                                        id=\"district\"\r\n                                                        value={disValue !== \"\" ? disValue : \"\"}\r\n                                                        style={{border: \"1px solid #014d88\"}}\r\n                                                        readOnly\r\n                                                    />*/}\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          readOnly\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          {...register(\"district\")}\r\n                        >\r\n                          <option value={\"\"}>\r\n                            Select Province/District/LGA\r\n                          </option>\r\n                          {districtRows}\r\n                        </select>\r\n                        {errors.district && <p>Select Province/District/LGA</p>}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className={\"row\"}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Street Address</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          id=\"address\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          {...register(\"address\")}\r\n                          readOnly\r\n                        />\r\n                        {errors.address && <p>{errors.address.message}</p>}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Landmark</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          id=\"landmark\"\r\n                          style={{ border: \"1px solid #014d88\" }}\r\n                          {...register(\"landmark\")}\r\n                          readOnly\r\n                        />\r\n                        {errors.landmark && <p>{errors.landmark.message}</p>}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\">Relationship / Next Of Kin</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    {contacts && contacts.length > 0 && (\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        <table style={{ width: \"100%\" }}>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Relationship Type</th>\r\n                              <th>Name</th>\r\n                              <th>Phone</th>\r\n                              <th>Address</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {contacts.map((item, index) => {\r\n                              return (\r\n                                <tr key={item.index}>\r\n                                  <td>\r\n                                    {getRelationship(item.relationshipId)}\r\n                                  </td>\r\n                                  <td>{getNames(item)}</td>\r\n                                  <td>\r\n                                    {getPhoneContactPoint(item.contactPoint)}\r\n                                  </td>\r\n                                  <td>{getAddress(item.address)}</td>\r\n                                  {/*<td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={(e) => handleEditRelative(item, index)}>\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}>\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>*/}\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                      {showRelative && (\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"relationshipType\">\r\n                                    Relationship Type *\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"relationshipType\"\r\n                                    id=\"relationshipType\"\r\n                                    style={{ border: \"1px solid #014d88\" }}\r\n                                    {...register(\"relationshipType\")}\r\n                                  >\r\n                                    <option value={\"\"}></option>\r\n                                    {relationshipRows}\r\n                                  </select>\r\n                                  {errors.relationshipType && (\r\n                                    <p>{errors.relationshipType.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"cfirstName\">First Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"cfirstName\"\r\n                                    id=\"cfirstName\"\r\n                                    style={{ border: \"1px solid #014d88\" }}\r\n                                    {...register(\"cfirstName\", {\r\n                                      onChange: (e) => {\r\n                                        alphabetOnly(e, \"cfirstName\");\r\n                                      },\r\n                                    })}\r\n                                  />\r\n                                  {errors.cfirstName && (\r\n                                    <p>{errors.cfirstName.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Middle Name</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"cmiddleName\"\r\n                                    id=\"cmiddleName\"\r\n                                    style={{ border: \"1px solid #014d88\" }}\r\n                                    {...register(\"cmiddleName\", {\r\n                                      onChange: (e) => {\r\n                                        alphabetOnly(e, \"cmiddleName\");\r\n                                      },\r\n                                    })}\r\n                                  />\r\n                                  {errors.cmiddleName && (\r\n                                    <p>{errors.cmiddleName.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Last Name </Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"clastName\"\r\n                                    id=\"clastName\"\r\n                                    style={{ border: \"1px solid #014d88\" }}\r\n                                    {...register(\"clastName\", {\r\n                                      onChange: (e) => {\r\n                                        alphabetOnly(e, \"clastName\");\r\n                                      },\r\n                                    })}\r\n                                  />\r\n                                  {errors.clastName && (\r\n                                    <p>{errors.clastName.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactPhoneNumber\">\r\n                                    Phone Number\r\n                                  </Label>\r\n                                  <PhoneInput\r\n                                    containerStyle={{\r\n                                      width: \"100%\",\r\n                                      border: \"1px solid #014d88\",\r\n                                    }}\r\n                                    inputStyle={{\r\n                                      width: \"100%\",\r\n                                      borderRadius: \"0px\",\r\n                                    }}\r\n                                    country={\"ng\"}\r\n                                    onlyCountries={[\"ng\"]}\r\n                                    masks={{\r\n                                      ng: \"...-...-....\",\r\n                                      at: \"(....) ...-....\",\r\n                                    }}\r\n                                    placeholder=\"(234)7099999999\"\r\n                                    value={getValues(\"contactPhoneNumber\")}\r\n                                    onChange={(e) => {\r\n                                      checkPhoneNumber(e, \"contactPhoneNumber\");\r\n                                    }}\r\n                                    isValid={(value, country) => {\r\n                                      if (value === country.countryCode) {\r\n                                        return true;\r\n                                      } else {\r\n                                        if (value.length < 13) {\r\n                                          errors.contactPhoneNumber = true;\r\n                                          return \"Enter a valid phone number\";\r\n                                        } else {\r\n                                          errors.contactPhoneNumber = false;\r\n                                          return true;\r\n                                        }\r\n                                      }\r\n                                    }}\r\n                                  />\r\n                                  {/*                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"contactPhoneNumber\"\r\n                                                                            id=\"contactPhoneNumber\"\r\n                                                                            style={{border: \"1px solid #014d88\"}}\r\n                                                                            {...register(\"contactPhoneNumber\",{\r\n                                                                                onChange:(e)=>{checkPhoneNumber(e,'contactPhoneNumber')}\r\n                                                                            })}\r\n                                                                        />*/}\r\n                                  //\r\n                                  {errors.contactPhoneNumber && (\r\n                                    <p>{errors.contactPhoneNumber.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactEmail\">Email</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"contactEmail\"\r\n                                    id=\"contactEmail\"\r\n                                    style={{ border: \"1px solid #014d88\" }}\r\n                                    {...register(\"contactEmail\", {\r\n                                      onChange: (e) => {\r\n                                        checkPhoneNumber(e, \"contactEmail\");\r\n                                      },\r\n                                    })}\r\n                                  />\r\n                                  {errors.contactEmail && (\r\n                                    <p>{errors.contactEmail.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactAddress\">Address</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"contactAddress\"\r\n                                    id=\"contactAddress\"\r\n                                    style={{ border: \"1px solid #014d88\" }}\r\n                                    {...register(\"contactAddress\")}\r\n                                  />\r\n                                  {errors.contactAddress && (\r\n                                    <p>{errors.contactAddress.message}</p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/*  <div className=\"row\">\r\n                                                                <div className=\"\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                        style={{backgroundColor:'#014d88',color:'#fff'}}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                        style={{backgroundColor:'#992E62',color:'#fff'}}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div> */}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/*\r\n                                    <div className=\"row\">\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    </div>\r\n                                    */}\r\n                </div>\r\n              </div>\r\n\r\n              {saving ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              {/*!checkHospitalNumberError &&\r\n                                <>\r\n                                    {userDetail ===null ? (\r\n                                            <MatButton\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                className={classes.button}\r\n                                                startIcon={<SaveIcon />}\r\n                                                style={{backgroundColor:'#014d88',color:'#fff'}}\r\n                                            >\r\n                                                {!saving ? (\r\n                                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                                ) : (\r\n                                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                                )}\r\n                                            </MatButton>\r\n                                        )\r\n                                        :\r\n                                        (\r\n                                            <MatButton\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                className={classes.button}\r\n                                                startIcon={<SaveIcon />}\r\n                                                style={{backgroundColor:'#014d88',color:'#fff'}}\r\n                                            >\r\n                                                {!saving ? (\r\n                                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                                ) : (\r\n                                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                                )}\r\n                                            </MatButton>\r\n                                        )\r\n                                    }\r\n                                </>\r\n\r\n                            }\r\n\r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62',color:'#fff'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton> */}\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewPatient;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  Row,\r\n  Label,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  FormGroup,\r\n  CardHeader,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\r\nimport { Button2, Icon, List } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\n\r\nimport { green, red } from \"@mui/material/colors\";\r\nimport { Dimmer, Loader, Image, Segment } from \"semantic-ui-react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from \"@mui/material/Typography\";\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n}));\r\n\r\nlet checkUrl = \"\";\r\n\r\nconst CaptureBiometric = (props) => {\r\n  const classes = useStyles();\r\n  const biometricDevices = props.biometricDevices;\r\n  //Get the default device\r\n  const selectedDevice = biometricDevices.find((x) => x.active === \"true\");\r\n  console.log(biometricDevices);\r\n  checkUrl = selectedDevice.url === null ? baseUrl : selectedDevice.url;\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    biometricType: \"FINGERPRINT\",\r\n    patientId: props.patientId,\r\n    templateType: \"\",\r\n    device: \"\",\r\n  });\r\n  const [fingerType, setFingerType] = useState([]);\r\n  const [devices, setDevices] = useState(props.biometricDevices);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [showCapture, setshowCapture] = React.useState(false);\r\n  const [tryAgain, setTryAgain] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  // const [responseImage, setResponseImage] = useState(\"\")\r\n  const [capturedFingered, setCapturedFingered] = useState([]);\r\n  //console.log(biometricDevices)\r\n  const buttonSx = {\r\n    ...(success && {\r\n      bgcolor: green[500],\r\n      \"&:hover\": {\r\n        bgcolor: green[700],\r\n      },\r\n    }),\r\n  };\r\n\r\n  useEffect(() => {\r\n    TemplateType();\r\n    if (objValues.device === \"\") {\r\n      setshowCapture(false);\r\n    }\r\n  }, []);\r\n  //Get list of Finger index\r\n  const TemplateType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFingerType(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  //check if device is plugged or not\r\n  const checkDevice = (e) => {\r\n    const deviceName = e.target.value;\r\n    const selectedDevice = biometricDevices.find((x) => x.name === deviceName);\r\n    checkUrl = selectedDevice.url === null ? baseUrl : selectedDevice.url;\r\n    console.log(checkUrl);\r\n    setObjValues({ ...objValues, device: deviceName });\r\n    axios\r\n      // .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n      .get(`${checkUrl}`, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((response) => {\r\n        if (response.data.errorType === \"ERROR\") {\r\n          toast.error(response.data.errorName + \" is not plug\");\r\n          //setshowCapture(true)\r\n        } else {\r\n          setshowCapture(true);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  // handle the input changes\r\n\r\n  const handleInputChange = (e) => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  //form validation\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.templateType = objValues.templateType ? \"\" : \"This field is required\";\r\n    temp.device = objValues.device ? \"\" : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  //to capture  selected index finger\r\n  const captureFinger = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      // axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n      axios\r\n        .post(`${checkUrl}`, objValues, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setLoading(true);\r\n          if (response.data.type === \"ERROR\") {\r\n            setLoading(false);\r\n            setTryAgain(true);\r\n            window.setTimeout(() => {\r\n              setTryAgain(false);\r\n            }, 5000);\r\n            toast.error(response.data.message.ERROR);\r\n          } else {\r\n            const templateType = response.data.templateType;\r\n            setTryAgain(false);\r\n            setSuccess(true);\r\n            window.setTimeout(() => {\r\n              setSuccess(false);\r\n              setLoading(false);\r\n            }, 5000);\r\n\r\n            setCapturedFingered([...capturedFingered, response.data]);\r\n            fingerType.splice(templateType, 1);\r\n            setFingerType([...fingerType]);\r\n          }\r\n          //toast.success(\"Record save successful\");\r\n        })\r\n        .catch((error) => {});\r\n    }\r\n  };\r\n\r\n  //Save Biometric capture\r\n  const saveBiometrics = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (capturedFingered.length > 1) {\r\n      const capturedObj = capturedFingered[capturedFingered.length - 1];\r\n\r\n      axios\r\n        .post(`${baseUrl}biometrics/templates`, capturedObj, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Biometric save successful\");\r\n          setCapturedFingered([]);\r\n          props.setPatientBiometricStatus(true);\r\n          props.togglestatus();\r\n        })\r\n        .catch((error) => {\r\n          toast.error(\"Something went wrong\");\r\n        });\r\n    } else {\r\n      toast.error(\"You can't save less than 2 finger\");\r\n    }\r\n  };\r\n\r\n  // console.log(capturedFingered)\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <Modal\r\n            isOpen={props.modalstatus}\r\n            toggle={props.togglestatus}\r\n            className={props.className}\r\n            size=\"lg\"\r\n          >\r\n            <Form>\r\n              <ModalHeader toggle={props.togglestatus}>\r\n                capture Biometric\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <Card>\r\n                  {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                  <CardBody>\r\n                    <Row form>\r\n                      <ToastContainer />\r\n                      <Col md={4}>\r\n                        <FormGroup>\r\n                          <Label for=\"device\">Select Device </Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"device\"\r\n                            id=\"device\"\r\n                            //onChange={checkDevice}\r\n                            value={objValues.device}\r\n                            required\r\n                            disabled\r\n                          >\r\n                            <option value=\"\">Select Device </option>\r\n                            {biometricDevices.map(({ id, name }) => (\r\n                              <option key={id} value={name}>\r\n                                {name}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n                          {errors.device !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.device}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                      {showCapture ? (\r\n                        <>\r\n                          <Col md={4}>\r\n                            <FormGroup>\r\n                              <Label for=\"device\">Select Finger</Label>\r\n                              <Input\r\n                                type=\"select\"\r\n                                name=\"templateType\"\r\n                                id=\"templateType\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.templateType}\r\n                                required\r\n                              >\r\n                                <option value=\"\">Select Finger </option>\r\n\r\n                                {fingerType.map((value) => (\r\n                                  <option key={value.id} value={value.display}>\r\n                                    {value.display}\r\n                                  </option>\r\n                                ))}\r\n                              </Input>\r\n                              {errors.templateType !== \"\" ? (\r\n                                <span className={classes.error}>\r\n                                  {errors.templateType}\r\n                                </span>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={4}>\r\n                            <MatButton\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={captureFinger}\r\n                              className={\"mt-4\"}\r\n                              startIcon={<FingerprintIcon />}\r\n                            >\r\n                              Capture Finger\r\n                            </MatButton>\r\n                          </Col>\r\n                          <br />\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {/* <img width='500' height='200' src={responseImage}/> */}\r\n                      <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                        {loading && (\r\n                          <>\r\n                            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                              <Box sx={{ m: 1, position: \"relative\" }}>\r\n                                <Fab\r\n                                  aria-label=\"save\"\r\n                                  color=\"secondary\"\r\n                                  sx={buttonSx}\r\n                                >\r\n                                  {success ? (\r\n                                    <CheckIcon />\r\n                                  ) : (\r\n                                    <FingerprintIcon />\r\n                                  )}\r\n                                </Fab>\r\n                                {loading && (\r\n                                  <CircularProgress\r\n                                    size={68}\r\n                                    sx={{\r\n                                      color: green[500],\r\n                                      position: \"absolute\",\r\n                                      top: -6,\r\n                                      left: -6,\r\n                                      zIndex: 1,\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              </Box>\r\n                              <Typography\r\n                                variant=\"h6\"\r\n                                gutterBottom\r\n                                component=\"div\"\r\n                              >\r\n                                {success\r\n                                  ? ` your  ${objValues.templateType} Finger captured.`\r\n                                  : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                              </Typography>\r\n                            </Box>\r\n                          </>\r\n                        )}\r\n                        {tryAgain && (\r\n                          <>\r\n                            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                              <Box sx={{ m: 1, position: \"relative\" }}>\r\n                                <Fab\r\n                                  aria-label=\"save\"\r\n                                  color=\"secondary\"\r\n                                  sx={buttonSx}\r\n                                >\r\n                                  <FingerprintIcon />\r\n                                </Fab>\r\n                                {tryAgain && (\r\n                                  <CircularProgress\r\n                                    size={68}\r\n                                    sx={{\r\n                                      color: red[500],\r\n                                      position: \"absolute\",\r\n                                      top: -6,\r\n                                      left: -6,\r\n                                      zIndex: 1,\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              </Box>\r\n                              <Typography\r\n                                variant=\"h6\"\r\n                                gutterBottom\r\n                                component=\"div\"\r\n                              >\r\n                                Click to Recapture Again\r\n                              </Typography>\r\n                            </Box>\r\n                          </>\r\n                        )}\r\n                        {/*  */}\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      {capturedFingered.length >= 1 ? (\r\n                        <>\r\n                          <Col md={12}>\r\n                            <h3>Captured Fingerprints</h3>\r\n                          </Col>\r\n                          <Col md={12} style={{ marginTop: \"20px\" }}>\r\n                            <List celled horizontal>\r\n                              {capturedFingered.map((x) => (\r\n                                <List.Item>\r\n                                  {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                  <List.Content>\r\n                                    {\" \"}\r\n                                    <FingerprintIcon\r\n                                      style={{ color: \"#2E7D32\", fontSize: 40 }}\r\n                                    />\r\n                                    {x.templateType}\r\n                                  </List.Content>\r\n                                </List.Item>\r\n                              ))}\r\n                            </List>\r\n                          </Col>\r\n                          {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                          <br />\r\n                          <br />\r\n                          <br />\r\n                          <br />\r\n                          <br />\r\n                          <br />\r\n                          <Col md={12}>\r\n                            <MatButton\r\n                              type=\"button\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={saveBiometrics}\r\n                              // className={classes.button}\r\n                              startIcon={<SaveIcon />}\r\n                            >\r\n                              Save Capture\r\n                            </MatButton>\r\n                          </Col>\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </ModalBody>\r\n            </Form>\r\n          </Modal>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Accordion, AccordionActions, AccordionDetails, AccordionSummary} from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {Button, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {Col, Row, Modal} from \"reactstrap\";\r\nimport CaptureBiometric from './CaptureBiometric';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n    const { classes } = props;\r\n    const patientObj = props.patientObj ? props.patientObj : {};\r\n    \r\n    const permissions= props.permissions ? props.permissions : [];\r\n    const [modal, setModal] = useState(false) //Modal to collect sample\r\n    const [patientBiometricStatus, setPatientBiometricStatus]= useState(props.patientBiometricStatus);\r\n    const toggleModal = () => setModal(!modal)\r\n\r\n    const [biometricStatus, setBiometricStatus] = useState(false);\r\n    const [devices, setDevices] = useState([]);\r\n    useEffect(() => {\r\n        setPatientBiometricStatus(props.patientBiometricStatus)\r\n        TemplateType();\r\n    }, [props.patientBiometricStatus]);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response);\r\n                setBiometricStatus(response.data);\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const calculate_age = dob => {\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getPhone = (contactPoint) => {\r\n        const phoneContact = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n        return phoneContact ? phoneContact.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? `${address.address[0].line[0]}, ${address.address[0].city}` : null;\r\n        return city;\r\n    };\r\n\r\n\r\n    const handleBiometricCapture = (id) => {\r\n        let patientObjID= id\r\n        setModal(!modal)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Typography style={{color:'#992E62'}}>Patient</Typography>\r\n                <Typography style={{color:'#014d88'}}>Dashboard</Typography>\r\n            </Breadcrumbs>\r\n            <Accordion defaultExpanded>\r\n                <AccordionSummary>\r\n\r\n                    <Row>\r\n                        <Col md={11}>\r\n                            <Row className={\"mt-1\"}>\r\n                                <Col md={12} className={classes.root2} >\r\n                                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                                        {patientObj.surname + \", \" + patientObj.firstName + \" \" + patientObj.otherName !== null ? patientObj.otherName : \" \"}\r\n                                    </b>\r\n\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                    <span style={{color:'#000'}}>\r\n                                        {\" \"}\r\n                                        Hospital Number : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.identifier) }</b>\r\n                                    </span>\r\n                                </Col>\r\n\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                    <span style={{color:'#000'}}>\r\n                                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dateOfBirth }</b>\r\n                                    </span>\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span style={{color:'#000'}}>\r\n                                    {\" \"}\r\n                                    Age : <b style={{color:'#0B72AA'}}>{calculate_age(patientObj.dateOfBirth) }</b>\r\n                                </span>\r\n                                </Col>\r\n                                <Col md={4} style={{marginTop:\"10px\"}}>\r\n                                    <span  style={{color:'#000'}}>\r\n                                        {\" \"}\r\n                                        Sex :{\" \"}\r\n                                        <b style={{color:'#0B72AA',fontFamily:`'poppins', sans-serif`,fontWeight:'bolder'}}>{patientObj.sex }</b>\r\n                                    </span>\r\n\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span style={{color:'#000'}}>\r\n                                    {\" \"}\r\n                                    Phone Number : <b style={{color:'#0B72AA'}}>{getPhone(patientObj.contactPoint)}</b>\r\n                                </span>\r\n                                </Col>\r\n                                <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span style={{color:'#000'}}>\r\n                                    {\" \"}\r\n                                    Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)} </b>\r\n                                </span>\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n                        </Col>\r\n\r\n\r\n\r\n                    </Row>\r\n\r\n                </AccordionSummary>\r\n                <AccordionDetails className={classes.details}>\r\n                    {biometricStatus===true ? (\r\n                            <>\r\n                                <div >\r\n                                    <Typography variant=\"caption\">\r\n                                        <Label  style={{height:'30px', fontSize:'14px'}} color={patientBiometricStatus===true? \"green\" : \"red\"} size={\"large\"}>\r\n                                            Biometric Status\r\n                                            <Label.Detail>{patientBiometricStatus===true? \"Captured\" : \"Not Captured\"}</Label.Detail>\r\n                                        </Label>\r\n                                        {patientBiometricStatus!==true ? (\r\n\r\n                                                <>\r\n                                                    {permissions.includes('patient_check_in') || permissions.includes(\"all_permission\") ? (\r\n                                                            <>\r\n                                                                <Label style={{height:'30px', fontSize:'14px'}} as='a' color='teal' onClick={() => handleBiometricCapture(patientObj.id)} tag>\r\n                                                                    Capture Now\r\n                                                                </Label>\r\n                                                            </>\r\n                                                        )\r\n                                                        :\"\"\r\n                                                    }\r\n                                                </>\r\n                                            )\r\n                                            :\"\"\r\n                                        }\r\n\r\n                                    </Typography>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div >\r\n                                <Typography variant=\"caption\">\r\n                                    <Label color={\"red\"} style={{height:'30px', fontSize:'14px'}}>\r\n                                        Biometrics Module Not Install\r\n\r\n                                    </Label>\r\n\r\n                                </Typography>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </AccordionDetails>\r\n            </Accordion>\r\n{/*\r\n            <CaptureBiometric  modalstatus={modal} togglestatus={toggleModal} patientId={patientObj.id} biometricDevices={devices} setPatientBiometricStatus={setPatientBiometricStatus} />\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  Row,\r\n  Label,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  FormGroup,\r\n  CardHeader,\r\n  Input,\r\n  Badge,\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\r\nimport { Button2, Icon, List } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\r\n\r\nimport { green, red } from \"@mui/material/colors\";\r\nimport { Dimmer, Loader, Image, Segment } from \"semantic-ui-react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from \"@mui/material/Typography\";\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport fingerprintimage from \"../images/fingerprintimage.png\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from \"@mui/icons-material/Upgrade\";\r\nimport _ from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":\r\n      {\r\n        fontFamily: \"FontAwesome\",\r\n        border: \"0\",\r\n        verticalAlign: \"middle\",\r\n        marginLeft: \".25em\",\r\n        lineHeight: \"1\",\r\n      },\r\n    \"& .dropdown-menu .dropdown-item\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      padding: \"0.3rem 1.5rem\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .mt-4\": {\r\n      marginTop: \"28px !important\",\r\n    },\r\n    \"& .form-control\": {\r\n      color: \"#992E62\",\r\n    },\r\n    \"& .form-control:focus\": {\r\n      color: \"#014d88\",\r\n    },\r\n    \"& .sharp \": {\r\n      \"min-width\": \"35px\",\r\n      padding: \"5px\",\r\n      height: \"35px\",\r\n      \"min-height\": \"35px\",\r\n    },\r\n  },\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  /*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl = \"\";\r\n\r\nfunction Biometrics(props) {\r\n  //console.log(props.age);\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const permissions =\r\n    history.location && history.location.state\r\n      ? history.location.state.permissions\r\n      : [];\r\n  const [biometricDevices, setbiometricDevices] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    biometricType: \"FINGERPRINT\",\r\n    patientId: props.patientId,\r\n    templateType: \"\",\r\n    device: \"\",\r\n    reason: \"\",\r\n    age: \"\",\r\n  });\r\n  const [fingerType, setFingerType] = useState([]);\r\n  const [devices, setDevices] = useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [pageLoading, setPageLoading] = useState(false);\r\n  const [showCapture, setshowCapture] = React.useState(false);\r\n  const [tryAgain, setTryAgain] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n  // const [responseImage, setResponseImage] = useState(\"\")\r\n  const [capturedFingered, setCapturedFingered] = useState([]);\r\n  const [selectedFingers, setSelectedFingers] = useState([]);\r\n  const [imageQuality, setImageQuality] = useState(false);\r\n  const [isNewStatus, setIsNewStatus] = useState(true);\r\n\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now;\r\n  };\r\n\r\n  const buttonSx = {\r\n    ...(success && {\r\n      bgcolor: green[500],\r\n      \"&:hover\": {\r\n        bgcolor: green[700],\r\n      },\r\n    }),\r\n  };\r\n\r\n  const getPersonBiometrics = async () => {\r\n    const fingersCodeset = await axios.get(\r\n      `${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n\r\n    axios\r\n      .get(`${baseUrl}biometrics/person/${props.patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(async (response) => {\r\n        console.log(\"patient bio\", response.data);\r\n        if (response.data.length > 0) {\r\n          setStoredBiometrics(response.data);\r\n          setPageLoading(true);\r\n          let personCapturedFingers = _.uniq(\r\n            _.map(response.data, \"templateType\")\r\n          );\r\n          setSelectedFingers(personCapturedFingers);\r\n          let biometricItems = _.map(fingersCodeset.data, (item) => {\r\n            return _.extend({}, item, {\r\n              captured: personCapturedFingers.includes(item.display),\r\n            });\r\n          });\r\n          setFingerType(biometricItems);\r\n        } else {\r\n          let biometricItems = _.map(fingersCodeset.data, (item) => {\r\n            return _.extend({}, item, { captured: false });\r\n            //return item.captured = personCapturedFingers.includes(item.display)\r\n          });\r\n          setFingerType(biometricItems);\r\n        }\r\n      })\r\n      .catch(async (error) => {\r\n        // console.log(\"getPersonBiometrics error\")\r\n        // console.log(error)\r\n\r\n        let biometricItems = _.map(fingersCodeset.data, (item) => {\r\n          return _.extend({}, item, { captured: false });\r\n        });\r\n        setFingerType(biometricItems);\r\n        setPageLoading(true);\r\n      });\r\n  };\r\n\r\n  const clear_storelist = () => {\r\n    axios\r\n      .post(\r\n        `${baseUrl}biometrics/store-list/${props.patientId}`,\r\n        props.patientId,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        console.log(\"cleared store\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"cleared store error\");\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    clear_storelist();\r\n    getPersonBiometrics();\r\n    TemplateType();\r\n    //biometricFingers();\r\n  }, []);\r\n  //Get list of KP\r\n  const TemplateType = () => {\r\n    axios\r\n      .get(`${baseUrl}modules/check?moduleName=biometric`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          axios\r\n            .get(`${baseUrl}biometrics/devices?active=true`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            })\r\n            .then((response) => {\r\n              //console.log(response.data.find((x) => x.active === true));\r\n              setDevices(response.data.find((x) => x.active === true));\r\n              setbiometricDevices(response.data);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  //Get list of Finger index\r\n  const biometricFingers = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"er\", response);\r\n        setFingerType(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  //check if device is plugged or not\r\n  const checkDevice = (e) => {\r\n    const deviceName = e.target.value;\r\n    const selectedDevice = biometricDevices.find((x) => x.name === deviceName);\r\n    checkUrl = selectedDevice.url === null ? baseUrl : selectedDevice.url;\r\n    setObjValues({ ...objValues, device: deviceName });\r\n    axios\r\n      .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.errorType === \"ERROR\") {\r\n          toast.error(response.data.errorName + \" is not plug\");\r\n          //setshowCapture(true)\r\n        } else {\r\n          setshowCapture(true);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  // handle the input changes\r\n  const handleInputChange = (e) => {\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      age: calculate_age(props.age),\r\n    });\r\n  };\r\n  //form validation\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.templateType = objValues.templateType ? \"\" : \"This field is required\";\r\n    //temp.device = objValues.device ? \"\" : \"This field is required\"\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n  //to capture  selected index finger\r\n  const captureFinger = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setLoading(true);\r\n      // console.log(biometricDevices)\r\n      // console.log(devices)\r\n      // axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n      console.log(\"\", objValues);\r\n      axios\r\n        .post(\r\n          `${devices.url}?reader=${devices.name}&isNew=${isNewStatus}`,\r\n          objValues,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setLoading(false);\r\n          if (response.data.type === \"ERROR\") {\r\n            setLoading(false);\r\n            setTryAgain(true);\r\n            window.setTimeout(() => {\r\n              setTryAgain(false);\r\n            }, 5000);\r\n            toast.error(response.data.message.ERROR);\r\n            setIsNewStatus(false);\r\n          } else if (response.data.type === \"SUCCESS\") {\r\n            if (\r\n              response.data.imageQuality <= 60 &&\r\n              calculate_age(props.age) <= 6\r\n            ) {\r\n              toast.info(\r\n                \"Image quality captured is poor, Kindly give a reason for capture above.\",\r\n                { position: toast.POSITION.BOTTOM_CENTER, autoClose: 20000 }\r\n              );\r\n              setImageQuality(true);\r\n            }\r\n            const templateType = response.data.templateType;\r\n            setTryAgain(false);\r\n            setSuccess(true);\r\n            window.setTimeout(() => {\r\n              setSuccess(false);\r\n              setLoading(false);\r\n            }, 5000);\r\n            let biometricsEnrollments = response.data;\r\n            biometricsEnrollments.capturedBiometricsList = _.uniqBy(\r\n              biometricsEnrollments.capturedBiometricsList,\r\n              \"templateType\"\r\n            );\r\n\r\n            setCapturedFingered([...capturedFingered, biometricsEnrollments]);\r\n            //fingerType.splice(templateType, 1);\r\n            _.find(fingerType, { display: templateType }).captured = true;\r\n            setFingerType([...fingerType]);\r\n            //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n            setObjValues({ ...objValues, templateType: \"\" });\r\n            setIsNewStatus(false);\r\n            //console.log(\"captured\",  biometricsEnrollments)\r\n          } else {\r\n            setLoading(false);\r\n            setTryAgain(true);\r\n            toast.error(\"Something went wrong capturing biometrics...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const deleteBiometric = (id, finger) => {\r\n    axios\r\n      .delete(`${baseUrl}biometrics/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(`${finger} deleted successfully`, {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n        _.find(fingerType, { display: finger }).captured = false;\r\n        setFingerType([...fingerType]);\r\n        let newStoredBiometrics = _.reject(storedBiometrics, {\r\n          templateType: finger,\r\n        });\r\n        setStoredBiometrics(newStoredBiometrics);\r\n        clear_storelist();\r\n        if (newStoredBiometrics.length === 0) {\r\n          props.updatePatientBiometricStatus(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Something went wrong\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n        console.log(error);\r\n      });\r\n  };\r\n  //Save Biometric capture\r\n  const saveBiometrics = (e) => {\r\n    e.preventDefault();\r\n    if (capturedFingered.length >= 1) {\r\n      const capturedObj = capturedFingered[capturedFingered.length - 1];\r\n      console.log({ ...capturedObj, recapture: true });\r\n      capturedObj.capturedBiometricsList = _.uniqBy(\r\n        capturedObj.capturedBiometricsList,\r\n        \"templateType\"\r\n      );\r\n\r\n      //console.log(\"capturedObj\", capturedFingered);\r\n\r\n      axios\r\n        .post(`${baseUrl}biometrics/templates`, capturedObj, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          console.log(\"saved\", response);\r\n          toast.success(\"Biometric save successful\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          setCapturedFingered([]);\r\n          getPersonBiometrics();\r\n          props.updatePatientBiometricStatus(true);\r\n        })\r\n        .catch((error) => {\r\n          toast.error(\"Something went wrong saving biometrics\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      toast.error(\"You can't save less than 2 finger\", {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteTempBiometrics = (x) => {\r\n    axios\r\n      .delete(\r\n        `${baseUrl}biometrics?personId=${x.patientId}&templateType=${x.templateType}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        let deletedRecord = capturedFingered.filter(\r\n          (data) => data.templateType !== x.templateType\r\n        );\r\n        setCapturedFingered(deletedRecord);\r\n        toast.info(x.templateType + \"captured removed successfully!\");\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Something went wrong\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n        console.log(error);\r\n      });\r\n    // let deletedRecord = capturedFingered.filter(\r\n    //   (data) => data.templateType !== x.templateType\r\n    // );\r\n    // setCapturedFingered(deletedRecord);\r\n    // console.log(\"deleted temp\");\r\n  };\r\n\r\n  const getFingerprintsQuality = (imageQuality) => {\r\n    if (imageQuality > 60 && imageQuality <= 75) {\r\n      return (\r\n        <Badge color=\"warning\" style={{ fontSize: \"12px\" }}>\r\n          {imageQuality + \"%\"}\r\n        </Badge>\r\n      );\r\n    } else if (imageQuality > 75) {\r\n      return (\r\n        <Badge color=\"success\" style={{ fontSize: \"12px\" }}>\r\n          {imageQuality + \"%\"}\r\n        </Badge>\r\n      );\r\n    } else {\r\n      return (\r\n        <Badge color=\"error\" style={{ fontSize: \"12px\" }}>\r\n          {imageQuality + \"%\"}\r\n        </Badge>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        {/* temporal update */}\r\n        {permissions.includes(\"capture_patient_biometrics\") ||\r\n        permissions.includes(\"all_permission\") ? (\r\n          <div\r\n            style={{\r\n              flex: \"10\",\r\n              padding: \"5px\",\r\n              marginLeft: \"5px\",\r\n              border: \"1px solid rgba(99, 99, 99, 0.2)\",\r\n              boxShadow: \"rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\r\n            }}\r\n          >\r\n            <Row>\r\n              <ToastContainer />\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label\r\n                    for=\"device\"\r\n                    style={{\r\n                      color: \"#014d88\",\r\n                      fontWeight: \"bold\",\r\n                      fontSize: \"14px\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Device{\" \"}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"device\"\r\n                    id=\"device\"\r\n                    //onChange={checkDevice}\r\n                    value={objValues.device}\r\n                    required\r\n                    disabled\r\n                  >\r\n                    {biometricDevices.map(({ id, name, active, url, type }) => (\r\n                      <option key={id} value={url}>\r\n                        {type}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.device !== \"\" ? (\r\n                    <span className={classes.error}>{errors.device}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label\r\n                    for=\"device\"\r\n                    style={{\r\n                      color: \"#014d88\",\r\n                      fontWeight: \"bold\",\r\n                      fontSize: \"14px\",\r\n                    }}\r\n                  >\r\n                    Select Finger\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"templateType\"\r\n                    id=\"templateType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.templateType}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select Finger </option>\r\n\r\n                    {_.filter(fingerType, [\"captured\", false]).map((value) => (\r\n                      <option key={value.id} value={value.display}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.templateType !== \"\" ? (\r\n                    <span className={classes.error}>{errors.templateType}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              {!imageQuality ? (\r\n                \"\"\r\n              ) : (\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"device\"\r\n                      style={{\r\n                        color: \"#014d88\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"14px\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      Reason for capture{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"reason\"\r\n                      id=\"reason\"\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              )}\r\n\r\n              <Col md={2}>\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={captureFinger}\r\n                  className={\"mt-4\"}\r\n                  style={{ backgroundColor: \"#992E62\" }}\r\n                  startIcon={<FingerprintIcon />}\r\n                  disabled={loading}\r\n                >\r\n                  Capture Finger\r\n                </MatButton>\r\n              </Col>\r\n              <br />\r\n            </Row>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Row>\r\n          {capturedFingered.length >= 1 ? (\r\n            <>\r\n              <Col md={12} style={{ marginTop: \"10px\", paddingBottom: \"20px\" }}>\r\n                {\r\n                  /* <List celled horizontal>\r\n                  {capturedFingered.map((x) => (\r\n                    <List.Item\r\n                      style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        border: \"1px dotted #014d88\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    >\r\n                      <List.Header\r\n                        style={{\r\n                          paddingLeft: \"0px\",\r\n                          height: \"0.5rem\",\r\n\r\n                          alignItems: \"right\",\r\n                        }}\r\n                      >\r\n                        {getFingerprintsQuality(x.imageQuality)}\r\n                        <span\r\n                          onClick={() => {\r\n                            deleteTempBiometrics(x);\r\n                          }}\r\n                        >\r\n                          <Icon\r\n                            name=\"cancel\"\r\n                            color=\"red\"\r\n                            style={{ float: \"right\" }}\r\n                          />{\" \"}\r\n                        </span>\r\n                      </List.Header>\r\n                      <List.Content\r\n                        style={{\r\n                          width: \"200px\",\r\n                          height: \"160px\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        <FingerprintIcon\r\n                          style={{ color: \"#992E62\", fontSize: 150 }}\r\n                        />\r\n                      </List.Content>\r\n                      <List.Content\r\n                        style={{\r\n                          width: \"200px\",\r\n                          height: \"30px\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                          fontSize: \"18px\",\r\n                          color: \"#014d88\",\r\n                          fontWeight: \"bold\",\r\n                          fontFamily: '\"poppins\", sans-serif',\r\n                        }}\r\n                      >\r\n                        {x.templateType}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  ))}\r\n                </List> */\r\n                  //console.log(capturedFingered)\r\n                }\r\n                <List celled horizontal>\r\n                  {capturedFingered.map((x) => (\r\n                    <List.Item\r\n                      style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        border: \"1px dotted #014d88\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    >\r\n                      <List.Header\r\n                        style={{\r\n                          paddingLeft: \"0px\",\r\n                          height: \"0.5rem\",\r\n                          alignItems: \"right\",\r\n                        }}\r\n                      >\r\n                        {getFingerprintsQuality(x.mainImageQuality)}\r\n                        <span\r\n                          onClick={() => {\r\n                            deleteTempBiometrics(x);\r\n                          }}\r\n                        >\r\n                          <Icon\r\n                            name=\"cancel\"\r\n                            color=\"red\"\r\n                            style={{ float: \"right\" }}\r\n                          />{\" \"}\r\n                        </span>\r\n                      </List.Header>\r\n                      <List.Content\r\n                        style={{\r\n                          width: \"200px\",\r\n                          height: \"150px\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        <FingerprintIcon\r\n                          style={{ color: \"#992E62\", fontSize: 150 }}\r\n                        />\r\n                      </List.Content>\r\n                      <List.Content\r\n                        style={{\r\n                          width: \"200px\",\r\n                          height: \"30px\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                          fontSize: \"16px\",\r\n                          color: \"#014d88\",\r\n                          fontWeight: \"bold\",\r\n                          fontFamily: '\"poppins\", sans-serif',\r\n                        }}\r\n                      >\r\n                        {x.templateType}\r\n                      </List.Content>\r\n                      <List.Content>\r\n                        <br />\r\n                        {x.mainImageQuality < 75 ? (\r\n                          <MatButton\r\n                            type=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={() => {\r\n                              deleteTempBiometrics(x);\r\n                            }}\r\n                            startIcon={<RestartAltIcon />}\r\n                          >\r\n                            Reset recapture\r\n                          </MatButton>\r\n                        ) : (\r\n                          \" \"\r\n                        )}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  ))}\r\n                </List>\r\n              </Col>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <Col md={12}>\r\n                {storedBiometrics.length < 10 &&\r\n                storedBiometrics.length !== 0 ? (\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    //disabled={capturedFingered.length < 6 ? true : false}\r\n                    onClick={saveBiometrics}\r\n                    // className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                  >\r\n                    Save Capture\r\n                  </MatButton>\r\n                ) : (\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={capturedFingered.length < 6 ? true : false}\r\n                    onClick={saveBiometrics}\r\n                    // className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                  >\r\n                    Save Capture\r\n                  </MatButton>\r\n                )}\r\n              </Col>\r\n              <br />\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Row>\r\n      </div>\r\n      <div style={{ display: \"flex\", width: \"100%\" }}>\r\n        <div\r\n          className=\"\"\r\n          style={{\r\n            padding: \"5px\",\r\n            flex: \"10\",\r\n            boxShadow: \"rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\r\n            minHeight: \"400px\",\r\n          }}\r\n        >\r\n          {pageLoading && storedBiometrics.length > 0 ? (\r\n            <div style={{ display: \"flex\", width: \"100%\", flexWrap: \"wrap\" }}>\r\n              {storedBiometrics.map((biometric, index) => (\r\n                <div\r\n                  key={index}\r\n                  style={{ minHeight: \"120px\", padding: \"5px\", width: \"20%\" }}\r\n                >\r\n                  <div className=\"card \" style={{ borderRadius: \"6px\" }}>\r\n                    <div\r\n                      className=\"card-header align-items-start\"\r\n                      style={{ backgroundColor: \"#fff\" }}\r\n                    >\r\n                      <div>\r\n                        <h6 className=\"fs-18 font-w500 mb-3 user-name\">\r\n                          <Link\r\n                            to={\"#\"}\r\n                            style={{\r\n                              color: \"#014d88\",\r\n                              fontSize: \"14px\",\r\n                              fontFamily: `\"poppins\",sans-serif`,\r\n                            }}\r\n                          >\r\n                            {biometric.templateType}\r\n                          </Link>\r\n                        </h6>\r\n                        <div\r\n                          className=\"fs-9 text-nowrap\"\r\n                          style={{\r\n                            fontSize: \"10px\",\r\n                            color: \"#992E62\",\r\n                            fontWeight: \"bold\",\r\n                            fontFamily: `\"poppins\",sans-serif`,\r\n                          }}\r\n                        >\r\n                          <i\r\n                            className=\"fa fa-calendar-o me-3\"\r\n                            aria-hidden=\"true\"\r\n                          ></i>\r\n                          {moment(biometric.lastModifiedDate).format(\r\n                            \"YYYY-MM-DD HH:mm\"\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/*Action button -- Dropdown menu*/}\r\n                      <Dropdown className=\"dropdown ms-auto\">\r\n                        <Dropdown.Toggle\r\n                          as=\"button\"\r\n                          variant=\"\"\r\n                          drop=\"up\"\r\n                          className=\"btn sharp btn-primary \"\r\n                          id=\"tp-btn\"\r\n                          style={{\r\n                            backgroundColor: \"#014d88\",\r\n                            borderColor: \"#014d88\",\r\n                            borderRadius: \"5px\",\r\n                            marginRight: \"-18px\",\r\n                            marginTop: \"-10px\",\r\n                          }}\r\n                        >\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                              <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu\r\n                          alignRight={true}\r\n                          className=\"dropdown-menu-right\"\r\n                        >\r\n                          <Dropdown.Item\r\n                            style={{ color: \"red\" }}\r\n                            onClick={() =>\r\n                              deleteBiometric(\r\n                                biometric.id,\r\n                                biometric.templateType\r\n                              )\r\n                            }\r\n                          >\r\n                            <DeleteIcon /> Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                    <div className=\"card-body p-0 pb-2\">\r\n                      <ul className=\"list-group list-group-flush\">\r\n                        <li\r\n                          className=\"list-group-item\"\r\n                          style={{\r\n                            height: \"100px\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={fingerprintimage}\r\n                            alt=\"\"\r\n                            style={{ height: \"80px\" }}\r\n                          />\r\n                        </li>\r\n\r\n                        <li className=\"list-group-item\">\r\n                          <Badge\r\n                            variant=\"info badge-xs light\"\r\n                            className=\"card-link float-end\"\r\n                          >\r\n                            {biometric.imageQuality !== null\r\n                              ? biometric.imageQuality + \"%\"\r\n                              : \"N/A\"}{\" \"}\r\n                            {/*{contact.version}*/}\r\n                          </Badge>\r\n                          <span className=\"mb-0 title\">\r\n                            Status {biometric.iso}\r\n                          </span>{\" \"}\r\n                          :\r\n                          <span className=\"text-black desc-text ms-2\">\r\n                            <Badge\r\n                              variant={\r\n                                biometric.iso === true\r\n                                  ? \"primary badge-xs\"\r\n                                  : \"danger badge-xs\"\r\n                              }\r\n                            >\r\n                              <i\r\n                                className=\"fa fa-check-square me-2 scale4\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </Badge>\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"flex-grow-8\">\r\n                <div className=\"flex-grow-8\">\r\n                  <Alert severity=\"info\">\r\n                    <AlertTitle style={{ height: \"400px\" }}>\r\n                      <strong>No biometrics captured</strong>\r\n                    </AlertTitle>\r\n                  </Alert>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {/*{permissions.includes('capture_patient_biometrics')|| permissions.includes(\"all_permission\")?*/}\r\n        {permissions.includes(\"capture_patient_biometrics\") ||\r\n        permissions.includes(\"all_permission\")\r\n          ? \"\"\r\n          : // <div\r\n            //     style={{\r\n            //     flex: \"3\",\r\n            //     padding: \"5px\",\r\n            //     marginLeft: \"5px\",\r\n            //     border: \"1px solid rgba(99, 99, 99, 0.2)\",\r\n            //     boxShadow: \"rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\r\n            //     }}\r\n            // >\r\n            //     <div className=\"col-12\">\r\n            //         <ToastContainer />\r\n            //         <Col md={12}>\r\n            //             <FormGroup>\r\n            //                 <Label\r\n            //                     for=\"device\"\r\n            //                     style={{\r\n            //                     color: \"#014d88\",\r\n            //                     fontWeight: \"bold\",\r\n            //                     fontSize: \"14px\",\r\n            //                     }}\r\n            //                 >\r\n            //                     {\" \"} Device {\" \"}\r\n            //                 </Label>\r\n            //                 <Input\r\n            //                     type=\"select\"\r\n            //                     name=\"device\"\r\n            //                     id=\"device\"\r\n            //                     //onChange={checkDevice}\r\n            //                     value={objValues.device}\r\n            //                     required\r\n            //                     disabled\r\n            //                 >\r\n            //                     {biometricDevices.map(({ id, name, active, url, type }) => (\r\n            //                     <option key={id} value={url}>\r\n            //                         {type}\r\n            //                     </option>\r\n            //                     ))}\r\n            //                 </Input>\r\n            //                 {errors.device !== \"\" ? (\r\n            //                     <span className={classes.error}>{errors.device}</span>\r\n            //                 ) : (\r\n            //                     \"\"\r\n            //                 )}\r\n            //             </FormGroup>\r\n            //         </Col>\r\n\r\n            //     <div className=\"row col-12\">\r\n            //         <Col md={12}>\r\n            //         <FormGroup>\r\n            //             <Label\r\n            //             for=\"device\"\r\n            //             style={{\r\n            //                 color: \"#014d88\",\r\n            //                 fontWeight: \"bold\",\r\n            //                 fontSize: \"14px\",\r\n            //             }}\r\n            //             >\r\n            //             Select Finger\r\n            //             </Label>\r\n            //             <Input\r\n            //             type=\"select\"\r\n            //             name=\"templateType\"\r\n            //             id=\"templateType\"\r\n            //             onChange={handleInputChange}\r\n            //             value={objValues.templateType}\r\n            //             required\r\n            //             >\r\n            //             <option value=\"\">Select Finger </option>\r\n\r\n            //             {_.filter(fingerType, [\"captured\", false]).map(\r\n            //                 (value) => (\r\n            //                 <option key={value.id} value={value.display}>\r\n            //                     {value.display}\r\n            //                 </option>\r\n            //                 )\r\n            //             )}\r\n            //             </Input>\r\n            //             {errors.templateType !== \"\" ? (\r\n            //             <span className={classes.error}>\r\n            //                 {errors.templateType}\r\n            //             </span>\r\n            //             ) : (\r\n            //             \"\"\r\n            //             )}\r\n            //         </FormGroup>\r\n            //         </Col>\r\n\r\n            //         <Col md={12}>\r\n            //         <MatButton\r\n            //             type=\"button\"\r\n            //             variant=\"contained\"\r\n            //             color=\"primary\"\r\n            //             onClick={captureFinger}\r\n            //             className={\"mt-4\"}\r\n            //             style={{ backgroundColor: \"#992E62\" }}\r\n            //             startIcon={<FingerprintIcon />}\r\n            //             disabled={loading}\r\n            //         >\r\n            //             Capture Finger\r\n            //         </MatButton>\r\n            //         </Col>\r\n            //         <br />\r\n            //     </div>\r\n            //     </div>\r\n            // </div>\r\n            \"\"}\r\n      </div>\r\n\r\n      {/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Biometrics;\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col} from \"reactstrap\";\r\nimport { Step, Label, Segment, Icon } from \"semantic-ui-react\";\r\nimport PatientCard from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Box from '@mui/material/Box';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport Swal from \"sweetalert2\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {Button, Card, CardContent, FormControl, Grid, MenuItem, Paper, TextField, Typography} from \"@mui/material\";\r\nimport {format} from 'date-fns';\r\nimport { toast} from \"react-toastify\";\r\nimport MaterialTable from 'material-table';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {TiArrowBack} from \"react-icons/ti\";\r\nimport Biometrics from \"./Biometrics\";\r\nimport moment from \"moment\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport _ from 'lodash';\r\n\r\nimport { DesktopDateTimePicker } from '@mui/x-date-pickers/DesktopDateTimePicker';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        marginBottom: 20,\r\n        flexGrow: 1,\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n    checkinModal:{\r\n        \"& .modal-dialog\":{\r\n            maxWidth:\"1000px\"\r\n        },\r\n        \"& .ui.label\":{\r\n            backgroundColor:\"#fff\",\r\n            fontSize:'16px',\r\n            color:'#014d88',\r\n            fontWeight:'bold',\r\n            textAlign:'left'\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    checkInDatePicker:{\r\n        '& .MuiFormControl-root.MuiTextField-root':{\r\n            border:'1px solid #eee'\r\n        }\r\n    }\r\n}));\r\nconst appointmentColumns = [\r\n    { field: 'id', headerName: 'ID', width: 90 },\r\n    {\r\n        field: 'firstName',\r\n        headerName: 'First name',\r\n        width: 150,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'lastName',\r\n        headerName: 'Last name',\r\n        width: 150,\r\n        editable: true,\r\n    },\r\n    {\r\n        field: 'age',\r\n        headerName: 'Age',\r\n        type: 'number',\r\n        width: 110,\r\n        editable: true,\r\n    },\r\n\r\n];\r\n\r\nconst appointments = [\r\n    // { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n\r\n];\r\n\r\n\r\nlet newDate = new Date()\r\nfunction PatientDashboard(props) {\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const [loading, setLoading] = useState('');\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [checkInDate,setCheckInDate]=useState(new Date());\r\n    const [checkOutDate,setCheckOutDate]=useState(new Date());\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const { handleSubmit, control } = useForm();\r\n    const [modal, setModal] = useState(false);\r\n    const [allServices, setAllServices] = useState(null);\r\n    const [checkinStatus, setCheckinStatus]= useState(false)\r\n    const [modalCheckOut, setModalCheckOut] = useState(false);\r\n    const [services, setServices]= useState([]);\r\n    const [selectedServices, setSelectedServices]= useState({\"selected\":[]});\r\n    const [patientVisits, setPatientVisits]= useState([]);\r\n    const [patientBiometricStatus, setPatientBiometricStatus]= useState(patientObj.biometricStatus);\r\n    const [biometricsModuleInstalled,setBiometricsModuleInstalled]=useState(false);\r\n\r\n    const [checkOutObj, setCheckOutObj] = useState({\r\n        personId: \"\",\r\n        visitStartDate:format(new Date(newDate), 'yyyy-MM-dd hh:mm')\r\n    })\r\n    const [checkInObj, setCheckInObj] = useState({\r\n        serviceIds:\"\",\r\n        visitDto: {\r\n            personId: patientObj.id,\r\n            checkInDate: format(new Date(newDate), 'yyyy-MM-dd hh:mm')\r\n        }\r\n    })\r\n\r\n    const updatePatientBiometricStatus = (bioStatus) =>{\r\n        setPatientBiometricStatus(bioStatus);\r\n    }\r\n    const loadServices = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/post-service`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            //setServices(response.data);\r\n            setAllServices(response.data);\r\n            setServices(\r\n                Object.entries(response.data).map(([key, value]) => ({\r\n                    label: value.moduleServiceName,\r\n                    value: value.moduleServiceCode,\r\n                }))\r\n            );\r\n/*            setSelectedServices(\r\n                _.uniq(_.map(userDetail.applicationUserOrganisationUnits, 'organisationUnitName'))\r\n            )*/\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred fetching services!',\r\n            });\r\n        }\r\n    }, []);\r\n    const loadPatientVisits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/visit/visit-by-patient/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setPatientVisits(response.data);\r\n            response.data.map((visits)=> {\r\n                if(visits.checkOutDate===null){\r\n                    setCheckinStatus(true)\r\n                }\r\n            })\r\n\r\n\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred fetching services!',\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const checkForBiometricsModule =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    setBiometricsModuleInstalled(true);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n    const loadUserDetails = () =>{\r\n        axios.get(`${baseUrl}account`).then((response)=>{\r\n\r\n        }).catch((error)=>{\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadUserDetails();\r\n        loadServices();\r\n        loadPatientVisits();\r\n        checkForBiometricsModule();\r\n    }, [loadServices, loadPatientVisits]);\r\n\r\n    let visitTypesRows = null;\r\n    if (services && services.length > 0) {\r\n        visitTypesRows = services.map((service, index) => (\r\n            <MenuItem key={service.moduleServiceCode} value={service.moduleServiceCode}>{service.moduleServiceName}</MenuItem>\r\n        ));\r\n    }\r\n\r\n    const onChangeDate = (date) => {\r\n        console.log(date.target.value)\r\n        const newDate = moment(new Date(date.target.value)).format(\"yyyy-MM-dd hh:mm\");\r\n        setCheckInDate(newDate);\r\n        console.log(newDate);\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            field: 'checkInDate',\r\n            headerName: 'Checked In Date',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'checkOutDate',\r\n            headerName: 'Check Out Date',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'service',\r\n            headerName: 'Service',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'status',\r\n            headerName: 'Status',\r\n            width: 200,\r\n            editable: false,\r\n        }\r\n    ];\r\n\r\n    const panes = [\r\n        { menuItem: 'Visits', render: () =>\r\n                <Tab.Pane>\r\n\r\n                    <MaterialTable\r\n                        title=\"\"\r\n                        columns={[\r\n                            {\r\n                                title: \"Check-In Date\",\r\n                                field: \"checkInDate\", filtering: false,\r\n                                headerStyle: {\r\n                                    backgroundColor: \"#039be5\",\r\n                                    border:'2px solid #fff',\r\n                                    paddingRight:'30px'\r\n                                }\r\n                            },\r\n                            { title: \"Check-Out Date\", field: \"checkOutDate\", filtering: false  },\r\n                            { title: \"Service\", field: \"service\", filtering: false  },\r\n                            { title: \"Status\", field: \"status\", filtering: false },\r\n                        ]}\r\n                        isLoading={loading}\r\n                        data={patientVisits.map((row) => ({\r\n                            checkInDate: moment(row.checkInDate).format(\"YYYY-MM-DD h:mm a\"),\r\n                            checkOutDate: row.checkOutDate?moment(row.checkOutDate).format(\"YYYY-MM-DD h:mm a\"):\"Visit Ongoing\",\r\n                            service:row.service,\r\n                            status:(<h6 style={{color:row.status ==='COMPLETED' ? 'green' : 'red'}}>{row.status}</h6>),\r\n\r\n                        }))}\r\n\r\n                        options={{\r\n                            headerStyle: {\r\n                                backgroundColor: \"#014d88\",\r\n                                color: \"#fff\",\r\n                                fontSize:'16px',\r\n                                padding:'10px',\r\n                                fontWeight:'bold'\r\n                            },\r\n                            rowStyle: {\r\n                                color: 'rgba(0,0,0,.87)',\r\n                                fontFamily:`'poppins', sans-serif`\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width : '200%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: 'left',\r\n                            pageSizeOptions:[10,20,100],\r\n                            pageSize:10,\r\n                            debounceInterval: 400\r\n                        }}\r\n                    />\r\n                </Tab.Pane>\r\n        },\r\n\r\n/*        { menuItem: permissions.includes('view_patient_appointment') || permissions.includes(\"all_permission\") ? 'Appointments' : \"\", render: () =>\r\n                permissions.includes('view_patient_appointment') || permissions.includes(\"all_permission\") ?\r\n                    <Tab.Pane>\r\n                        <div style={{ height: 400, width: '100%' }}>\r\n                            <DataGrid\r\n                                rows={appointments}\r\n                                columns={appointmentColumns}\r\n                                pageSize={5}\r\n                                rowsPerPageOptions={[5]}\r\n                                checkboxSelection\r\n                                disableSelectionOnClick\r\n                            />\r\n                        </div>\r\n                    </Tab.Pane>\r\n                    :\"\"\r\n        },*/\r\n\r\n                { menuItem: permissions.includes('view_patient_appointment') && biometricsModuleInstalled || permissions.includes(\"all_permission\")  && biometricsModuleInstalled? 'Biometrics' : \"\", render: () =>\r\n                        permissions.includes('view_patient_appointment') || permissions.includes(\"all_permission\") ?\r\n                            <Tab.Pane>\r\n                                <div style={{ minHeight: 400, width: '100%' }}>\r\n                                    <Biometrics patientId={patientObj.id} updatePatientBiometricStatus={updatePatientBiometricStatus}/>\r\n                                </div>\r\n                            </Tab.Pane>\r\n                            :\"\"\r\n                }\r\n\r\n\r\n\r\n    ];\r\n\r\n    const handleCheckIn = () => {\r\n        setModal(true);\r\n    };\r\n    const handleCheckOut = () => {\r\n        setModalCheckOut(true);\r\n    };\r\n\r\n    const onCancelCheckIn = () => {\r\n        setModal(false);\r\n    };\r\n    const onCancelCheckOut = () => {\r\n        setModalCheckOut(false);\r\n    };\r\n    const onDelete = () => {\r\n\r\n    };\r\n/*    const handleInputChangeService = (e) => {\r\n        setSelectedServices({ ...selectedServices, [e.target.name]: e.target.value });\r\n    };*/\r\n    //console.lo(selectedServices)\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const today = new Date();\r\n            const visitDetails = await axios.get(`${baseUrl}patient/visit/visit-detail/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            const visitDetail = visitDetails.data;\r\n            const pendingVisit = visitDetail.find(obj => obj.status == \"PENDING\");\r\n            let visit = null;\r\n            if (!pendingVisit) {\r\n                const visitResponse = await axios.post(`${baseUrl}patient/visit`, {\r\n                    \"personId\": patientObj.id,\r\n                    \"visitStartDate\": today\r\n                }, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                visit = visitResponse.data;\r\n            } else {\r\n                visit = pendingVisit;\r\n            }\r\n            await axios.post(`${baseUrl}patient/encounter`, {\r\n                \"encounterDate\": today,\r\n                \"personId\": patientObj.id,\r\n                \"serviceCode\": data.VisitType,\r\n                \"status\": \"PENDING\",\r\n                \"visitId\": visit.id\r\n            }, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setModal(false);\r\n            await Swal.fire({\r\n                icon: 'success',\r\n                text: 'CheckedIn successfully',\r\n                timer: 1500\r\n            });\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred while checking in Patient!',\r\n            });\r\n        }\r\n    };\r\n    const onError = async () => {\r\n        await Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'An error occurred while checking in Patient!',\r\n        });\r\n    };\r\n\r\n    let checkInServicesID = [];\r\n    /**** Submit Button For CheckIN  */\r\n    const handleSubmitCheckIn = (e) => {\r\n        e.preventDefault();\r\n        //Check if selected service object is empty before creating visit and posting.\r\n        let m = moment(checkInDate, \"yyyy-MM-DD hh:mm\").format('yyyy-MM-DD H:mm');\r\n        if(selectedServices.selected.length > 0 && moment(m).isValid()){\r\n            selectedServices.selected.length > 0 && selectedServices.selected.map((service)=> {\r\n                checkInServicesID.push(_.find(allServices,{moduleServiceCode:service}).id)\r\n            });\r\n\r\n            checkInObj.serviceIds= checkInServicesID\r\n            //Ensure date time is in 24hr format\r\n            checkInObj.visitDto.checkInDate = moment(checkInDate, \"yyyy-MM-DD hh:mm\").format('yyyy-MM-DD HH:mm');\r\n            axios.post(`${baseUrl}patient/visit/checkin`, checkInObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Patient Check-In successful\");\r\n                    setCheckinStatus(true)\r\n                    onCancelCheckIn()\r\n                    loadPatientVisits()\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    toast.error(\"Something went wrong\");\r\n                    onCancelCheckIn()\r\n                });\r\n        }else{\r\n            toast.error(\"Kindly check the form for a valid date and selected services\");\r\n        }\r\n\r\n    }\r\n\r\n    /**** Submit Button Processing  */\r\n    const handleSubmitCheckOut = (e) => {\r\n        e.preventDefault();\r\n        const getVisitID= patientVisits.find((visits)=> visits.status==='PENDING')\r\n\r\n        axios.put(`${baseUrl}patient/visit/checkout/${getVisitID.id}`,getVisitID.id,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n        )\r\n            .then(response => {\r\n                toast.success(\"Record save successful\");\r\n                setCheckinStatus(false)\r\n                onCancelCheckOut()\r\n                loadPatientVisits()\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                toast.error(\"Something went wrong\");\r\n                onCancelCheckOut()\r\n            });\r\n    }\r\n    const onServiceSelect = (selectedValues) => {\r\n        setSelectedServices({\"selected\":selectedValues});\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card>\r\n                <CardContent>\r\n\r\n                    <PatientCard patientObj={patientObj} permissions={permissions} patientBiometricStatus={patientBiometricStatus}/>\r\n                    <Card style={{marginTop:'10px',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <CardContent>\r\n                            <div className=\"row\">\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    &nbsp;\r\n                                </div>\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    &nbsp;\r\n                                </div>\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    &nbsp;\r\n                                </div>\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    <Link to={\"/\"} >\r\n                                        <MatButton\r\n                                            className=\" float-right mr-1\"\r\n                                            variant=\"contained\"\r\n                                            floated=\"left\"\r\n                                            startIcon={<TiArrowBack  />}\r\n                                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n                                        >\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                                        </MatButton>\r\n                                    </Link>\r\n\r\n                                    {permissions.includes('patient_check_in') || permissions.includes(\"all_permission\") ? (\r\n                                            <>\r\n                                                {checkinStatus===false ? (\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            style={{ backgroundColor: \"rgb(4, 196, 217)\", fontSize:'14PX', fontWeight:'bold', height:'35px' }}\r\n                                                            onClick={handleCheckIn}\r\n                                                            className=\" float-right mr-1\"\r\n                                                        >\r\n                                                            <span style={{ textTransform: \"capitalize\" }}>CheckIn</span>\r\n                                                        </Button>\r\n                                                    )\r\n                                                    :\r\n                                                    \"\"\r\n                                                }\r\n                                            </>\r\n                                        )\r\n                                        :\"\"\r\n                                    }\r\n                                    {checkinStatus===true ? (\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                style={{ backgroundColor: \"green\", fontSize:'14PX', fontWeight:'bold', height:'35px' }}\r\n                                                onClick={handleCheckOut}\r\n                                                className=\" float-right mr-1\"\r\n                                            >\r\n                                                <span style={{ textTransform: \"capitalize\" }}>Check Out</span>\r\n                                            </Button>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                            <Tab panes={panes} />\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n\r\n                </CardContent>\r\n            </Card>\r\n            <Modal  size=\"lg\" style={{maxWidth: '900px'}} isOpen={modal} toggle={onCancelCheckIn}  className={classes.checkinModal}>\r\n                    <ModalHeader toggle={onCancelCheckIn}><h5 style={{fontWeight:\"bold\",fontSize:'30px',color:'#992E62'}}>Select Check-In Service</h5></ModalHeader>\r\n                    <ModalBody>\r\n                        <form onSubmit={handleSubmitCheckIn}>\r\n                            <Paper\r\n                                style={{\r\n                                    display: \"grid\",\r\n                                    gridRowGap: \"20px\",\r\n                                    padding: \"20px\",\r\n                                    margin: \"10px 10px\",\r\n                                }}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        <FormGroup style={{width:'100%'}} className={classes.checkInDatePicker}>\r\n                                            <LocalizationProvider dateAdapter={AdapterDateFns} >\r\n                                                <Label for=\"post-services\" style={{color:'#014d88',fontWeight:'bolder',fontSize:'18px'}}>Check-In Date *</Label>\r\n                                                <DesktopDateTimePicker\r\n                                                    renderInput={(params) =>\r\n                                                        <TextField\r\n                                                            {...params}\r\n\r\n                                                            sx={{\r\n                                                                /*label:{ color:'#014d88',fontWeight:'bolder',fontSize:'18px' }*/\r\n                                                                input:{fontSize:'14px'},\r\n                                                            }}\r\n                                                            fullWidth\r\n                                                        />\r\n                                                    }\r\n                                                    value={checkInDate}\r\n                                                    onChange={(newValue) => {\r\n                                                        setCheckInDate(newValue);\r\n                                                    }}\r\n                                                    maxDate={new Date()}\r\n                                                    maxTime={new Date()}\r\n                                                    style={{width:'100%'}}\r\n                                                />\r\n                                            </LocalizationProvider>\r\n                                        </FormGroup>\r\n                                    </Grid>\r\n                                    {/*                                <Grid item xs={8}>\r\n\r\n                                    <FormControl >\r\n                                        <Label for=\"dateOfRegistration\">Select service </Label>\r\n                                        <Autocomplete\r\n                                            multiple\r\n                                            id=\"checkboxes-tags-demo\"\r\n                                            options={services}\r\n                                            //disableCloseOnSelect\r\n                                            getOptionLabel={(option) => option.moduleServiceName}\r\n                                            onChange={(e, i) => {\r\n                                                console.log(i)\r\n                                                setSelectedServices({ ...selectedServices, checkInServices: i });\r\n                                            }}\r\n                                            renderOption={(props, option, { selected }) => (\r\n                                                <li {...props}>\r\n                                                    <Checkbox\r\n                                                        icon={icon}\r\n                                                        checkedIcon={checkedIcon}\r\n                                                        style={{ marginRight: 8 }}\r\n                                                        checked={selected}\r\n                                                    />\r\n                                                    {option.moduleServiceName}\r\n                                                </li>\r\n                                            )}\r\n                                            style={{ width: 400 }}\r\n                                            renderInput={(params) => (\r\n                                                <TextField {...params} label=\"Services\" />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </FormControl>\r\n                                </Grid>*/}\r\n                                    <Grid item xs={12}>\r\n                                        <FormGroup>\r\n                                            <Label for=\"post-services\" style={{color:'#014d88',fontWeight:'bolder',fontSize:'18px'}}><h5 style={{fontWeight:\"bold\",fontSize:'30px',color:'#992E62'}}>Check-In Service *</h5></Label>\r\n                                            <DualListBox\r\n                                                options={services}\r\n                                                onChange={onServiceSelect}\r\n                                                selected={selectedServices.selected}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </form>\r\n                    </ModalBody>\r\n            </Modal>\r\n            {/* Modal for CheckOut Patient */}\r\n            <Modal isOpen={modalCheckOut} toggle={onCancelCheckOut} className={classes.checkinModal} style={{maxWidth: '900px',height:\"800px\"}}>\r\n                <ModalHeader toggle={onCancelCheckOut}><h5 style={{fontWeight:\"bold\",fontSize:'30px',color:'#014d88'}}>Check Out </h5></ModalHeader>\r\n                <ModalBody>\r\n                    <form >\r\n                        <Paper\r\n                            style={{\r\n                                display: \"grid\",\r\n                                gridRowGap: \"20px\",\r\n                                padding: \"20px\",\r\n                                margin: \"10px 10px\",\r\n                            }}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <h5 style={{color:'#992E62',fontSize:\"20px\", fontWeight:'bold'}}>Are you sure you want to check-out patient?</h5>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <FormGroup style={{width:'100%'}} className={classes.checkInDatePicker}>\r\n                                        <LocalizationProvider dateAdapter={AdapterDateFns} >\r\n                                            <Label for=\"post-services\" style={{color:'#014d88',fontWeight:'bolder',fontSize:'16px'}}>Check-Out Date *</Label>\r\n                                            <DesktopDateTimePicker\r\n                                                renderInput={(params) =>\r\n                                                    <TextField\r\n                                                        {...params}\r\n\r\n                                                        sx={{\r\n                                                            /*label:{ color:'#014d88',fontWeight:'bolder',fontSize:'18px' }*/\r\n                                                            input:{fontSize:'14px'},\r\n                                                        }}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                }\r\n                                                value={checkOutDate}\r\n                                                onChange={(newValue) => {\r\n                                                    setCheckOutDate(newValue);\r\n                                                }}\r\n                                                maxDate={new Date()}\r\n                                                maxTime={new Date()}\r\n                                                style={{width:'100%'}}\r\n                                            />\r\n                                        </LocalizationProvider>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Button type={\"submit\"} onClick={handleSubmitCheckOut} variant=\"contained\" color={\"primary\"}>Yes</Button>\r\n                                    <Button  onClick={onCancelCheckOut} variant=\"contained\" style={{backgroundColor:'#992E62',color:\"#fff\",marginLeft:\"10px\"}}>Cancel</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n            {/* End of Checkout Modal */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientDashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n} from \"@material-ui/core\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\nfunction Index(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj ? props.patientObj : {};\r\n  const permissions = props.permissions ? props.permissions : [];\r\n  const [modal, setModal] = useState(false); //Modal to collect sample\r\n  const [patientBiometricStatus, setPatientBiometricStatus] = useState(\r\n    props.patientBiometricStatus\r\n  );\r\n  const toggleModal = () => setModal(!modal);\r\n\r\n  const [biometricStatus, setBiometricStatus] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  useEffect(() => {\r\n    setPatientBiometricStatus(props.patientBiometricStatus);\r\n    TemplateType();\r\n  }, [props.patientBiometricStatus]);\r\n  //Get list of KP\r\n  const TemplateType = () => {\r\n    axios\r\n      .get(`${baseUrl}modules/check?moduleName=biometric`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setBiometricStatus(response.data);\r\n        if (response.data === true) {\r\n          axios\r\n            .get(`${baseUrl}biometrics/devices`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            })\r\n            .then((response) => {\r\n              setDevices(response.data);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const getHospitalNumber = (identifier) => {\r\n    const hospitalNumber = identifier.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  const getPhone = (contactPoint) => {\r\n    const phoneContact = contactPoint?.contactPoint?.find(\r\n      (obj) => obj.type == \"phone\"\r\n    );\r\n    return phoneContact ? phoneContact.value : \"\";\r\n  };\r\n\r\n  const getAddress = (address) => {\r\n    const city =\r\n      address && address.address && address.address.length > 0\r\n        ? `${address.address[0].line[0]}, ${address.address[0].city}`\r\n        : null;\r\n    return city;\r\n  };\r\n\r\n  const handleBiometricCapture = (id) => {\r\n    let patientObjID = id;\r\n    setModal(!modal);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion defaultExpanded>\r\n        <AccordionSummary>\r\n          <Row>\r\n            <Col md={11}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    {patientObj.surname + \", \" + patientObj.firstName}\r\n                  </b>\r\n                </Col>\r\n                <Col\r\n                  md={4}\r\n                  className={classes.root2}\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  <span style={{ color: \"#000\" }}>\r\n                    {\" \"}\r\n                    Hospital Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getHospitalNumber(patientObj.identifier)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col\r\n                  md={4}\r\n                  className={classes.root2}\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  <span style={{ color: \"#000\" }}>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>{patientObj.dateOfBirth}</b>\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  md={4}\r\n                  className={classes.root2}\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  <span style={{ color: \"#000\" }}>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {calculate_age(patientObj.dateOfBirth)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} style={{ marginTop: \"10px\" }}>\r\n                  <span style={{ color: \"#000\" }}>\r\n                    {\" \"}\r\n                    Sex :{\" \"}\r\n                    <b\r\n                      style={{\r\n                        color: \"#0B72AA\",\r\n                        fontFamily: `'poppins', sans-serif`,\r\n                        fontWeight: \"bolder\",\r\n                      }}\r\n                    >\r\n                      {patientObj.sex}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  md={4}\r\n                  className={classes.root2}\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  <span style={{ color: \"#000\" }}>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getPhone(patientObj?.contactPoint)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  md={4}\r\n                  className={classes.root2}\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  <span style={{ color: \"#000\" }}>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getAddress(patientObj.address)}{\" \"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.details}>\r\n          {biometricStatus === true ? (\r\n            <>\r\n              <div>\r\n                <Typography variant=\"caption\">\r\n                  <Label\r\n                    style={{ height: \"30px\", fontSize: \"14px\" }}\r\n                    color={patientBiometricStatus === true ? \"green\" : \"red\"}\r\n                    size={\"large\"}\r\n                  >\r\n                    Biometrics{\" \"}\r\n                    {patientBiometricStatus === true\r\n                      ? \"Captured\"\r\n                      : \"Not Captured\"}\r\n                  </Label>\r\n                </Typography>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div>\r\n                <Typography variant=\"caption\">\r\n                  <Label\r\n                    color={\"red\"}\r\n                    style={{ height: \"30px\", fontSize: \"14px\" }}\r\n                  >\r\n                    Biometrics Module Not Install\r\n                  </Label>\r\n                </Typography>\r\n              </div>\r\n            </>\r\n          )}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      {/*\r\n            <CaptureBiometric  modalstatus={modal} togglestatus={toggleModal} patientId={patientObj.id} biometricDevices={devices} setPatientBiometricStatus={setPatientBiometricStatus} />\r\n*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nIndex.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Index);\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { Button, Grid, MenuItem, Paper, TextField } from \"@mui/material\";\r\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { DesktopDateTimePicker } from \"@mui/x-date-pickers/DesktopDateTimePicker\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../../api\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { format } from \"date-fns\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginBottom: 20,\r\n    flexGrow: 1,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  checkinModal: {\r\n    \"& .modal-dialog\": {\r\n      maxWidth: \"1000px\",\r\n    },\r\n    \"& .ui.label\": {\r\n      backgroundColor: \"#fff\",\r\n      fontSize: \"16px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n      textAlign: \"left\",\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  checkInDatePicker: {\r\n    \"& .MuiFormControl-root.MuiTextField-root\": {\r\n      border: \"1px solid #eee\",\r\n    },\r\n  },\r\n}));\r\nlet newDate = new Date();\r\nfunction Index(props) {\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const [loading, setLoading] = useState(\"\");\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [checkInDate, setCheckInDate] = useState(new Date());\r\n  const [checkOutDate, setCheckOutDate] = useState(new Date());\r\n  const [today, setToday] = useState(\r\n    new Date().toISOString().substr(0, 10).replace(\"T\", \" \")\r\n  );\r\n  const patientObj =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  ///console.log(\"check in\", patientObj)\r\n  const permissions =\r\n    history.location && history.location.state\r\n      ? history.location.state.permissions\r\n      : [];\r\n  const { handleSubmit, control } = useForm();\r\n  const [modal, setModal] = useState(false);\r\n  const [allServices, setAllServices] = useState(null);\r\n  const [checkinStatus, setCheckinStatus] = useState(false);\r\n  const [modalCheckOut, setModalCheckOut] = useState(false);\r\n  const [services, setServices] = useState([]);\r\n  const [selectedServices, setSelectedServices] = useState({ selected: [] });\r\n  const [patientVisits, setPatientVisits] = useState([]);\r\n  const [patientBiometricStatus, setPatientBiometricStatus] = useState(\r\n    patientObj.biometricStatus\r\n  );\r\n  const [biometricsModuleInstalled, setBiometricsModuleInstalled] =\r\n    useState(false);\r\n\r\n  const [checkOutObj, setCheckOutObj] = useState({\r\n    personId: \"\",\r\n    visitStartDate: format(new Date(newDate), \"yyyy-MM-dd hh:mm\"),\r\n  });\r\n  const [checkInObj, setCheckInObj] = useState({\r\n    serviceIds: \"\",\r\n    visitDto: {\r\n      personId: patientObj.id,\r\n      checkInDate: format(new Date(newDate), \"yyyy-MM-dd hh:mm\"),\r\n    },\r\n  });\r\n  const loadServices = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`${baseUrl}patient/post-service`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      //setServices(response.data);\r\n      setAllServices(response.data);\r\n      setServices(\r\n        Object.entries(response.data).map(([key, value]) => ({\r\n          label: value.moduleServiceName,\r\n          value: value.moduleServiceCode,\r\n        }))\r\n      );\r\n      /*            setSelectedServices(\r\n                            _.uniq(_.map(userDetail.applicationUserOrganisationUnits, 'organisationUnitName'))\r\n                        )*/\r\n    } catch (e) {\r\n      await Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"An error occurred fetching services!\",\r\n      });\r\n    }\r\n  }, []);\r\n  const loadPatientVisits = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}patient/visit/visit-by-patient/${patientObj.id}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setPatientVisits(response.data);\r\n      response.data.map((visits) => {\r\n        if (visits.checkOutDate === null) {\r\n          setCheckinStatus(true);\r\n        }\r\n      });\r\n    } catch (e) {\r\n      await Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"An error occurred fetching services!\",\r\n      });\r\n    }\r\n  }, []);\r\n  let visitTypesRows = null;\r\n  if (services && services.length > 0) {\r\n    visitTypesRows = services.map((service, index) => (\r\n      <MenuItem\r\n        key={service.moduleServiceCode}\r\n        value={service.moduleServiceCode}\r\n      >\r\n        {service.moduleServiceName}\r\n      </MenuItem>\r\n    ));\r\n  }\r\n\r\n  const onChangeDate = (date) => {\r\n    console.log(date.target.value);\r\n    const newDate = moment(new Date(date.target.value)).format(\r\n      \"yyyy-MM-dd hh:mm\"\r\n    );\r\n    setCheckInDate(newDate);\r\n    console.log(newDate);\r\n  };\r\n  const handleCheckIn = () => {\r\n    setModal(true);\r\n  };\r\n  const handleCheckOut = () => {\r\n    setModalCheckOut(true);\r\n  };\r\n\r\n  const onCancelCheckIn = () => {\r\n    setModal(false);\r\n  };\r\n  const onCancelCheckOut = () => {\r\n    setModalCheckOut(false);\r\n  };\r\n  const onDelete = () => {};\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const today = new Date();\r\n      const visitDetails = await axios.get(\r\n        `${baseUrl}patient/visit/visit-detail/${patientObj.id}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const visitDetail = visitDetails.data;\r\n      const pendingVisit = visitDetail.find((obj) => obj.status == \"PENDING\");\r\n      let visit = null;\r\n      if (!pendingVisit) {\r\n        const visitResponse = await axios.post(\r\n          `${baseUrl}patient/visit`,\r\n          {\r\n            personId: patientObj.id,\r\n            visitStartDate: today,\r\n          },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        visit = visitResponse.data;\r\n      } else {\r\n        visit = pendingVisit;\r\n      }\r\n      await axios.post(\r\n        `${baseUrl}patient/encounter`,\r\n        {\r\n          encounterDate: today,\r\n          personId: patientObj.id,\r\n          serviceCode: data.VisitType,\r\n          status: \"PENDING\",\r\n          visitId: visit.id,\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setModal(false);\r\n      await Swal.fire({\r\n        icon: \"success\",\r\n        text: \"CheckedIn successfully\",\r\n        timer: 1500,\r\n      });\r\n    } catch (e) {\r\n      await Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"An error occurred while checking in Patient!\",\r\n      });\r\n    }\r\n  };\r\n  const onError = async () => {\r\n    await Swal.fire({\r\n      icon: \"error\",\r\n      title: \"Oops...\",\r\n      text: \"An error occurred while checking in Patient!\",\r\n    });\r\n  };\r\n  let checkInServicesID = [];\r\n  /**** Submit Button For CheckIN  */\r\n  const handleSubmitCheckIn = (e) => {\r\n    e.preventDefault();\r\n    //Check if selected service object is empty before creating visit and posting.\r\n    let m = moment(checkInDate, \"yyyy-MM-DD hh:mm\").format(\"yyyy-MM-DD H:mm\");\r\n    if (selectedServices.selected.length > 0 && moment(m).isValid()) {\r\n      selectedServices.selected.length > 0 &&\r\n        selectedServices.selected.map((service) => {\r\n          checkInServicesID.push(\r\n            _.find(allServices, { moduleServiceCode: service }).id\r\n          );\r\n        });\r\n\r\n      checkInObj.serviceIds = checkInServicesID;\r\n      //Ensure date time is in 24hr format\r\n      checkInObj.visitDto.checkInDate = moment(\r\n        checkInDate,\r\n        \"yyyy-MM-DD hh:mm\"\r\n      ).format(\"yyyy-MM-DD HH:mm\");\r\n      axios\r\n        .post(`${baseUrl}patient/visit/checkin`, checkInObj, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          console.log(\"checkIn\", response);\r\n          toast.success(\"Patient Check-In successful\");\r\n          setCheckinStatus(true);\r\n          onCancelCheckIn();\r\n          loadPatientVisits();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          toast.error(\"Something went wrong\");\r\n          onCancelCheckIn();\r\n        });\r\n    } else {\r\n      toast.error(\r\n        \"Kindly check the form for a valid date and selected services\"\r\n      );\r\n    }\r\n  };\r\n  /**** Submit Button Processing  */\r\n  const handleSubmitCheckOut = (e) => {\r\n    e.preventDefault();\r\n    const getVisitID = patientVisits.find(\r\n      (visits) => visits.status === \"PENDING\"\r\n    );\r\n\r\n    axios\r\n      .put(`${baseUrl}patient/visit/checkout/${getVisitID.id}`, getVisitID.id, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record save successful\");\r\n        setCheckinStatus(false);\r\n        onCancelCheckOut();\r\n        loadPatientVisits();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        toast.error(\"Something went wrong\");\r\n        onCancelCheckOut();\r\n      });\r\n  };\r\n  const onServiceSelect = (selectedValues) => {\r\n    setSelectedServices({ selected: selectedValues });\r\n  };\r\n  useEffect(() => {\r\n    loadServices();\r\n    loadPatientVisits();\r\n  }, [loadServices, loadPatientVisits]);\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"mb-3 col-md-3\">&nbsp;</div>\r\n        <div className=\"mb-3 col-md-3\">&nbsp;</div>\r\n        <div className=\"mb-3 col-md-3\">&nbsp;</div>\r\n        <div className=\"mb-3 col-md-3\">\r\n          <Link to={\"/\"}>\r\n            <MatButton\r\n              className=\" float-right mr-1\"\r\n              variant=\"contained\"\r\n              floated=\"left\"\r\n              startIcon={<TiArrowBack />}\r\n              style={{\r\n                backgroundColor: \"rgb(153, 46, 98)\",\r\n                color: \"#fff\",\r\n                height: \"35px\",\r\n              }}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n            </MatButton>\r\n          </Link>\r\n\r\n          {permissions.includes(\"patient_check_in\") ||\r\n          permissions.includes(\"all_permission\") ? (\r\n            <>\r\n              {checkinStatus === false ? (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    backgroundColor: \"rgb(4, 196, 217)\",\r\n                    fontSize: \"14PX\",\r\n                    fontWeight: \"bold\",\r\n                    height: \"35px\",\r\n                  }}\r\n                  onClick={handleCheckIn}\r\n                  className=\" float-right mr-1\"\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>CheckIn</span>\r\n                </Button>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {checkinStatus === true ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{\r\n                backgroundColor: \"green\",\r\n                fontSize: \"14PX\",\r\n                fontWeight: \"bold\",\r\n                height: \"35px\",\r\n              }}\r\n              onClick={handleCheckOut}\r\n              className=\" float-right mr-1\"\r\n            >\r\n              <span style={{ textTransform: \"capitalize\" }}>Check Out</span>\r\n            </Button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        size=\"lg\"\r\n        style={{ maxWidth: \"900px\" }}\r\n        isOpen={modal}\r\n        toggle={onCancelCheckIn}\r\n        className={classes.checkinModal}\r\n      >\r\n        <ModalHeader toggle={onCancelCheckIn}>\r\n          <h5\r\n            style={{ fontWeight: \"bold\", fontSize: \"30px\", color: \"#992E62\" }}\r\n          >\r\n            Select Check-In Service\r\n          </h5>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmitCheckIn}>\r\n            <Paper\r\n              style={{\r\n                display: \"grid\",\r\n                gridRowGap: \"20px\",\r\n                padding: \"20px\",\r\n                margin: \"10px 10px\",\r\n              }}\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormGroup\r\n                    style={{ width: \"100%\" }}\r\n                    className={classes.checkInDatePicker}\r\n                  >\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                      <Label\r\n                        for=\"post-services\"\r\n                        style={{\r\n                          color: \"#014d88\",\r\n                          fontWeight: \"bolder\",\r\n                          fontSize: \"18px\",\r\n                        }}\r\n                      >\r\n                        Check-In Date *\r\n                      </Label>\r\n                      <DesktopDateTimePicker\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            sx={{\r\n                              /*label:{ color:'#014d88',fontWeight:'bolder',fontSize:'18px' }*/\r\n                              input: { fontSize: \"14px\" },\r\n                            }}\r\n                            fullWidth\r\n                          />\r\n                        )}\r\n                        value={checkInDate}\r\n                        onChange={(newValue) => {\r\n                          setCheckInDate(newValue);\r\n                        }}\r\n                        maxDate={new Date()}\r\n                        maxTime={new Date()}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </LocalizationProvider>\r\n                  </FormGroup>\r\n                </Grid>\r\n                {/*                                <Grid item xs={8}>\r\n\r\n                                    <FormControl >\r\n                                        <Label for=\"dateOfRegistration\">Select service </Label>\r\n                                        <Autocomplete\r\n                                            multiple\r\n                                            id=\"checkboxes-tags-demo\"\r\n                                            options={services}\r\n                                            //disableCloseOnSelect\r\n                                            getOptionLabel={(option) => option.moduleServiceName}\r\n                                            onChange={(e, i) => {\r\n                                                console.log(i)\r\n                                                setSelectedServices({ ...selectedServices, checkInServices: i });\r\n                                            }}\r\n                                            renderOption={(props, option, { selected }) => (\r\n                                                <li {...props}>\r\n                                                    <Checkbox\r\n                                                        icon={icon}\r\n                                                        checkedIcon={checkedIcon}\r\n                                                        style={{ marginRight: 8 }}\r\n                                                        checked={selected}\r\n                                                    />\r\n                                                    {option.moduleServiceName}\r\n                                                </li>\r\n                                            )}\r\n                                            style={{ width: 400 }}\r\n                                            renderInput={(params) => (\r\n                                                <TextField {...params} label=\"Services\" />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </FormControl>\r\n                                </Grid>*/}\r\n                <Grid item xs={12}>\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"post-services\"\r\n                      style={{\r\n                        color: \"#014d88\",\r\n                        fontWeight: \"bolder\",\r\n                        fontSize: \"18px\",\r\n                      }}\r\n                    >\r\n                      <h5\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          fontSize: \"30px\",\r\n                          color: \"#992E62\",\r\n                        }}\r\n                      >\r\n                        Check-In Service *\r\n                      </h5>\r\n                    </Label>\r\n                    <DualListBox\r\n                      options={services}\r\n                      onChange={onServiceSelect}\r\n                      selected={selectedServices.selected}\r\n                    />\r\n                  </FormGroup>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n      {/* Modal for CheckOut Patient */}\r\n      <Modal\r\n        isOpen={modalCheckOut}\r\n        toggle={onCancelCheckOut}\r\n        className={classes.checkinModal}\r\n        style={{ maxWidth: \"900px\", height: \"800px\" }}\r\n      >\r\n        <ModalHeader toggle={onCancelCheckOut}>\r\n          <h5\r\n            style={{ fontWeight: \"bold\", fontSize: \"30px\", color: \"#014d88\" }}\r\n          >\r\n            Check Out{\" \"}\r\n          </h5>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <form>\r\n            <Paper\r\n              style={{\r\n                display: \"grid\",\r\n                gridRowGap: \"20px\",\r\n                padding: \"20px\",\r\n                margin: \"10px 10px\",\r\n              }}\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <h5\r\n                    style={{\r\n                      color: \"#992E62\",\r\n                      fontSize: \"20px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    Are you sure you want to check-out patient?\r\n                  </h5>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormGroup\r\n                    style={{ width: \"100%\" }}\r\n                    className={classes.checkInDatePicker}\r\n                  >\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                      <Label\r\n                        for=\"post-services\"\r\n                        style={{\r\n                          color: \"#014d88\",\r\n                          fontWeight: \"bolder\",\r\n                          fontSize: \"16px\",\r\n                        }}\r\n                      >\r\n                        Check-Out Date *\r\n                      </Label>\r\n                      <DesktopDateTimePicker\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            sx={{\r\n                              /*label:{ color:'#014d88',fontWeight:'bolder',fontSize:'18px' }*/\r\n                              input: { fontSize: \"14px\" },\r\n                            }}\r\n                            fullWidth\r\n                          />\r\n                        )}\r\n                        value={checkOutDate}\r\n                        onChange={(newValue) => {\r\n                          setCheckOutDate(newValue);\r\n                        }}\r\n                        maxDate={new Date()}\r\n                        maxTime={new Date()}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </LocalizationProvider>\r\n                  </FormGroup>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    type={\"submit\"}\r\n                    onClick={handleSubmitCheckOut}\r\n                    variant=\"contained\"\r\n                    color={\"primary\"}\r\n                  >\r\n                    Yes\r\n                  </Button>\r\n                  <Button\r\n                    onClick={onCancelCheckOut}\r\n                    variant=\"contained\"\r\n                    style={{\r\n                      backgroundColor: \"#992E62\",\r\n                      color: \"#fff\",\r\n                      marginLeft: \"10px\",\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n      {/* End of Checkout Modal */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Button, Card, CardContent, FormControl, Grid, MenuItem, Paper, TextField, Typography} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport PatientCard from \"../PatientCard\";\r\nimport ClientDashboard from \"./index\";\r\nimport PersonDemographics from \"../PersonDemographics\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport CheckIn from \"./CheckIn\";\r\nimport {Tab} from \"semantic-ui-react\";\r\nimport MaterialTable from \"material-table\";\r\nimport Biometrics from \"../Biometrics\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        marginBottom: 20,\r\n        flexGrow: 1,\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        },\r\n    },\r\n    checkinModal:{\r\n        \"& .modal-dialog\":{\r\n            maxWidth:\"1000px\"\r\n        },\r\n        \"& .ui.label\":{\r\n            backgroundColor:\"#fff\",\r\n            fontSize:'16px',\r\n            color:'#014d88',\r\n            fontWeight:'bold',\r\n            textAlign:'left'\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    checkInDatePicker:{\r\n        '& .MuiFormControl-root.MuiTextField-root':{\r\n            border:'1px solid #eee'\r\n        }\r\n    }\r\n}));\r\nfunction Index(props) {\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const [loading, setLoading] = useState('');\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\r\n    console.log(\"client  dashboard\", patientObj)\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [patientBiometricStatus, setPatientBiometricStatus]= useState(patientObj.biometricStatus);\r\n\r\n    const [biometricsModuleInstalled,setBiometricsModuleInstalled]=useState(false);\r\n    const [patientVisits, setPatientVisits]= useState([]);\r\n    const [checkinStatus, setCheckinStatus]= useState(false)\r\n\r\n    const updatePatientBiometricStatus = (bioStatus) =>{\r\n        setPatientBiometricStatus(bioStatus);\r\n    }\r\n    const panes = [\r\n        { menuItem: 'Visits', render: () =>\r\n                <Tab.Pane>\r\n                    <MaterialTable\r\n                        title=\"\"\r\n                        columns={[\r\n                            {\r\n                                title: \"Check-In Date\",\r\n                                field: \"checkInDate\", filtering: false,\r\n                                headerStyle: {\r\n                                    backgroundColor: \"#039be5\",\r\n                                    border:'2px solid #fff',\r\n                                    paddingRight:'30px'\r\n                                }\r\n                            },\r\n                            { title: \"Check-Out Date\", field: \"checkOutDate\", filtering: false  },\r\n                            { title: \"Service\", field: \"service\", filtering: false  },\r\n                            { title: \"Status\", field: \"status\", filtering: false },\r\n                        ]}\r\n                        isLoading={loading}\r\n                        data={patientVisits.map((row) => ({\r\n                            checkInDate: moment(row.checkInDate).format(\"YYYY-MM-DD h:mm a\"),\r\n                            checkOutDate: row.checkOutDate?moment(row.checkOutDate).format(\"YYYY-MM-DD h:mm a\"):\"Visit Ongoing\",\r\n                            service:row.service,\r\n                            status:(<h6 style={{color:row.status ==='COMPLETED' ? 'green' : 'red'}}>{row.status}</h6>),\r\n\r\n                        }))}\r\n\r\n                        options={{\r\n                            headerStyle: {\r\n                                backgroundColor: \"#014d88\",\r\n                                color: \"#fff\",\r\n                                fontSize:'16px',\r\n                                padding:'10px',\r\n                                fontWeight:'bold'\r\n                            },\r\n                            rowStyle: {\r\n                                color: 'rgba(0,0,0,.87)',\r\n                                fontFamily:`'poppins', sans-serif`\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width : '200%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: 'left',\r\n                            pageSizeOptions:[10,20,100],\r\n                            pageSize:10,\r\n                            debounceInterval: 400\r\n                        }}\r\n                    />\r\n                </Tab.Pane>\r\n        },\r\n\r\n        { menuItem: permissions.includes('view_patient_appointment') && biometricsModuleInstalled || permissions.includes(\"all_permission\")  && biometricsModuleInstalled? 'Biometrics' : \"\", render: () =>\r\n                permissions.includes('view_patient_appointment') || permissions.includes(\"all_permission\") ?\r\n                    <Tab.Pane>\r\n                        <div style={{ minHeight: 400, width: '100%' }}>\r\n                            <Biometrics age={patientObj.dateOfBirth} patientId={patientObj.id} updatePatientBiometricStatus={updatePatientBiometricStatus}/>\r\n                        </div>\r\n                    </Tab.Pane>\r\n                    :\"\"\r\n        }\r\n\r\n\r\n\r\n    ];\r\n    const checkForBiometricsModule =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    setBiometricsModuleInstalled(true);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n    const loadPatientVisits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/visit/visit-by-patient/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setPatientVisits(response.data);\r\n            response.data.map((visits)=> {\r\n                if(visits.checkOutDate===null){\r\n                    setCheckinStatus(true)\r\n                }\r\n            })\r\n\r\n\r\n        } catch (e) {\r\n            await Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'An error occurred fetching services!',\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadPatientVisits();\r\n        checkForBiometricsModule();\r\n    }, []);\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className=\"mb-6 col-md-6\" style={{paddingTop:\"10px\",paddingBottom:'10px'}} >\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Typography style={{color:'#992E62'}}>Patient</Typography>\r\n                    <Typography style={{color:'#014d88'}}>Dashboard</Typography>\r\n                </Breadcrumbs>\r\n\r\n            </div>\r\n            <Card>\r\n                <CardContent>\r\n                    <PersonDemographics patientObj={patientObj} permissions={permissions} patientBiometricStatus={patientObj.biometricStatus}/>\r\n                    <Card style={{marginTop:'5px'}}>\r\n                        <CardContent>\r\n                            <CheckIn props={props}/>\r\n                            <Tab panes={panes} />\r\n                        </CardContent>\r\n                    </Card>\r\n                </CardContent>\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n} from \"@material-ui/core\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientsCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj ? props.patientObj : {};\r\n  const permissions = props.permissions ? props.permissions : [];\r\n  const [modal, setModal] = useState(false); //Modal to collect sample\r\n  const [patientBiometricStatus, setPatientBiometricStatus] = useState(true);\r\n  const toggleModal = () => setModal(!modal);\r\n\r\n  const [biometricStatus, setBiometricStatus] = useState(true);\r\n  const [devices, setDevices] = useState([]);\r\n  useEffect(() => {\r\n    //setPatientBiometricStatus(props.patientBiometricStatus)\r\n    TemplateType();\r\n  }, []);\r\n  //Get list of KP\r\n  const TemplateType = () => {\r\n    axios\r\n      .get(`${baseUrl}modules/check?moduleName=biometric`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setBiometricStatus(response.data);\r\n        if (response.data === true) {\r\n          axios\r\n            .get(`${baseUrl}biometrics/devices`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            })\r\n            .then((response) => {\r\n              setDevices(response.data);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const getHospitalNumber = (identifier) => {\r\n    const hospitalNumber = identifier.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  const getPhone = (contactPoint) => {\r\n    console.log(\"contact\", contactPoint);\r\n    const phoneContact = contactPoint?.contactPoint?.find(\r\n      (obj) => obj.type == \"phone\"\r\n    );\r\n    return phoneContact ? phoneContact.value : \"\";\r\n  };\r\n\r\n  const getAddress = (address) => {\r\n    const city =\r\n      address && address.address && address.address.length > 0\r\n        ? `${address.address[0].line[0]}, ${address.address[0].city}`\r\n        : null;\r\n    return city;\r\n  };\r\n\r\n  const handleBiometricCapture = (id) => {\r\n    let patientObjID = id;\r\n    setModal(!modal);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion defaultExpanded>\r\n        <AccordionSummary>\r\n          <Row>\r\n            <Col md={11}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    {patientObj.surname + \", \" + patientObj.firstName}\r\n                  </b>\r\n                </Col>\r\n                <Col\r\n                  md={4}\r\n                  className={classes.root2}\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  <span style={{ color: \"#000\" }}>\r\n                    {\" \"}\r\n                    Hospital Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getHospitalNumber(patientObj.identifier)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col\r\n                  md={4}\r\n                  className={classes.root2}\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  <span style={{ color: \"#000\" }}>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>{patientObj.dateOfBirth}</b>\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  md={4}\r\n                  className={classes.root2}\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  <span style={{ color: \"#000\" }}>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {calculate_age(patientObj.dateOfBirth)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} style={{ marginTop: \"10px\" }}>\r\n                  <span style={{ color: \"#000\" }}>\r\n                    {\" \"}\r\n                    Sex :{\" \"}\r\n                    <b\r\n                      style={{\r\n                        color: \"#0B72AA\",\r\n                        fontFamily: `'poppins', sans-serif`,\r\n                        fontWeight: \"bolder\",\r\n                      }}\r\n                    >\r\n                      {patientObj.sex}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  md={4}\r\n                  className={classes.root2}\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  <span style={{ color: \"#000\" }}>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getPhone(patientObj?.contactPoint)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col\r\n                  md={4}\r\n                  className={classes.root2}\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  <span style={{ color: \"#000\" }}>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getAddress(patientObj.address)}{\" \"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.details}>\r\n          {biometricStatus === true ? (\r\n            <>\r\n              <div>\r\n                <Typography variant=\"caption\">\r\n                  <Label\r\n                    style={{ height: \"30px\", fontSize: \"14px\" }}\r\n                    color={patientBiometricStatus === true ? \"green\" : \"red\"}\r\n                    size={\"large\"}\r\n                  >\r\n                    Biometrics{\" \"}\r\n                    {patientBiometricStatus === true\r\n                      ? \"Captured\"\r\n                      : \"Not Captured\"}\r\n                  </Label>\r\n                </Typography>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div>\r\n                <Typography variant=\"caption\">\r\n                  <Label\r\n                    color={\"red\"}\r\n                    style={{ height: \"30px\", fontSize: \"14px\" }}\r\n                  >\r\n                    Biometrics Module Not Install\r\n                  </Label>\r\n                </Typography>\r\n              </div>\r\n            </>\r\n          )}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      {/*\r\n            <CaptureBiometric  modalstatus={modal} togglestatus={toggleModal} patientId={patientObj.id} biometricDevices={devices} setPatientBiometricStatus={setPatientBiometricStatus} />\r\n*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientsCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientsCard);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Row, Label, Col, FormGroup, Input, Button, Badge } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\r\nimport { Button2, Icon, List } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\r\n\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport fingerprintimage from \"../images/fingerprintimage.png\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":\r\n      {\r\n        fontFamily: \"FontAwesome\",\r\n        border: \"0\",\r\n        verticalAlign: \"middle\",\r\n        marginLeft: \".25em\",\r\n        lineHeight: \"1\",\r\n      },\r\n    \"& .dropdown-menu .dropdown-item\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      padding: \"0.3rem 1.5rem\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .mt-4\": {\r\n      marginTop: \"28px !important\",\r\n    },\r\n    \"& .form-control\": {\r\n      color: \"#992E62\",\r\n    },\r\n    \"& .form-control:focus\": {\r\n      color: \"#014d88\",\r\n    },\r\n    \"& .sharp \": {\r\n      \"min-width\": \"35px\",\r\n      padding: \"5px\",\r\n      height: \"35px\",\r\n      \"min-height\": \"35px\",\r\n    },\r\n  },\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  /*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl = \"\";\r\n\r\nfunction Biometrics(props) {\r\n  localStorage.setItem(\"patient_id\", JSON.stringify(props.patientId));\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const permissions =\r\n    history.location && history.location.state\r\n      ? history.location.state.permissions\r\n      : [];\r\n  const [biometricDevices, setbiometricDevices] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    biometricType: \"FINGERPRINT\",\r\n    patientId: props.patientId,\r\n    templateType: \"\",\r\n    device: \"SECUGEN\",\r\n    reason: \"\",\r\n    age: \"\",\r\n  });\r\n  const [fingerType, setFingerType] = useState([]);\r\n  const [devices, setDevices] = useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [pageLoading, setPageLoading] = useState(false);\r\n  const [showCapture, setshowCapture] = React.useState(false);\r\n  const [tryAgain, setTryAgain] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n  // const [responseImage, setResponseImage] = useState(\"\")\r\n  const [capturedFingered, setCapturedFingered] = useState([]);\r\n  const [capturedFingeredObj, setCapturedFingeredObj] = useState([]);\r\n  const [recapturedFingered, setRecapturedFingered] = useState([]);\r\n  const [selectedFingers, setSelectedFingers] = useState([]);\r\n  const [imageQuality, setImageQuality] = useState(false);\r\n  const [isNewStatus, setIsNewStatus] = useState(true);\r\n\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    // const m = today.getMonth() - birthDate.getMonth();\r\n    // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n    //     age_now--;\r\n    // }\r\n    // if (age_now === 0) {\r\n    //     return m + \" month(s)\";\r\n    // }\r\n    return age_now;\r\n  };\r\n\r\n  const getPersonBiometrics = async () => {\r\n    const fingersCodeset = await axios.get(\r\n      `${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n\r\n    axios\r\n      .get(`${baseUrl}biometrics/person/${props.patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(async (response) => {\r\n        if (response.data.length > 0) {\r\n          setStoredBiometrics(response.data);\r\n\r\n          setPageLoading(true);\r\n\r\n          let personCapturedFingers = _.uniq(\r\n            _.map(response.data, \"templateType\")\r\n          );\r\n\r\n          //console.log(personCapturedFingers);\r\n          //setSelectedFingers(personCapturedFingers);\r\n\r\n          let biometricItems = _.map(fingersCodeset.data, (item) => {\r\n            return _.extend({}, item, {\r\n              captured: false,\r\n            });\r\n          });\r\n\r\n          setFingerType(biometricItems);\r\n        } else {\r\n          let biometricItems = _.map(fingersCodeset.data, (item) => {\r\n            return _.extend({}, item, { captured: false });\r\n            //return item.captured = personCapturedFingers.includes(item.display)\r\n          });\r\n          setFingerType(biometricItems);\r\n        }\r\n      })\r\n      .catch(async (error) => {\r\n        console.log(\"getPersonBiometrics error\");\r\n        console.log(error);\r\n\r\n        let biometricItems = _.map(fingersCodeset.data, (item) => {\r\n          return _.extend({}, item, { captured: false });\r\n        });\r\n        setFingerType(biometricItems);\r\n        setPageLoading(true);\r\n      });\r\n  };\r\n\r\n  const clear_storelist = () => {\r\n    axios\r\n      .post(\r\n        `${baseUrl}biometrics/store-list/${props.patientId}`,\r\n        props.patientId,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(\"cleared store\");\r\n      })\r\n      .catch((error) => {\r\n        //console.log(\"cleared store error\");\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getRecaptureCount = () => {\r\n    axios\r\n      .get(`${baseUrl}biometrics/grouped/person/${props.patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setRecapturedFingered(response.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    clear_storelist();\r\n    getPersonBiometrics();\r\n    TemplateType();\r\n    getRecaptureCount();\r\n    //biometricFingers();\r\n  }, []);\r\n\r\n  //Get list of Finger index\r\n  // const TemplateType = () => {\r\n  //   axios\r\n  //     .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, {\r\n  //       headers: { Authorization: `Bearer ${token}` },\r\n  //     })\r\n  //     .then((response) => {\r\n  //       setFingerType(response.data);\r\n  //     })\r\n  //     .catch((error) => {});\r\n  // };\r\n  const TemplateType = () => {\r\n    axios\r\n      .get(`${baseUrl}modules/check?moduleName=biometric`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          axios\r\n            .get(`${baseUrl}biometrics/devices?active=true`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            })\r\n            .then((response) => {\r\n              //console.log(response.data.find((x) => x.active === true));\r\n              setDevices(response.data.find((x) => x.active === true));\r\n              setbiometricDevices(response.data);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  // handle the input changes\r\n  const handleInputChange = (e) => {\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      age: calculate_age(props.age),\r\n    });\r\n  };\r\n  //form validation\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.templateType = objValues.templateType ? \"\" : \"This field is required\";\r\n    //temp.device = objValues.device ? \"\" : \"This field is required\"\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n  //to capture  selected index finger\r\n  // const captureFinger = (e) => {\r\n  //   e.preventDefault();\r\n  //   setLoading(true);\r\n  //   setFingerType([]);\r\n  //   if (validate()) {\r\n  //     setFingerType([]);\r\n  //     window.setTimeout(() => {\r\n  //       setLoading(false);\r\n  //       const removeFingers = fingerType.filter(\r\n  //         (x) => x.display !== objValues.templateType\r\n  //       );\r\n  //       fingerType.splice(removeFingers, 1);\r\n  //       setFingerType([...fingerType]);\r\n  //       arrCaptureObj.push(objValues.templateType);\r\n  //       selectedFingers.archived = arrCaptureObj.length + 1;\r\n  //       selectedFingers.templateType = objValues.templateType;\r\n  //       setCapturedFingeredObj([...capturedFingeredObj, selectedFingers]);\r\n  //       toast.success(objValues.templateType + \"captured successful!\");\r\n  //     }, 5000);\r\n  //   }\r\n  // };\r\n\r\n  const captureFinger = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setLoading(true);\r\n\r\n      axios\r\n        .post(\r\n          `${devices.url}?reader=${\r\n            devices.name\r\n          }&isNew=${isNewStatus}&recapture=${true}`,\r\n          objValues,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setLoading(false);\r\n\r\n          if (response.data.type === \"ERROR\") {\r\n            setLoading(false);\r\n            setTryAgain(true);\r\n            window.setTimeout(() => {\r\n              setTryAgain(false);\r\n            }, 5000);\r\n            toast.error(response.data.message.ERROR);\r\n            setIsNewStatus(false);\r\n          } else if (response.data.type === \"WARNING\") {\r\n            if (\r\n              response.data.imageQuality <= 60 &&\r\n              calculate_age(props.age) <= 6\r\n            ) {\r\n              toast.info(\r\n                \"Image quality captured is poor, Kindly give a reason for capture above.\",\r\n                { position: toast.POSITION.BOTTOM_CENTER, autoClose: 20000 }\r\n              );\r\n              setImageQuality(true);\r\n            }\r\n\r\n            const templateType = response.data.templateType;\r\n\r\n            setTryAgain(false);\r\n            setSuccess(true);\r\n\r\n            let biometricsEnrollments = response.data;\r\n            biometricsEnrollments.capturedBiometricsList = _.uniqBy(\r\n              biometricsEnrollments.capturedBiometricsList,\r\n              \"templateType\"\r\n            );\r\n\r\n            setCapturedFingered([...capturedFingered, biometricsEnrollments]);\r\n\r\n            _.find(fingerType, { display: templateType }).captured = true;\r\n\r\n            setFingerType([...fingerType]);\r\n\r\n            setObjValues({ ...objValues, templateType: \"\" });\r\n            setIsNewStatus(false);\r\n            toast.warning(response.data.message.WARNING);\r\n          } else if (response.data.type === \"SUCCESS\") {\r\n            if (\r\n              response.data.imageQuality <= 60 &&\r\n              calculate_age(props.age) <= 6\r\n            ) {\r\n              toast.info(\r\n                \"Image quality captured is poor, Kindly give a reason for capture above.\",\r\n                { position: toast.POSITION.BOTTOM_CENTER, autoClose: 20000 }\r\n              );\r\n              setImageQuality(true);\r\n            }\r\n            const templateType = response.data.templateType;\r\n            setTryAgain(false);\r\n            setSuccess(true);\r\n\r\n            let biometricsEnrollments = response.data;\r\n            biometricsEnrollments.capturedBiometricsList = _.uniqBy(\r\n              biometricsEnrollments.capturedBiometricsList,\r\n              \"templateType\"\r\n            );\r\n\r\n            setCapturedFingered([...capturedFingered, biometricsEnrollments]);\r\n\r\n            _.find(fingerType, { display: templateType }).captured = true;\r\n            setFingerType([...fingerType]);\r\n\r\n            setObjValues({ ...objValues, templateType: \"\" });\r\n            setIsNewStatus(false);\r\n          } else {\r\n            setLoading(false);\r\n            setTryAgain(true);\r\n            toast.error(\"Something went wrong capturing biometrics...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  //Save Biometric capture\r\n  // const saveBiometrics = (e) => {\r\n  //   e.preventDefault();\r\n  //   setCapturedFingeredObj([]);\r\n  //   if (capturedFingeredObj.length >= 1) {\r\n  //     setSaveCapturedFingeredObj(capturedFingeredObj);\r\n  //   }\r\n  // };\r\n\r\n  const saveBiometrics = (e) => {\r\n    e.preventDefault();\r\n    if (capturedFingered.length >= 1) {\r\n      const capturedObj = capturedFingered[capturedFingered.length - 1];\r\n\r\n      capturedObj.capturedBiometricsList = _.uniqBy(\r\n        capturedObj.capturedBiometricsList,\r\n        \"templateType\"\r\n      );\r\n\r\n      //console.log(\"capturedObj\", capturedFingered);\r\n\r\n      axios\r\n        .post(`${baseUrl}biometrics/templates`, capturedObj, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          console.log(\"saved\", response);\r\n          toast.success(\"Biometric recaptured successfully\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          setCapturedFingered([]);\r\n          getPersonBiometrics();\r\n          props.updatePatientBiometricStatus(true);\r\n          //console.log(\"capturedObj\", capturedFingered);\r\n        })\r\n        .catch((error) => {\r\n          toast.error(\"Something went wrong saving biometrics\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          console.log(error.message);\r\n        });\r\n    } else {\r\n      toast.error(\"You can't save less than 2 finger\", {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteTempBiometrics = (x) => {\r\n    axios\r\n      .delete(\r\n        `${baseUrl}biometrics?personId=${x.patientId}&templateType=${x.templateType}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        let deletedRecord = capturedFingered.filter(\r\n          (data) => data.templateType !== x.templateType\r\n        );\r\n        setCapturedFingered(deletedRecord);\r\n        toast.info(x.templateType + \"captured removed successfully!\");\r\n        // toast.success(`finger deleted successfully`, {\r\n        //   position: toast.POSITION.BOTTOM_CENTER,\r\n        // });\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Something went wrong\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n        console.log(error);\r\n      });\r\n    // window.setTimeout(() => {\r\n    //   let deletedRecord = capturedFingered.filter(\r\n    //     (data) => data.templateType !== x.templateType\r\n    //   );\r\n    //   setCapturedFingered(deletedRecord);\r\n    //   toast.info(x.templateType + \"captured removed successfully!\");\r\n    // }, 1000);\r\n  };\r\n\r\n  const getFingerprintsQuality = (imageQuality) => {\r\n    if (imageQuality > 60 && imageQuality <= 75) {\r\n      return (\r\n        <Badge color=\"warning\" style={{ fontSize: \"12px\" }}>\r\n          {imageQuality + \"%\"}\r\n        </Badge>\r\n      );\r\n    } else if (imageQuality > 75) {\r\n      return (\r\n        <Badge color=\"success\" style={{ fontSize: \"12px\" }}>\r\n          {imageQuality + \"%\"}\r\n        </Badge>\r\n      );\r\n    } else {\r\n      return (\r\n        <Badge color=\"error\" style={{ fontSize: \"12px\" }}>\r\n          {imageQuality + \"%\"}\r\n        </Badge>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        {/* temporal update */}\r\n        {permissions.includes(\"capture_patient_biometrics\") ||\r\n        permissions.includes(\"all_permission\") ? (\r\n          <div\r\n            style={{\r\n              flex: \"10\",\r\n              padding: \"5px\",\r\n              marginLeft: \"5px\",\r\n              border: \"1px solid rgba(99, 99, 99, 0.2)\",\r\n              boxShadow: \"rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\r\n            }}\r\n          >\r\n            <Row>\r\n              <ToastContainer />\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label\r\n                    for=\"device\"\r\n                    style={{\r\n                      color: \"#014d88\",\r\n                      fontWeight: \"bold\",\r\n                      fontSize: \"14px\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Device{\" \"}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"device\"\r\n                    id=\"device\"\r\n                    //onChange={checkDevice}\r\n                    value={objValues.device}\r\n                    required\r\n                    disabled\r\n                  >\r\n                    {biometricDevices.map(({ id, name, active, url, type }) => (\r\n                      <option key={id} value={url}>\r\n                        {type}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n\r\n                  {errors.device !== \"\" ? (\r\n                    <span className={classes.error}>{errors.device}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label\r\n                    for=\"device\"\r\n                    style={{\r\n                      color: \"#014d88\",\r\n                      fontWeight: \"bold\",\r\n                      fontSize: \"14px\",\r\n                    }}\r\n                  >\r\n                    Select Finger\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"templateType\"\r\n                    id=\"templateType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.templateType}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select Finger </option>\r\n\r\n                    {fingerType &&\r\n                      _.filter(fingerType, [\"captured\", false]).map((value) => (\r\n                        <option key={value.id} value={value.display}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                  </Input>\r\n                  {errors.templateType !== \"\" ? (\r\n                    <span className={classes.error}>{errors.templateType}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              {!imageQuality ? (\r\n                \"\"\r\n              ) : (\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"device\"\r\n                      style={{\r\n                        color: \"#014d88\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"14px\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      Reason for capture{\" \"}\r\n                    </Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"reason\"\r\n                      id=\"reason\"\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              )}\r\n\r\n              <Col md={2}>\r\n                {!loading ? (\r\n                  <>\r\n                    <MatButton\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={captureFinger}\r\n                      className={\"mt-4\"}\r\n                      style={{ backgroundColor: \"#992E62\" }}\r\n                      startIcon={<FingerprintIcon />}\r\n                      disabled={loading}\r\n                    >\r\n                      Capture Finger\r\n                    </MatButton>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <MatButton\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={\"mt-4\"}\r\n                      style={{ backgroundColor: \"#992E62\" }}\r\n                      startIcon={<CircularProgress />}\r\n                    >\r\n                      Capturing...\r\n                    </MatButton>\r\n                  </>\r\n                )}\r\n              </Col>\r\n              <br />\r\n              <Col md={12}>\r\n                {loading ? (\r\n                  <>\r\n                    <b>Capturing finger...</b>\r\n                    <LinearProgress />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Row>\r\n          <Col>\r\n            <br />\r\n            <p>\r\n              {\" \"}\r\n              Patient Recapture Count : <b>{recapturedFingered.length}</b>\r\n            </p>\r\n            <hr />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {capturedFingered.length >= 1 ? (\r\n            <>\r\n              <Col md={12} style={{ marginTop: \"10px\", paddingBottom: \"20px\" }}>\r\n                <List celled horizontal>\r\n                  {/* {console.log(capturedFingered)} */}\r\n                  {capturedFingered.map((x) => (\r\n                    <List.Item\r\n                      style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        border: \"1px dotted #014d88\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    >\r\n                      <List.Header\r\n                        style={{\r\n                          paddingLeft: \"0px\",\r\n                          height: \"0.5rem\",\r\n\r\n                          alignItems: \"right\",\r\n                        }}\r\n                      >\r\n                        {getFingerprintsQuality(x.imageQuality)}\r\n                        <span\r\n                          onClick={() => {\r\n                            deleteTempBiometrics(x);\r\n                          }}\r\n                        >\r\n                          <Icon\r\n                            name=\"cancel\"\r\n                            color=\"red\"\r\n                            style={{ float: \"right\" }}\r\n                          />{\" \"}\r\n                        </span>\r\n                      </List.Header>\r\n                      <List.Content\r\n                        style={{\r\n                          width: \"200px\",\r\n                          height: \"150px\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        <FingerprintIcon\r\n                          style={{ color: \"#992E62\", fontSize: 150 }}\r\n                        />\r\n                        {/* <img\r\n                          src={`data:image/png;base64,${x.image}`}\r\n                          style={{ width: \"80px\", height: \"80px\" }}\r\n                          alt=\"\"\r\n                        /> */}\r\n                      </List.Content>\r\n                      <List.Content\r\n                        style={{\r\n                          width: \"200px\",\r\n                          height: \"30px\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                          fontSize: \"16px\",\r\n                          color: \"#014d88\",\r\n                          fontWeight: \"bold\",\r\n                          fontFamily: '\"poppins\", sans-serif',\r\n                        }}\r\n                      >\r\n                        {x.templateType}\r\n                      </List.Content>\r\n                      <List.Content>\r\n                        <br />\r\n                        {x.imageQuality < 75 ? (\r\n                          <MatButton\r\n                            type=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={() => {\r\n                              deleteTempBiometrics(x);\r\n                            }}\r\n                            startIcon={<RestartAltIcon />}\r\n                          >\r\n                            Reset recapture\r\n                          </MatButton>\r\n                        ) : (\r\n                          \" \"\r\n                        )}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  ))}\r\n                </List>\r\n              </Col>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <Col md={12}>\r\n                <br />\r\n                {/* {storedBiometrics.length < 10 &&\r\n                storedBiometrics.length !== 0 ? (\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    //disabled={capturedFingered.length < 6 ? true : false}\r\n                    onClick={saveBiometrics}\r\n                    // className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                  >\r\n                    Save Capture\r\n                  </MatButton>\r\n                ) : ( */}\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={capturedFingered.length < 6 ? true : false}\r\n                  onClick={saveBiometrics}\r\n                  // className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                >\r\n                  Save Capture\r\n                </MatButton>\r\n                {/* )} */}\r\n              </Col>\r\n              <br />\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Row>\r\n      </div>\r\n      {/* <div style={{ display: \"flex\", width: \"100%\" }}>\r\n        <div\r\n          className=\"\"\r\n          style={{\r\n            padding: \"5px\",\r\n            flex: \"10\",\r\n            boxShadow: \"rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\r\n            minHeight: \"400px\",\r\n          }}\r\n        >\r\n          {saveCapturedFingered.length > 0 ? (\r\n            <div style={{ display: \"flex\", width: \"100%\", flexWrap: \"wrap\" }}>\r\n              {saveCapturedFingered.map((biometric, index) => (\r\n                <div\r\n                  key={index}\r\n                  style={{ minHeight: \"120px\", padding: \"5px\", width: \"20%\" }}\r\n                >\r\n                  <div className=\"card \" style={{ borderRadius: \"6px\" }}>\r\n                    <div\r\n                      className=\"card-header align-items-start\"\r\n                      style={{ backgroundColor: \"#fff\" }}\r\n                    >\r\n                      <div>\r\n                        <h6 className=\"fs-18 font-w500 mb-3 user-name\">\r\n                          <Link\r\n                            to={\"#\"}\r\n                            style={{\r\n                              color: \"#014d88\",\r\n                              fontSize: \"14px\",\r\n                              fontFamily: `\"poppins\",sans-serif`,\r\n                            }}\r\n                          >\r\n                            {biometric.templateType}\r\n                          </Link>\r\n                        </h6>\r\n                        <div\r\n                          className=\"fs-9 text-nowrap\"\r\n                          style={{\r\n                            fontSize: \"10px\",\r\n                            color: \"#992E62\",\r\n                            fontWeight: \"bold\",\r\n                            fontFamily: `\"poppins\",sans-serif`,\r\n                          }}\r\n                        >\r\n                          <i\r\n                            className=\"fa fa-calendar-o me-3\"\r\n                            aria-hidden=\"true\"\r\n                          ></i>\r\n                          {moment(biometric.lastModifiedDate).format(\r\n                            \"YYYY-MM-DD HH:mm\"\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <Dropdown className=\"dropdown ms-auto\">\r\n                        <Dropdown.Toggle\r\n                          as=\"button\"\r\n                          variant=\"\"\r\n                          drop=\"up\"\r\n                          className=\"btn sharp btn-primary \"\r\n                          id=\"tp-btn\"\r\n                          style={{\r\n                            backgroundColor: \"#014d88\",\r\n                            borderColor: \"#014d88\",\r\n                            borderRadius: \"5px\",\r\n                            marginRight: \"-18px\",\r\n                            marginTop: \"-10px\",\r\n                          }}\r\n                        >\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            version=\"1.1\"\r\n                          >\r\n                            <g\r\n                              stroke=\"none\"\r\n                              strokeWidth=\"1\"\r\n                              fill=\"none\"\r\n                              fillRule=\"evenodd\"\r\n                            >\r\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                              <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                              <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                              <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                            </g>\r\n                          </svg>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu\r\n                          alignRight={true}\r\n                          className=\"dropdown-menu-right\"\r\n                        >\r\n                          <Dropdown.Item\r\n                            style={{ color: \"red\" }}\r\n                            onClick={() =>\r\n                              deleteBiometric(\r\n                                biometric.id,\r\n                                biometric.templateType\r\n                              )\r\n                            }\r\n                          >\r\n                            <DeleteIcon /> Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </div>\r\n                    <div className=\"card-body p-0 pb-2\">\r\n                      <ul className=\"list-group list-group-flush\">\r\n                        <li\r\n                          className=\"list-group-item\"\r\n                          style={{\r\n                            height: \"100px\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={fingerprintimage}\r\n                            alt=\"\"\r\n                            style={{ height: \"80px\" }}\r\n                          />\r\n                        </li>\r\n\r\n                        <li className=\"list-group-item\">\r\n                          <Badge\r\n                            variant=\"info badge-xs light\"\r\n                            className=\"card-link float-end\"\r\n                          >\r\n                            Version \r\n                          </Badge>\r\n                          <span className=\"mb-0 title\">\r\n                            Status {biometric.iso}\r\n                          </span>{\" \"}\r\n                          :\r\n                          <span className=\"text-black desc-text ms-2\">\r\n                            <Badge\r\n                              variant={\r\n                                biometric.iso === true\r\n                                  ? \"primary badge-xs\"\r\n                                  : \"danger badge-xs\"\r\n                              }\r\n                            >\r\n                              <i\r\n                                className=\"fa fa-check-square me-2 scale4\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>{\" \"}\r\n                            </Badge>\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"flex-grow-8\">\r\n                <div className=\"flex-grow-8\">\r\n                  <Alert severity=\"info\">\r\n                    <AlertTitle style={{ height: \"400px\" }}>\r\n                      <strong>No biometrics captured</strong>\r\n                    </AlertTitle>\r\n                  </Alert>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Biometrics;\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ContentCut from '@mui/icons-material/ContentCut';\r\nimport Typography from '@mui/material/Typography';\r\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\r\nimport Divider from '@mui/material/Divider';\r\nimport {useRef} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst options = ['Delete', 'Edit'];\r\n\r\n\r\n\r\nexport default function SplitActionButton(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const handleClick = () => {\r\n        console.info(`You clicked ${options[selectedIndex]}`);\r\n    };\r\n\r\n    const handleMenuItemClick = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup variant=\"contained\" ref={anchorRef} style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'150px'}} >\r\n                <Link to={props.actions[0].to} style={{borderRight:'20px solid #fff !important'}}>\r\n                    <Button size=\"small\" onClick={handleClick} variant=\"contained\" startIcon={props.actions[0].icon} style={{backgroundColor:'rgb(153, 46, 98)'}}>\r\n                        <Typography variant=\"h7\" style={{fontWeight:'bolder'}}>{props.actions[0].name}</Typography>\r\n                    </Button>\r\n                </Link>\r\n\r\n                <Divider orientation=\"vertical\" flexItem style={{borderRight:'20px solid #fff !important', backgroundColor:'#fff',width:'1px', height:'26px',marginTop:'2px'}}>\r\n                    1\r\n                </Divider>\r\n                <Button\r\n                    size=\"medium\"\r\n                    aria-controls={open ? 'split-button-menu' : undefined}\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    aria-label=\"select merge strategy\"\r\n                    aria-haspopup=\"menu\"\r\n                    onClick={handleToggle}\r\n                    style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                >\r\n                    <FaCaretDown size='24' />\r\n                </Button>\r\n            </ButtonGroup>\r\n            <Popper\r\n                open={open}\r\n                anchorEl={anchorRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                style={{ zIndex:'10000' }}\r\n            >\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                            zIndex:'1000'\r\n                        }}\r\n                    >\r\n                        {/*width: 130,*/}\r\n                        <Paper sx={{ minWidth:'130px', maxWidth: '150px', marginTop:'2px', zIndex:'1000' }}>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                                    {props.actions.slice(1).map((option, index) => (\r\n                                        <MenuItem\r\n                                            key={Math.random()}\r\n                                        >\r\n                                            <Link\r\n                                                to={option.to}\r\n                                                onClick={option.deleteAction}\r\n                                            >\r\n                                                {option.icon}<span style={{color: 'rgb(153, 46, 98)', fontWeight:'bolder', fontSize:'12px'}}>{option.name}</span>\r\n                                            </Link>\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { Dropdown, Badge } from \"react-bootstrap\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport moment from \"moment\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport fingerprintimage from \"../images/fingerprintimage.png\";\r\n\r\nconst PatientRecapture = (props) => {\r\n  //console.log(\"details\", props.storedBiometrics);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={props.modal}\r\n        toggle={props.toggle}\r\n        style={{ display: \"flex\", maxWidth: \"85%\", maxHeight: \"80%\" }}\r\n        fullscreen=\"true\"\r\n      >\r\n        <ModalHeader toggle={props.toggle}>\r\n          {props.storedBiometrics[0]?.recapture === 0\r\n            ? \"Baseline Fingerprints\"\r\n            : \"Previous Recaptured Fingerprints\"}\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div>\r\n            <div\r\n              className=\"\"\r\n              style={{\r\n                padding: \"5px\",\r\n                flex: \"10\",\r\n                boxShadow: \"rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\r\n                minHeight: \"400px\",\r\n              }}\r\n            >\r\n              {props.storedBiometrics.length > 0 ? (\r\n                <div\r\n                  style={{ display: \"flex\", width: \"100%\", flexWrap: \"wrap\" }}\r\n                >\r\n                  {props.storedBiometrics.map((biometric, index) => (\r\n                    <div\r\n                      key={index}\r\n                      style={{\r\n                        minHeight: \"120px\",\r\n                        padding: \"5px\",\r\n                        width: \"20%\",\r\n                      }}\r\n                    >\r\n                      <div className=\"card \" style={{ borderRadius: \"6px\" }}>\r\n                        <div\r\n                          className=\"card-header align-items-start\"\r\n                          style={{ backgroundColor: \"#fff\" }}\r\n                        >\r\n                          <div>\r\n                            <h6 className=\"fs-18 font-w500 mb-3 user-name\">\r\n                              <Link\r\n                                to={\"#\"}\r\n                                style={{\r\n                                  color: \"#014d88\",\r\n                                  fontSize: \"14px\",\r\n                                  fontFamily: `\"poppins\",sans-serif`,\r\n                                }}\r\n                              >\r\n                                {biometric.templateType}\r\n                              </Link>\r\n                            </h6>\r\n                            <div\r\n                              className=\"fs-9 text-nowrap\"\r\n                              style={{\r\n                                fontSize: \"10px\",\r\n                                color: \"#992E62\",\r\n                                fontWeight: \"bold\",\r\n                                fontFamily: `\"poppins\",sans-serif`,\r\n                              }}\r\n                            >\r\n                              <i\r\n                                className=\"fa fa-calendar-o me-3\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>\r\n                              {moment(biometric.lastModifiedDate).format(\r\n                                \"YYYY-MM-DD HH:mm\"\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/*Action button -- Dropdown menu*/}\r\n                          {/* <Dropdown className=\"dropdown ms-auto\">\r\n                            <Dropdown.Toggle\r\n                              as=\"button\"\r\n                              variant=\"\"\r\n                              drop=\"up\"\r\n                              className=\"btn sharp btn-primary \"\r\n                              id=\"tp-btn\"\r\n                              style={{\r\n                                backgroundColor: \"#014d88\",\r\n                                borderColor: \"#014d88\",\r\n                                borderRadius: \"5px\",\r\n                                marginRight: \"-18px\",\r\n                                marginTop: \"-10px\",\r\n                              }}\r\n                            >\r\n                              <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                width=\"18px\"\r\n                                height=\"18px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                version=\"1.1\"\r\n                              >\r\n                                <g\r\n                                  stroke=\"none\"\r\n                                  strokeWidth=\"1\"\r\n                                  fill=\"none\"\r\n                                  fillRule=\"evenodd\"\r\n                                >\r\n                                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                  <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                  <circle\r\n                                    fill=\"#ffffff\"\r\n                                    cx=\"12\"\r\n                                    cy=\"12\"\r\n                                    r=\"2\"\r\n                                  />\r\n                                  <circle\r\n                                    fill=\"#ffffff\"\r\n                                    cx=\"12\"\r\n                                    cy=\"19\"\r\n                                    r=\"2\"\r\n                                  />\r\n                                </g>\r\n                              </svg>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu\r\n                              alignRight={true}\r\n                              className=\"dropdown-menu-right\"\r\n                            >\r\n                              <Dropdown.Item\r\n                                style={{ color: \"red\" }}\r\n                                onClick={() =>\r\n                                  deleteBiometric(\r\n                                    biometric.id,\r\n                                    biometric.templateType\r\n                                  )\r\n                                }\r\n                              >\r\n                                <DeleteIcon /> Delete\r\n                              </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                          </Dropdown> */}\r\n                        </div>\r\n                        <div className=\"card-body p-0 pb-2\">\r\n                          <ul className=\"list-group list-group-flush\">\r\n                            <li\r\n                              className=\"list-group-item\"\r\n                              style={{\r\n                                height: \"100px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                              }}\r\n                            >\r\n                              <img\r\n                                src={fingerprintimage}\r\n                                alt=\"\"\r\n                                style={{ height: \"80px\" }}\r\n                              />\r\n                            </li>\r\n\r\n                            <li className=\"list-group-item\">\r\n                              <Badge\r\n                                variant=\"info badge-xs light\"\r\n                                className=\"card-link float-end\"\r\n                              >\r\n                                {biometric.imageQuality !== null\r\n                                  ? biometric.imageQuality + \"%\"\r\n                                  : \"N/A\"}{\" \"}\r\n                                {/*{contact.version}*/}\r\n                              </Badge>\r\n                              <span className=\"mb-0 title\">\r\n                                Fingerprint Quality {biometric.iso}\r\n                              </span>{\" \"}\r\n                              :\r\n                              {/* <span className=\"text-black desc-text ms-2\">\r\n                                <Badge\r\n                                  variant={\r\n                                    biometric.iso === true\r\n                                      ? \"primary badge-xs\"\r\n                                      : \"danger badge-xs\"\r\n                                  }\r\n                                >\r\n                                  <i\r\n                                    className=\"fa fa-check-square me-2 scale4\"\r\n                                    aria-hidden=\"true\"\r\n                                  ></i>{\" \"}\r\n                                </Badge>\r\n                              </span> */}\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div className=\"flex-grow-8\">\r\n                    <div className=\"flex-grow-8\">\r\n                      <Alert severity=\"info\">\r\n                        <AlertTitle style={{ height: \"400px\" }}>\r\n                          <strong>No biometrics captured</strong>\r\n                        </AlertTitle>\r\n                      </Alert>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {/* <Button color=\"primary\" onClick={props.toggle}>\r\n            Do Something\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={props.toggle}>\r\n            Cancel\r\n          </Button> */}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientRecapture;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Row,\r\n  Label,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\r\nimport { Button2, Icon, List } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\r\n\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport fingerprintimage from \"../images/fingerprintimage.png\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":\r\n      {\r\n        fontFamily: \"FontAwesome\",\r\n        border: \"0\",\r\n        verticalAlign: \"middle\",\r\n        marginLeft: \".25em\",\r\n        lineHeight: \"1\",\r\n      },\r\n    \"& .dropdown-menu .dropdown-item\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      padding: \"0.3rem 1.5rem\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .mt-4\": {\r\n      marginTop: \"28px !important\",\r\n    },\r\n    \"& .form-control\": {\r\n      color: \"#992E62\",\r\n    },\r\n    \"& .form-control:focus\": {\r\n      color: \"#014d88\",\r\n    },\r\n    \"& .sharp \": {\r\n      \"min-width\": \"35px\",\r\n      padding: \"5px\",\r\n      height: \"35px\",\r\n      \"min-height\": \"35px\",\r\n    },\r\n  },\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst Recapture = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const permissions =\r\n    history.location && history.location.state\r\n      ? history.location.state.permissions\r\n      : [];\r\n  const [biometricDevices, setbiometricDevices] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    biometricType: \"FINGERPRINT\",\r\n    patientId: props.patientId,\r\n    templateType: \"\",\r\n    device: \"SECUGEN\",\r\n    reason: \"\",\r\n    age: \"\",\r\n  });\r\n  const [fingerType, setFingerType] = useState([]);\r\n  const [devices, setDevices] = useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [pageLoading, setPageLoading] = useState(false);\r\n  const [showCapture, setshowCapture] = React.useState(false);\r\n  const [tryAgain, setTryAgain] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n  // const [responseImage, setResponseImage] = useState(\"\")\r\n  const [capturedFingered, setCapturedFingered] = useState([]);\r\n  const [capturedFingeredObj, setCapturedFingeredObj] = useState([]);\r\n  const [recapturedFingered, setRecapturedFingered] = useState([]);\r\n  const [selectedFingers, setSelectedFingers] = useState([]);\r\n  const [imageQuality, setImageQuality] = useState(false);\r\n  const [isNewStatus, setIsNewStatus] = useState(true);\r\n\r\n  const calculate_age = (dob) => {\r\n    console.log(dob);\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob);\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n\r\n    return age_now;\r\n  };\r\n\r\n  const getPersonBiometrics = async () => {\r\n    const fingersCodeset = await axios.get(\r\n      `${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n\r\n    axios\r\n      .get(`${baseUrl}biometrics/person/${props.patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(async (response) => {\r\n        if (response.data.length > 0) {\r\n          setStoredBiometrics(response.data);\r\n\r\n          setPageLoading(true);\r\n\r\n          let personCapturedFingers = _.uniq(\r\n            _.map(response.data, \"templateType\")\r\n          );\r\n\r\n          //console.log(personCapturedFingers);\r\n          //setSelectedFingers(personCapturedFingers);\r\n\r\n          let biometricItems = _.map(fingersCodeset.data, (item) => {\r\n            return _.extend({}, item, {\r\n              captured: false,\r\n            });\r\n          });\r\n\r\n          setFingerType(biometricItems);\r\n        } else {\r\n          let biometricItems = _.map(fingersCodeset.data, (item) => {\r\n            return _.extend({}, item, { captured: false });\r\n            //return item.captured = personCapturedFingers.includes(item.display)\r\n          });\r\n          setFingerType(biometricItems);\r\n        }\r\n      })\r\n      .catch(async (error) => {\r\n        console.log(\"getPersonBiometrics error\");\r\n        console.log(error);\r\n\r\n        let biometricItems = _.map(fingersCodeset.data, (item) => {\r\n          return _.extend({}, item, { captured: false });\r\n        });\r\n        setFingerType(biometricItems);\r\n        setPageLoading(true);\r\n      });\r\n  };\r\n\r\n  const clear_storelist = () => {\r\n    axios\r\n      .post(\r\n        `${baseUrl}biometrics/store-list/${props.patientId}`,\r\n        props.patientId,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(\"cleared store\");\r\n      })\r\n      .catch((error) => {\r\n        //console.log(\"cleared store error\");\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getRecaptureCount = () => {\r\n    axios\r\n      .get(`${baseUrl}biometrics/grouped/person/${props.patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setRecapturedFingered(response.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    clear_storelist();\r\n    getPersonBiometrics();\r\n    TemplateType();\r\n    getRecaptureCount();\r\n  }, []);\r\n\r\n  const TemplateType = () => {\r\n    axios\r\n      .get(`${baseUrl}modules/check?moduleName=biometric`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          axios\r\n            .get(`${baseUrl}biometrics/devices?active=true`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            })\r\n            .then((response) => {\r\n              //console.log(response.data.find((x) => x.active === true));\r\n              setDevices(response.data.find((x) => x.active === true));\r\n              setbiometricDevices(response.data);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setObjValues({\r\n      ...objValues,\r\n      [e.target.name]: e.target.value,\r\n      age: calculate_age(props.age),\r\n    });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.templateType = objValues.templateType ? \"\" : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const captureFinger = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setLoading(true);\r\n\r\n      axios\r\n        .post(\r\n          `${devices.url}?reader=${\r\n            devices.name\r\n          }&isNew=${isNewStatus}&recapture=${true}`,\r\n          objValues,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setLoading(false);\r\n\r\n          if (response.data.type === \"ERROR\") {\r\n            setLoading(false);\r\n            setTryAgain(true);\r\n            window.setTimeout(() => {\r\n              setTryAgain(false);\r\n            }, 5000);\r\n            toast.error(response.data.message.ERROR);\r\n            setIsNewStatus(false);\r\n          } else if (response.data.type === \"WARNING\") {\r\n            if (\r\n              response.data.imageQuality <= 60 &&\r\n              calculate_age(props.age) <= 6\r\n            ) {\r\n              toast.info(\r\n                \"Image quality captured is poor, Kindly give a reason for capture above.\",\r\n                { position: toast.POSITION.BOTTOM_CENTER, autoClose: 20000 }\r\n              );\r\n              setImageQuality(true);\r\n            }\r\n\r\n            const templateType = response.data.templateType;\r\n\r\n            setTryAgain(false);\r\n            setSuccess(true);\r\n\r\n            let biometricsEnrollments = response.data;\r\n            biometricsEnrollments.capturedBiometricsList = _.uniqBy(\r\n              biometricsEnrollments.capturedBiometricsList,\r\n              \"templateType\"\r\n            );\r\n\r\n            setCapturedFingered([...capturedFingered, biometricsEnrollments]);\r\n\r\n            _.find(fingerType, { display: templateType }).captured = true;\r\n\r\n            setFingerType([...fingerType]);\r\n\r\n            setObjValues({ ...objValues, templateType: \"\" });\r\n            setIsNewStatus(false);\r\n            toast.warning(response.data.message.WARNING);\r\n          } else if (response.data.type === \"SUCCESS\") {\r\n            if (\r\n              response.data.imageQuality <= 60 &&\r\n              calculate_age(props.age) <= 6\r\n            ) {\r\n              toast.info(\r\n                \"Image quality captured is poor, Kindly give a reason for capture above.\",\r\n                { position: toast.POSITION.BOTTOM_CENTER, autoClose: 20000 }\r\n              );\r\n              setImageQuality(true);\r\n            }\r\n            const templateType = response.data.templateType;\r\n            setTryAgain(false);\r\n            setSuccess(true);\r\n\r\n            let biometricsEnrollments = response.data;\r\n            biometricsEnrollments.capturedBiometricsList = _.uniqBy(\r\n              biometricsEnrollments.capturedBiometricsList,\r\n              \"templateType\"\r\n            );\r\n\r\n            setCapturedFingered([...capturedFingered, biometricsEnrollments]);\r\n\r\n            _.find(fingerType, { display: templateType }).captured = true;\r\n            setFingerType([...fingerType]);\r\n\r\n            setObjValues({ ...objValues, templateType: \"\" });\r\n            setIsNewStatus(false);\r\n          } else {\r\n            setLoading(false);\r\n            setTryAgain(true);\r\n            toast.error(\"Something went wrong capturing biometrics...\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const saveBiometrics = (e) => {\r\n    e.preventDefault();\r\n    if (capturedFingered.length >= 1) {\r\n      const capturedObj = capturedFingered[capturedFingered.length - 1];\r\n\r\n      capturedObj.capturedBiometricsList = _.uniqBy(\r\n        capturedObj.capturedBiometricsList,\r\n        \"templateType\"\r\n      );\r\n\r\n      axios\r\n        .post(`${baseUrl}biometrics/templates`, capturedObj, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          //console.log(\"saved\", response);\r\n          toast.success(\"Biometric recaptured successfully\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          setCapturedFingered([]);\r\n          getPersonBiometrics();\r\n          // props.updatePatientBiometricStatus(true);\r\n          props.getRecaptureCount();\r\n          props.toggle();\r\n        })\r\n        .catch((error) => {\r\n          toast.error(\"Something went wrong saving biometrics\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          console.log(error.message);\r\n        });\r\n    } else {\r\n      toast.error(\"You can't save less than 2 finger\", {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteTempBiometrics = (x) => {\r\n    axios\r\n      .delete(\r\n        `${baseUrl}biometrics?personId=${x.patientId}&templateType=${x.templateType}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((resp) => {\r\n        _.find(fingerType, { display: x.templateType }).captured = false;\r\n        setFingerType([...fingerType]);\r\n        let deletedRecord = capturedFingered.filter(\r\n          (data) => data.templateType !== x.templateType\r\n        );\r\n\r\n        setCapturedFingered(deletedRecord);\r\n        toast.info(x.templateType + \" captured removed successfully!\");\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Something went wrong\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getFingerprintsQuality = (imageQuality) => {\r\n    if (imageQuality > 60 && imageQuality <= 75) {\r\n      return (\r\n        <Badge color=\"warning\" style={{ fontSize: \"12px\" }}>\r\n          {imageQuality + \"%\"}\r\n        </Badge>\r\n      );\r\n    } else if (imageQuality > 75) {\r\n      return (\r\n        <Badge color=\"success\" style={{ fontSize: \"12px\" }}>\r\n          {imageQuality + \"%\"}\r\n        </Badge>\r\n      );\r\n    } else {\r\n      return (\r\n        <Badge color=\"error\" style={{ fontSize: \"12px\" }}>\r\n          {imageQuality + \"%\"}\r\n        </Badge>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={props.modal}\r\n        toggle={props.toggle}\r\n        style={{ display: \"flex\", maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n        fullscreen=\"true\"\r\n      >\r\n        <ModalHeader toggle={props.toggle}>Recapture Fingerprints</ModalHeader>\r\n        {/* <ModalBody></ModalBody> */}\r\n        <ModalFooter>\r\n          <div className={classes.root}>\r\n            <div>\r\n              {permissions.includes(\"capture_patient_biometrics\") ||\r\n              permissions.includes(\"all_permission\") ? (\r\n                <div\r\n                  style={{\r\n                    flex: \"10\",\r\n                    padding: \"5px\",\r\n                    marginLeft: \"5px\",\r\n                    border: \"1px solid rgba(99, 99, 99, 0.2)\",\r\n                    boxShadow: \"rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\r\n                  }}\r\n                >\r\n                  {/* <Row>\r\n                    <Col>\r\n                      <br />\r\n                      <p>\r\n                        {\" \"}\r\n                        Patient captured count :{\" \"}\r\n                        <b>{recapturedFingered.length}</b>\r\n                      </p>\r\n                      <br />\r\n                    </Col>\r\n                  </Row> */}\r\n                  <Row>\r\n                    <p>\r\n                      {\" \"}\r\n                      Patient recapture count :{\" \"}\r\n                      <b>{recapturedFingered.length - 1}</b>\r\n                    </p>\r\n                    <ToastContainer />\r\n                    <Col md={3}>\r\n                      <FormGroup>\r\n                        <Label\r\n                          for=\"device\"\r\n                          style={{\r\n                            color: \"#014d88\",\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"14px\",\r\n                          }}\r\n                        >\r\n                          {\" \"}\r\n                          Device{\" \"}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"device\"\r\n                          id=\"device\"\r\n                          //onChange={checkDevice}\r\n                          value={objValues.device}\r\n                          required\r\n                          disabled\r\n                        >\r\n                          {biometricDevices.map(\r\n                            ({ id, name, active, url, type }) => (\r\n                              <option key={id} value={url}>\r\n                                {type}\r\n                              </option>\r\n                            )\r\n                          )}\r\n                        </Input>\r\n\r\n                        {errors.device !== \"\" ? (\r\n                          <span className={classes.error}>{errors.device}</span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col md={3}>\r\n                      <FormGroup>\r\n                        <Label\r\n                          for=\"device\"\r\n                          style={{\r\n                            color: \"#014d88\",\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"14px\",\r\n                          }}\r\n                        >\r\n                          Select Finger\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"templateType\"\r\n                          id=\"templateType\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.templateType}\r\n                          required\r\n                        >\r\n                          <option value=\"\">Select Finger </option>\r\n\r\n                          {fingerType &&\r\n                            _.filter(fingerType, [\"captured\", false]).map(\r\n                              (value) => (\r\n                                <option key={value.id} value={value.display}>\r\n                                  {value.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                        </Input>\r\n                        {errors.templateType !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.templateType}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                    {!imageQuality ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <Col md={4}>\r\n                        <FormGroup>\r\n                          <Label\r\n                            for=\"device\"\r\n                            style={{\r\n                              color: \"#014d88\",\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"14px\",\r\n                            }}\r\n                          >\r\n                            {\" \"}\r\n                            Reason for capture{\" \"}\r\n                          </Label>\r\n                          <Input\r\n                            type=\"textarea\"\r\n                            name=\"reason\"\r\n                            id=\"reason\"\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    )}\r\n\r\n                    <Col md={2}>\r\n                      {!loading ? (\r\n                        <>\r\n                          <MatButton\r\n                            type=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={captureFinger}\r\n                            className={\"mt-4\"}\r\n                            style={{ backgroundColor: \"#992E62\" }}\r\n                            startIcon={<FingerprintIcon />}\r\n                            disabled={loading}\r\n                          >\r\n                            Capture Finger\r\n                          </MatButton>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <MatButton\r\n                            type=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={\"mt-4\"}\r\n                            style={{ backgroundColor: \"#992E62\" }}\r\n                            startIcon={<CircularProgress />}\r\n                          >\r\n                            Capturing...\r\n                          </MatButton>\r\n                        </>\r\n                      )}\r\n                    </Col>\r\n                    <br />\r\n                    <Col md={12}>\r\n                      {loading ? (\r\n                        <>\r\n                          <b>Capturing finger...</b>\r\n                          <LinearProgress />\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Row>\r\n                {console.log(capturedFingered)}\r\n                {capturedFingered.length >= 1 ? (\r\n                  <>\r\n                    <Col\r\n                      md={12}\r\n                      style={{ marginTop: \"10px\", paddingBottom: \"20px\" }}\r\n                    >\r\n                      <List celled horizontal>\r\n                        {capturedFingered.map((x) => (\r\n                          <List.Item\r\n                            style={{\r\n                              width: \"200px\",\r\n                              height: \"200px\",\r\n                              border: \"1px dotted #014d88\",\r\n                              margin: \"5px\",\r\n                            }}\r\n                          >\r\n                            <List.Header\r\n                              style={{\r\n                                paddingLeft: \"0px\",\r\n                                height: \"0.5rem\",\r\n\r\n                                alignItems: \"right\",\r\n                              }}\r\n                            >\r\n                              {getFingerprintsQuality(x.mainImageQuality)}\r\n                              <span\r\n                                onClick={() => {\r\n                                  deleteTempBiometrics(x);\r\n                                }}\r\n                              >\r\n                                <Icon\r\n                                  name=\"cancel\"\r\n                                  color=\"red\"\r\n                                  style={{ float: \"right\" }}\r\n                                />{\" \"}\r\n                              </span>\r\n                            </List.Header>\r\n                            <List.Content\r\n                              style={{\r\n                                width: \"200px\",\r\n                                height: \"150px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              <FingerprintIcon\r\n                                style={{ color: \"#992E62\", fontSize: 150 }}\r\n                              />\r\n                            </List.Content>\r\n                            <List.Content\r\n                              style={{\r\n                                width: \"200px\",\r\n                                height: \"30px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                fontSize: \"16px\",\r\n                                color: \"#014d88\",\r\n                                fontWeight: \"bold\",\r\n                                fontFamily: '\"poppins\", sans-serif',\r\n                              }}\r\n                            >\r\n                              {x.templateType}\r\n                            </List.Content>\r\n                            <List.Content>\r\n                              <br />\r\n                              {x.mainImageQuality < 75 ? (\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"secondary\"\r\n                                  onClick={() => {\r\n                                    deleteTempBiometrics(x);\r\n                                  }}\r\n                                  startIcon={<RestartAltIcon />}\r\n                                >\r\n                                  Reset recapture\r\n                                </MatButton>\r\n                              ) : (\r\n                                \" \"\r\n                              )}\r\n                            </List.Content>\r\n                          </List.Item>\r\n                        ))}\r\n                      </List>\r\n                    </Col>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Col md={12}>\r\n                      <br />\r\n\r\n                      <MatButton\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={capturedFingered.length < 6 ? true : false}\r\n                        onClick={saveBiometrics}\r\n                        startIcon={<SaveIcon />}\r\n                      >\r\n                        Save Capture\r\n                      </MatButton>\r\n                    </Col>\r\n                    <br />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recapture;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport SplitActionButton from \"./SplitActionButton\";\r\nimport PatientRecapture from \"./PatientRecapture\";\r\nimport Recapture from \"./Recapture\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from \"@mui/icons-material/Fingerprint\";\r\n\r\nimport { forwardRef } from \"react\";\r\n//import { Button} from \"react-bootstrap\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst PreviousRecapture = (props) => {\r\n  let createdDate = props.patientObj.createdDate.split(\"T\")[0];\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n\r\n  const [recapturedFingered, setRecapturedFingered] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [modalNew, setModalNew] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const toggleNew = () => setModalNew(!modalNew);\r\n\r\n  const tableRef = useRef(null);\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [recaptures, setRecaptures] = useState([]);\r\n  const [biometrics, setBiometrics] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const getRecaptureCount = () => {\r\n    //console.log(\"get recaptures\");\r\n    axios\r\n      .get(`${baseUrl}biometrics/grouped/person/${props.patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setRecapturedFingered(response.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRecaptureCount();\r\n  }, []);\r\n\r\n  const handleChangePage = (page) => {\r\n    setCurrentPage(page + 1);\r\n  };\r\n\r\n  function actionItems(row) {\r\n    //console.log(row);\r\n    axios\r\n      .get(\r\n        `${baseUrl}biometrics?personUuid=${row.personUuid}&recapture=${row.recapture}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        toggle();\r\n        let biometricData = response.data.filter(\r\n          (data) => data.date === row.captureDate\r\n        );\r\n        //console.log(\"gotten\", biometricData);\r\n        setBiometrics(biometricData);\r\n      });\r\n    //.error((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4>\r\n        {\" \"}\r\n        Patient recapture count : <b>{recapturedFingered.length - 1}</b>\r\n      </h4>\r\n      {createdDate !== currentDate ? (\r\n        <MatButton\r\n          className=\" float-right mr-1\"\r\n          variant=\"contained\"\r\n          floated=\"left\"\r\n          startIcon={<FingerprintIcon />}\r\n          style={{\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n            height: \"35px\",\r\n            float: \"right\",\r\n            //marginBottom: \"40px\",\r\n          }}\r\n          onClick={toggleNew}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\" }}>Recapture</span>\r\n        </MatButton>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <MaterialTable\r\n        tableRef={tableRef}\r\n        /*onSearchChange={(e) => {\r\n          handleSearchChange(e);\r\n      }}*/\r\n        icons={tableIcons}\r\n        title={`Biometrics List`}\r\n        columns={[\r\n          {\r\n            title: \"Captured Date\",\r\n            field: \"captureDate\",\r\n            filtering: false,\r\n            // hidden: enablePPI,\r\n          },\r\n          {\r\n            title: \"Number of Fingers Captured\",\r\n            field: \"count\",\r\n            filtering: false,\r\n          },\r\n          { title: \"Category\", field: \"data\" },\r\n          { title: \"Number\", field: \"number\" },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={loading}\r\n        data={\r\n          recapturedFingered &&\r\n          recapturedFingered\r\n            .filter((record) => {\r\n              return record.archived === 0;\r\n            })\r\n            .map((row, index) => ({\r\n              captureDate: row.captureDate,\r\n              count: row.count === null ? 0 : row.count,\r\n              data: row.recapture === 1 ? \"Recapture\" : \"Baseline\",\r\n              number: index + 1,\r\n              actions: (\r\n                <Button\r\n                  style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n                  onClick={() => actionItems(row)}\r\n                >\r\n                  View\r\n                </Button>\r\n              ),\r\n            }))\r\n          // (query) =>\r\n          // new Promise((resolve, reject) =>\r\n          //   axios\r\n          //     .get(`${baseUrl}biometrics/grouped/person/${props.patientId}`, {\r\n          //       headers: { Authorization: `Bearer ${token}` },\r\n          //     })\r\n          //     .then((response) => response)\r\n          //     .then((result) => {\r\n          //       resolve({\r\n          //         data: result.data\r\n          //           .filter((record) => {\r\n          //             return record.archived === 0;\r\n          //           })\r\n          //           .map((row) => ({\r\n          //             captureDate: row.captureDate,\r\n          //             count: row.count === null ? 0 : row.count,\r\n          //             //data: actionItems(row),\r\n          //             actions: (\r\n          //               <Button\r\n          //                 style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          //                 onClick={() => actionItems(row)}\r\n          //               >\r\n          //                 View\r\n          //               </Button>\r\n          //             ),\r\n          //           })),\r\n          //         page: query.page,\r\n          //         totalCount: result.data.length,\r\n          //       });\r\n          //     })\r\n          // )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n            fontSize: \"16px\",\r\n            padding: \"10px\",\r\n            fontWeight: \"bolder\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"50%\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        //localization={localization}\r\n      />\r\n      <PatientRecapture\r\n        storedBiometrics={biometrics}\r\n        modal={modal}\r\n        toggle={toggle}\r\n      />\r\n      <Recapture\r\n        toggle={toggleNew}\r\n        modal={modalNew}\r\n        patientId={props.patientId}\r\n        age={props.age}\r\n        getRecaptureCount={getRecaptureCount}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviousRecapture;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  FormControl,\r\n  Grid,\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PatientsCard from \"../PatientsCard\";\r\nimport ClientDashboard from \"./index\";\r\nimport PersonDemographics from \"../PersonDemographics\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport MaterialTable from \"material-table\";\r\nimport Biometrics from \"../Biometrics\";\r\nimport ReCaptureBiometric from \"../ReCaptureBiometric\";\r\nimport PreviousRecapture from \"../PreviousRecapture\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginBottom: 20,\r\n    flexGrow: 1,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing(1)}px ${theme.spacing(1) * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  checkinModal: {\r\n    \"& .modal-dialog\": {\r\n      maxWidth: \"1000px\",\r\n    },\r\n    \"& .ui.label\": {\r\n      backgroundColor: \"#fff\",\r\n      fontSize: \"16px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n      textAlign: \"left\",\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  checkInDatePicker: {\r\n    \"& .MuiFormControl-root.MuiTextField-root\": {\r\n      border: \"1px solid #eee\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Index(props) {\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const [loading, setLoading] = useState(\"\");\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const patientObj =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const permissions =\r\n    history.location && history.location.state\r\n      ? history.location.state.permissions\r\n      : [];\r\n  const [patientBiometricStatus, setPatientBiometricStatus] = useState(\r\n    patientObj.biometricStatus\r\n  );\r\n  const [biometricsModuleInstalled, setBiometricsModuleInstalled] =\r\n    useState(false);\r\n  const [patientVisits, setPatientVisits] = useState([]);\r\n  const [checkinStatus, setCheckinStatus] = useState(false);\r\n\r\n  const updatePatientBiometricStatus = (bioStatus) => {\r\n    setPatientBiometricStatus(bioStatus);\r\n  };\r\n\r\n  const panes = [\r\n    // {\r\n    //   menuItem:\r\n    //     (permissions.includes(\"view_patient_appointment\") &&\r\n    //       biometricsModuleInstalled) ||\r\n    //     (permissions.includes(\"all_permission\") && biometricsModuleInstalled)\r\n    //       ? \"Biometrics\"\r\n    //       : \"\",\r\n    //   render: () =>\r\n    //     permissions.includes(\"view_patient_appointment\") ||\r\n    //     permissions.includes(\"all_permission\") ? (\r\n    //       <Tab.Pane>\r\n    //         <div style={{ minHeight: 400, width: \"100%\" }}>\r\n    //           <Biometrics\r\n    //             patientObj={patientObj}\r\n    //             age={patientObj.dateOfBirth}\r\n    //             patientId={patientObj.id}\r\n    //             updatePatientBiometricStatus={updatePatientBiometricStatus}\r\n    //           />\r\n    //         </div>\r\n    //       </Tab.Pane>\r\n    //     ) : (\r\n    //       \"\"\r\n    //     ),\r\n    // },\r\n\r\n    {\r\n      menuItem: \"Recapture Biometrics\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <div style={{ minHeight: 400, width: \"100%\" }}>\r\n            <PreviousRecapture\r\n              patientObj={patientObj}\r\n              age={patientObj.dateOfBirth}\r\n              patientId={patientObj.id}\r\n              updatePatientBiometricStatus={updatePatientBiometricStatus}\r\n            />\r\n          </div>\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    // {\r\n    //   menuItem: \"Recapture\",\r\n    //   render: () => (\r\n    //     <Tab.Pane>\r\n    //       <div style={{ minHeight: 400, width: \"100%\" }}>\r\n    //         <ReCaptureBiometric\r\n    //           patientObj={patientObj}\r\n    //           age={patientObj.dateOfBirth}\r\n    //           patientId={patientObj.id}\r\n    //           updatePatientBiometricStatus={updatePatientBiometricStatus}\r\n    //         />\r\n    //       </div>\r\n    //     </Tab.Pane>\r\n    //   ),\r\n    // },\r\n  ];\r\n\r\n  const checkForBiometricsModule = () => {\r\n    axios\r\n      .get(`${baseUrl}modules/check?moduleName=biometric`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          setBiometricsModuleInstalled(true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkForBiometricsModule();\r\n  }, []);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"mb-6 col-md-6\"\r\n        style={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}\r\n      >\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n          <Typography style={{ color: \"#992E62\" }}>Patient</Typography>\r\n          <Typography style={{ color: \"#014d88\" }}>Dashboard</Typography>\r\n        </Breadcrumbs>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          {/* <PersonDemographics patientObj={patientObj} permissions={permissions} patientBiometricStatus={patientObj.biometricStatus}/> */}\r\n          <PatientsCard\r\n            patientObj={patientObj}\r\n            permissions={permissions}\r\n            patientBiometricStatus={patientObj.biometricStatus}\r\n          />\r\n          <Card style={{ marginTop: \"5px\" }}>\r\n            <div>\r\n              <Link to={\"/\"}>\r\n                <MatButton\r\n                  className=\" float-right mr-1\"\r\n                  variant=\"contained\"\r\n                  floated=\"left\"\r\n                  startIcon={<TiArrowBack />}\r\n                  style={{\r\n                    backgroundColor: \"rgb(153, 46, 98)\",\r\n                    color: \"#fff\",\r\n                    height: \"35px\",\r\n                  }}\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                </MatButton>\r\n              </Link>\r\n            </div>\r\n            <CardContent>\r\n              <Tab panes={panes} />\r\n            </CardContent>\r\n          </Card>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","export default __webpack_public_path__ + \"static/media/left_hand_6.4e1a9f91.png\";","export default __webpack_public_path__ + \"static/media/left_hand_7.ac1e60cf.png\";","export default __webpack_public_path__ + \"static/media/left_hand_8.b9fa7b77.png\";","export default __webpack_public_path__ + \"static/media/left_hand_9.7f75b728.png\";","export default __webpack_public_path__ + \"static/media/left_hand_10.983d7475.png\";","export default __webpack_public_path__ + \"static/media/right_hand_1.3c9d455c.png\";","export default __webpack_public_path__ + \"static/media/right_hand_2.2f69012c.png\";","export default __webpack_public_path__ + \"static/media/right_hand_3.66d8ceb7.png\";","export default __webpack_public_path__ + \"static/media/right_hand_4.d79e671e.png\";","export default __webpack_public_path__ + \"static/media/right_hand_5.258c6bed.png\";","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../../api\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { FaEye, FaUserPlus } from \"react-icons/fa\";\r\nimport {\r\n  MdDashboard,\r\n  MdDeleteForever,\r\n  MdModeEdit,\r\n  MdPerson,\r\n} from \"react-icons/md\";\r\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../patient.css\";\r\nimport SplitActionButton from \"../SplitActionButton\";\r\n\r\nimport { forwardRef } from \"react\";\r\n//import { Button} from \"react-bootstrap\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& a\": {\r\n      textDecoration: \"none !important\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PatientList = (props) => {\r\n  localStorage.setItem(\"menu\", JSON.stringify(0));\r\n  const tableRef = useRef(null);\r\n  const classes = useStyles();\r\n  const [patients, setPatients] = useState([]);\r\n  const [permissions, setPermissions] = useState(props.permissions);\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [modal, setModal] = useState(false);\r\n  const [patient, setPatient] = useState(false);\r\n  const [enablePPI, setEnablePPI] = useState(true);\r\n  const [searchParams, setSearchParams] = useState(\"*\");\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const history = useHistory();\r\n  const toggle = (id) => {\r\n    //        const patient = patients.find(obj => obj.id == id);\r\n    //        setPatient(patient);\r\n    localStorage.setItem(\"patientID\", JSON.stringify(id));\r\n    setModal(!modal);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    const patientId = localStorage.getItem(\"patientID\");\r\n    axios\r\n      .delete(`${baseUrl}patient/${patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        localStorage.removeItem(\"patientID\");\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          text: \"Patient Deleted Successfully\",\r\n          timer: 1500,\r\n        });\r\n\r\n        setModal(false);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"An error occurred while deleting!!!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  function actionItems(row) {\r\n    return [\r\n      {\r\n        name: \"View\",\r\n        type: \"link\",\r\n        icon: <FaEye size=\"22\" />,\r\n        to: {\r\n          pathname: \"/view-patient\",\r\n          state: { patientId: row.id, permissions: permissions },\r\n        },\r\n      },\r\n      {\r\n        ...(permissions.includes(\"view_patient\") ||\r\n          (permissions.includes(\"all_permission\") && {\r\n            name: \"Dashboard\",\r\n            type: \"link\",\r\n            icon: <MdPerson size=\"20\" color=\"rgb(4, 196, 217)\" />,\r\n            to: {\r\n              pathname: \"/patient-dashboard\",\r\n              state: { patientObj: row, permissions: permissions },\r\n            },\r\n          })),\r\n      },\r\n      {\r\n        ...(permissions.includes(\"edit_patient\") ||\r\n          (permissions.includes(\"all_permission\") && {\r\n            name: \"Edit\",\r\n            type: \"link\",\r\n            icon: <MdModeEdit size=\"20\" color=\"rgb(4, 196, 217)\" />,\r\n            to: {\r\n              pathname: \"/register-patient\",\r\n              state: { patientId: row.id, permissions: permissions },\r\n            },\r\n          })),\r\n      },\r\n      {\r\n        ...(permissions.includes(\"delete_patient\") ||\r\n          (permissions.includes(\"all_permission\") && {\r\n            name: \"Delete\",\r\n            type: \"link\",\r\n            icon: <MdDeleteForever size=\"20\" color=\"rgb(4, 196, 217)\" />,\r\n            deleteAction: () => {\r\n              toggle(row.id);\r\n            },\r\n            to: {\r\n              pathname: \"/#\",\r\n              state: { patientObj: row, permissions: permissions },\r\n            },\r\n          })),\r\n      },\r\n    ];\r\n  }\r\n  const handleRemoteData = (query) =>\r\n    new Promise((resolve, reject) => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}patient?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => response)\r\n        .then((result) => {\r\n          if (result.data === \"\") {\r\n            resolve({\r\n              data: [],\r\n              page: 0,\r\n              totalCount: 0,\r\n            });\r\n          } else {\r\n            resolve({\r\n              data: result.data.records.map((row) => ({\r\n                name: [row.firstName, row.otherName, row.surname]\r\n                  .filter(Boolean)\r\n                  .join(\", \"),\r\n                id: getHospitalNumber(row.identifier),\r\n                sex:\r\n                  row.sex.toLowerCase().charAt(0).toUpperCase() +\r\n                  row.sex.slice(1).toLowerCase(),\r\n                dateOfBirth: row.dateOfBirth,\r\n                age:\r\n                  row.dateOfBirth === 0 ||\r\n                  row.dateOfBirth === undefined ||\r\n                  row.dateOfBirth === null ||\r\n                  row.dateOfBirth === \"\"\r\n                    ? 0\r\n                    : calculate_age(row.dateOfBirth),\r\n                actions: (\r\n                  <div>\r\n                    {permissions.includes(\"view_patient\") ||\r\n                    permissions.includes(\"all_permission\") ? (\r\n                      <SplitActionButton actions={actionItems(row)} />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                ),\r\n              })),\r\n              page: query.page,\r\n              totalCount: result.data.totalRecords,\r\n            });\r\n          }\r\n        });\r\n    });\r\n\r\n  const onDelete = async (id) => {\r\n    try {\r\n      if (id) {\r\n        const response = await axios.delete(`${baseUrl}patient/${id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (e) {}\r\n  };\r\n\r\n  const onCancelDelete = () => {\r\n    setModal(false);\r\n  };\r\n\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n    // if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n    //   age_now--;\r\n    // }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  const getHospitalNumber = (identifier) => {\r\n    const hospitalNumber = identifier.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n\r\n  const getAddress = (address) => {\r\n    const city =\r\n      address && address.address && address.address.length > 0\r\n        ? address.address[0].city\r\n        : null;\r\n    return city;\r\n  };\r\n\r\n  const getGender = (gender) => {\r\n    return gender.display;\r\n  };\r\n\r\n  const enablePPIColumns = () => {\r\n    setEnablePPI(!enablePPI);\r\n  };\r\n  const PPISelect = () => (\r\n    <div>\r\n      {permissions.includes(\"view_patient\") ||\r\n      permissions.includes(\"all_permission\") ? (\r\n        <FormGroup className=\" float-right mr-1\">\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={enablePPIColumns}\r\n                checked={!enablePPI}\r\n                style={{ color: \"#014d88\", fontWeight: \"bold\" }}\r\n              />\r\n            }\r\n            label=\"Show PII\"\r\n            style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n          />\r\n        </FormGroup>\r\n      ) : (\r\n        <h5 style={{ color: \"#3d4465\", fontWeight: \"bold\" }}>Patients</h5>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const handleChangePage = (page) => {\r\n    setCurrentPage(page + 1);\r\n  };\r\n  const localization = {\r\n    pagination: {\r\n      labelDisplayedRows: `${currentPage} - 10 of 2022`,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <MaterialTable\r\n        tableRef={tableRef}\r\n        /*onSearchChange={(e) => {\r\n                    handleSearchChange(e);\r\n                }}*/\r\n        icons={tableIcons}\r\n        title={<PPISelect />}\r\n        columns={[\r\n          {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            filtering: false,\r\n            hidden: enablePPI,\r\n          },\r\n          { title: \"Hosp. Number\", field: \"id\", filtering: false },\r\n          { title: \"Sex\", field: \"sex\", filtering: false },\r\n          { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n          /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n          /*{ title: \"Status\", field: \"status\", filtering: false },*/\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={loading}\r\n        data={handleRemoteData}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n            fontSize: \"16px\",\r\n            padding: \"10px\",\r\n            fontWeight: \"bolder\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"50%\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        //localization={localization}\r\n      />\r\n      <Modal isOpen={modal} toggle={onCancelDelete}>\r\n        <ModalHeader toggle={onCancelDelete}>Delete Patient</ModalHeader>\r\n        <ModalBody>\r\n          Are you sure you want to delete this record?{\" \"}\r\n          {patient\r\n            ? patient.surname +\r\n              \", \" +\r\n              patient.firstname +\r\n              \" \" +\r\n              patient.otherName\r\n            : \"\"}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" type=\"button\" onClick={handleDelete}>\r\n            Yes\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            type=\"button\"\r\n            onClick={(e) => onCancelDelete()}\r\n          >\r\n            No\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientList;\r\n","//List of patients without biometrics\r\nimport React, { forwardRef, useCallback, useEffect, useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport MaterialTable from \"material-table\";\r\nimport SplitActionButton from \"../SplitActionButton\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport {\r\n  MdDeleteForever,\r\n  MdModeEdit,\r\n  MdPerson,\r\n  MdFingerprint,\r\n} from \"react-icons/md\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& a\": {\r\n      textDecoration: \"none !important\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nfunction BiometricsList(props) {\r\n  const classes = useStyles();\r\n  const [patients, setPatients] = useState([]);\r\n  const [permissions, setPermissions] = useState(props.permissions);\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [patient, setPatient] = useState(false);\r\n  const [enablePPI, setEnablePPI] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  //Get list of Finger index\r\n  const userPermission = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPermissions(response.data.permissions);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const loadPatients = useCallback(async () => {\r\n    try {\r\n      await axios\r\n        .get(`${baseUrl}patient/getall-patients-without-biometric`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setPatients(response.data);\r\n          }\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, []);\r\n\r\n  function actionItems(row) {\r\n    return [\r\n      {\r\n        ...(permissions.includes(\"view_patient\") ||\r\n          (permissions.includes(\"all_permission\") && {\r\n            name: \"Capture\",\r\n            type: \"link\",\r\n            icon: <MdFingerprint size=\"22\" />,\r\n            to: {\r\n              pathname: \"/patient-dashboard\",\r\n              state: { patientObj: row, permissions: permissions },\r\n            },\r\n          })),\r\n      },\r\n    ];\r\n  }\r\n\r\n  const handleRemoteData = (query) =>\r\n    new Promise((resolve, reject) => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}patient/getall-patients-without-biometric?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => response)\r\n        .then((result) => {\r\n          resolve({\r\n            data: result.data.records.map((row) => ({\r\n              name: [row.firstName, row.otherName, row.surname]\r\n                .filter(Boolean)\r\n                .join(\", \"),\r\n              id: getHospitalNumber(row.identifier),\r\n              sex:\r\n                row.sex.toLowerCase().charAt(0).toUpperCase() +\r\n                row.sex.slice(1).toLowerCase(),\r\n              dateOfBirth: row.dateOfBirth,\r\n              age:\r\n                row.dateOfBirth === 0 ||\r\n                row.dateOfBirth === undefined ||\r\n                row.dateOfBirth === null ||\r\n                row.dateOfBirth === \"\"\r\n                  ? 0\r\n                  : calculate_age(row.dateOfBirth),\r\n              actions: (\r\n                <div>\r\n                  {permissions.includes(\"view_patient\") ||\r\n                  permissions.includes(\"all_permission\") ? (\r\n                    <SplitActionButton actions={actionItems(row)} />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              ),\r\n            })),\r\n            page: query.page,\r\n            totalCount: result.data.totalRecords,\r\n          });\r\n        });\r\n    });\r\n  useEffect(() => {\r\n    userPermission();\r\n    loadPatients();\r\n  }, []);\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n  const getHospitalNumber = (identifier) => {\r\n    const hospitalNumber = identifier.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n\r\n  const enablePPIColumns = () => {\r\n    setEnablePPI(!enablePPI);\r\n  };\r\n  const PPISelect = () => (\r\n    <div>\r\n      {permissions.includes(\"view_patient\") ||\r\n      permissions.includes(\"all_permission\") ? (\r\n        <FormGroup className=\" float-right mr-1\">\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={enablePPIColumns}\r\n                checked={!enablePPI}\r\n                style={{ color: \"#014d88\", fontWeight: \"bold\" }}\r\n              />\r\n            }\r\n            label=\"Show PII\"\r\n            style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n          />\r\n        </FormGroup>\r\n      ) : (\r\n        <h5 style={{ color: \"#3d4465\", fontWeight: \"bold\" }}>Patients</h5>\r\n      )}\r\n    </div>\r\n  );\r\n  const handleChangePage = (page) => {\r\n    setCurrentPage(page + 1);\r\n  };\r\n  const localization = {\r\n    pagination: {\r\n      labelDisplayedRows: `Page: ${currentPage}`,\r\n    },\r\n  };\r\n  return (\r\n    <div>\r\n      {/*<ToastContainer autoClose={3000} hideProgressBar />*/}\r\n      <h3>Patients without biometrics</h3>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title={<PPISelect />}\r\n        columns={[\r\n          {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            filtering: false,\r\n            hidden: enablePPI,\r\n          },\r\n          { title: \"Hosp. Number\", field: \"id\", filtering: false },\r\n          { title: \"Sex\", field: \"sex\", filtering: false },\r\n          { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={loading}\r\n        data={handleRemoteData}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n            fontSize: \"16px\",\r\n            padding: \"10px\",\r\n            fontWeight: \"bolder\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"50%\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        //localization={localization}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BiometricsList;\r\n","//List of patients without biometrics\r\nimport React, { forwardRef, useCallback, useEffect, useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport MaterialTable from \"material-table\";\r\nimport SplitActionButton from \"../SplitActionButton\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../../api\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport { MdFingerprint } from \"react-icons/md\";\r\n\r\nimport { MdDeleteForever, MdModeEdit, MdPerson } from \"react-icons/md\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& a\": {\r\n      textDecoration: \"none !important\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nfunction NotCaptured(props) {\r\n  const classes = useStyles();\r\n  const [patients, setPatients] = useState([]);\r\n  const [permissions, setPermissions] = useState(props.permissions);\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [patient, setPatient] = useState(false);\r\n  const [enablePPI, setEnablePPI] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  //Get list of Finger index\r\n  const userPermission = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPermissions(response.data.permissions);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const loadPatients = useCallback(async () => {\r\n    try {\r\n      await axios\r\n        .get(`${baseUrl}patient/getall-patients-with-no-biometric`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setPatients(response.data);\r\n          }\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, []);\r\n\r\n  function actionItems(row) {\r\n    return [\r\n      //   {\r\n      //     name: \"View\",\r\n      //     type: \"link\",\r\n      //     icon: <FaEye size=\"22\" />,\r\n      //     to: {\r\n      //       pathname: \"/patient-biometrics\",\r\n      //       state: { patientObj: row, permissions: permissions },\r\n      //     },\r\n      //   },\r\n      {\r\n        ...(permissions.includes(\"view_patient\") ||\r\n          (permissions.includes(\"all_permission\") && {\r\n            name: \"Capture\",\r\n            type: \"link\",\r\n            icon: <MdFingerprint size=\"22\" />,\r\n            to: {\r\n              pathname: \"/patient-dashboard\",\r\n              state: { patientObj: row, permissions: permissions },\r\n            },\r\n          })),\r\n      },\r\n    ];\r\n  }\r\n\r\n  const handleRemoteData = (query) =>\r\n    new Promise((resolve, reject) => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}patient/getall-patients-with-no-biometric?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => response)\r\n        .then((result) => {\r\n          resolve({\r\n            data: result.data.records.map((row) => ({\r\n              name: [row.firstName, row.otherName, row.surname]\r\n                .filter(Boolean)\r\n                .join(\", \"),\r\n              id: getHospitalNumber(row.identifier),\r\n              sex:\r\n                row.sex.toLowerCase().charAt(0).toUpperCase() +\r\n                row.sex.slice(1).toLowerCase(),\r\n              dateOfBirth: row.dateOfBirth,\r\n              age:\r\n                row.dateOfBirth === 0 ||\r\n                row.dateOfBirth === undefined ||\r\n                row.dateOfBirth === null ||\r\n                row.dateOfBirth === \"\"\r\n                  ? 0\r\n                  : calculate_age(row.dateOfBirth),\r\n              actions: (\r\n                <div>\r\n                  <SplitActionButton actions={actionItems(row)} />\r\n                </div>\r\n              ),\r\n            })),\r\n            page: query.page,\r\n            totalCount: result.data.totalRecords,\r\n          });\r\n        });\r\n    });\r\n  useEffect(() => {\r\n    userPermission();\r\n    loadPatients();\r\n  }, []);\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n  const getHospitalNumber = (identifier) => {\r\n    const hospitalNumber = identifier.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n\r\n  const enablePPIColumns = () => {\r\n    setEnablePPI(!enablePPI);\r\n  };\r\n  const PPISelect = () => (\r\n    <div>\r\n      {permissions.includes(\"view_patient\") ||\r\n      permissions.includes(\"all_permission\") ? (\r\n        <FormGroup className=\" float-right mr-1\">\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={enablePPIColumns}\r\n                checked={!enablePPI}\r\n                style={{ color: \"#014d88\", fontWeight: \"bold\" }}\r\n              />\r\n            }\r\n            label=\"Show PII\"\r\n            style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n          />\r\n        </FormGroup>\r\n      ) : (\r\n        <h5 style={{ color: \"#3d4465\", fontWeight: \"bold\" }}>Patients</h5>\r\n      )}\r\n    </div>\r\n  );\r\n  const handleChangePage = (page) => {\r\n    setCurrentPage(page + 1);\r\n  };\r\n  const localization = {\r\n    pagination: {\r\n      labelDisplayedRows: `Page: ${currentPage}`,\r\n    },\r\n  };\r\n  return (\r\n    <div>\r\n      {/*<ToastContainer autoClose={3000} hideProgressBar />*/}\r\n      <h3>Patients not captured</h3>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title={<PPISelect />}\r\n        columns={[\r\n          {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            filtering: false,\r\n            hidden: enablePPI,\r\n          },\r\n          { title: \"Hosp. Number\", field: \"id\", filtering: false },\r\n          { title: \"Sex\", field: \"sex\", filtering: false },\r\n          { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={loading}\r\n        data={handleRemoteData}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n            fontSize: \"16px\",\r\n            padding: \"10px\",\r\n            fontWeight: \"bolder\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"50%\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        //localization={localization}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotCaptured;\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../../api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { FaEye, FaUserPlus } from \"react-icons/fa\";\r\nimport {\r\n  MdDashboard,\r\n  MdDeleteForever,\r\n  MdModeEdit,\r\n  MdPerson,\r\n} from \"react-icons/md\";\r\nimport { Menu, MenuList, MenuButton } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../patient.css\";\r\nimport SplitActionButton from \"../SplitActionButton\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport BiometricsList from \"./BiometricsList\";\r\nimport NotCaptured from \"./NotCaptured\";\r\n\r\nimport { forwardRef } from \"react\";\r\n//import { Button} from \"react-bootstrap\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& a\": {\r\n      textDecoration: \"none !important\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst Biometrics = (props) => {\r\n  const tableRef = useRef(null);\r\n  const classes = useStyles();\r\n  const [patients, setPatients] = useState([]);\r\n  const [permissions, setPermissions] = useState(props.permissions);\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [modal, setModal] = useState(false);\r\n  const [patient, setPatient] = useState(false);\r\n  const [enablePPI, setEnablePPI] = useState(true);\r\n  const [searchParams, setSearchParams] = useState(\"*\");\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [status, setStatus] = useState(1);\r\n  const toggle = (id) => {\r\n    const patient = patients.find((obj) => obj.id == id);\r\n    setPatient(patient);\r\n    setModal(!modal);\r\n  };\r\n\r\n  function actionItems(row) {\r\n    return [\r\n      {\r\n        name: \"View\",\r\n        type: \"link\",\r\n        icon: <FaEye size=\"22\" />,\r\n        to: {\r\n          pathname: \"/patient-biometrics\",\r\n          state: { patientObj: row, permissions: permissions },\r\n        },\r\n      },\r\n      {\r\n        ...(permissions.includes(\"view_patient\") ||\r\n          (permissions.includes(\"all_permission\") && {\r\n            name: \"Dashboard\",\r\n            type: \"link\",\r\n            icon: <MdPerson size=\"20\" color=\"rgb(4, 196, 217)\" />,\r\n            to: {\r\n              pathname: \"/patient-biometrics\",\r\n              state: { patientObj: row, permissions: permissions },\r\n            },\r\n          })),\r\n      },\r\n      //            {...(permissions.includes('edit_patient') || permissions.includes(\"all_permission\")&&\r\n      //                    {\r\n      //                        name:'Edit',\r\n      //                        type:'link',\r\n      //                        icon:<MdModeEdit size=\"20\" color='rgb(4, 196, 217)' />,\r\n      //                        to:{\r\n      //                            pathname: \"/register-patient\",\r\n      //                            state: { patientId : row.id, permissions:permissions  }\r\n      //                        }\r\n      //                    }\r\n      //                )},\r\n      //            {...(permissions.includes('delete_patient') || permissions.includes(\"all_permission\")&&\r\n      //                    {\r\n      //                        name:'Delete',\r\n      //                        type:'link',\r\n      //                        icon:<MdDeleteForever size=\"20\" color='rgb(4, 196, 217)'  />,\r\n      //                        to:{\r\n      //                            pathname: \"/#\",\r\n      //                            state: { patientObj: row, permissions:permissions  }\r\n      //                        }\r\n      //                    }\r\n      //                )}\r\n    ];\r\n  }\r\n  const handleRemoteData = (query) =>\r\n    new Promise((resolve, reject) => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}patient/getall-patients-with-biometric?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => response)\r\n        .then((result) => {\r\n          resolve({\r\n            data: result.data.records.map((row) => ({\r\n              name: [row.firstName, row.otherName, row.surname]\r\n                .filter(Boolean)\r\n                .join(\", \"),\r\n              id: getHospitalNumber(row.identifier),\r\n              sex:\r\n                row.sex.toLowerCase().charAt(0).toUpperCase() +\r\n                row.sex.slice(1).toLowerCase(),\r\n              dateOfBirth: row.dateOfBirth,\r\n              age:\r\n                row.dateOfBirth === 0 ||\r\n                row.dateOfBirth === undefined ||\r\n                row.dateOfBirth === null ||\r\n                row.dateOfBirth === \"\"\r\n                  ? 0\r\n                  : calculate_age(row.dateOfBirth),\r\n              actions: (\r\n                <div>\r\n                  {permissions.includes(\"view_patient\") ||\r\n                  permissions.includes(\"all_permission\") ? (\r\n                    <SplitActionButton actions={actionItems(row)} />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              ),\r\n            })),\r\n            page: query.page,\r\n            totalCount: result.data.totalRecords,\r\n          });\r\n        });\r\n    });\r\n\r\n  const onDelete = async (id) => {\r\n    try {\r\n      if (id) {\r\n        const response = await axios.delete(`${baseUrl}patient/${id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (e) {}\r\n  };\r\n\r\n  const onCancelDelete = () => {\r\n    setModal(false);\r\n  };\r\n\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  const getHospitalNumber = (identifier) => {\r\n    const hospitalNumber = identifier.identifier.find(\r\n      (obj) => obj.type == \"HospitalNumber\"\r\n    );\r\n    return hospitalNumber ? hospitalNumber.value : \"\";\r\n  };\r\n\r\n  const getAddress = (address) => {\r\n    const city =\r\n      address && address.address && address.address.length > 0\r\n        ? address.address[0].city\r\n        : null;\r\n    return city;\r\n  };\r\n\r\n  const getGender = (gender) => {\r\n    return gender.display;\r\n  };\r\n\r\n  const enablePPIColumns = () => {\r\n    setEnablePPI(!enablePPI);\r\n  };\r\n  const PPISelect = () => (\r\n    <div>\r\n      {permissions.includes(\"view_patient\") ||\r\n      permissions.includes(\"all_permission\") ? (\r\n        <FormGroup className=\" float-right mr-1\">\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={enablePPIColumns}\r\n                checked={!enablePPI}\r\n                style={{ color: \"#014d88\", fontWeight: \"bold\" }}\r\n              />\r\n            }\r\n            label=\"Show PII\"\r\n            style={{ color: \"#014d88\", fontWeight: \"bolder\" }}\r\n          />\r\n        </FormGroup>\r\n      ) : (\r\n        <h5 style={{ color: \"#3d4465\", fontWeight: \"bold\" }}>Patients</h5>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const handleChangePage = (page) => {\r\n    setCurrentPage(page + 1);\r\n  };\r\n  const localization = {\r\n    pagination: {\r\n      labelDisplayedRows: `${currentPage} - 10 of 2022`,\r\n    },\r\n  };\r\n\r\n  const handleChangeStatus = (e) => {\r\n    let count = e.target.value;\r\n    if (count === \"1\") {\r\n      setStatus(1);\r\n    } else if (count === \"2\") {\r\n      setStatus(2);\r\n    } else if (count === \"3\") {\r\n      setStatus(3);\r\n    } else {\r\n      setStatus(1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <TextField\r\n        id=\"biometrics\"\r\n        select\r\n        label=\"Select\"\r\n        defaultValue=\"1\"\r\n        helperText=\"Select patient biometric status\"\r\n        onChange={(e) => handleChangeStatus(e)}\r\n      >\r\n        <MenuItem key=\"1\" value=\"1\">\r\n          With Biometrics\r\n        </MenuItem>\r\n        <MenuItem key=\"2\" value=\"2\">\r\n          Incomplete Biometrics\r\n        </MenuItem>\r\n        <MenuItem key=\"3\" value=\"3\">\r\n          No Biometrics Captured\r\n        </MenuItem>\r\n      </TextField>\r\n      {status === 1 ? (\r\n        <>\r\n          <h3>Patients with biometrics</h3>\r\n          <MaterialTable\r\n            tableRef={tableRef}\r\n            /*onSearchChange={(e) => {\r\n                    handleSearchChange(e);\r\n                }}*/\r\n            icons={tableIcons}\r\n            title={<PPISelect />}\r\n            columns={[\r\n              {\r\n                title: \"Name\",\r\n                field: \"name\",\r\n                filtering: false,\r\n                hidden: enablePPI,\r\n              },\r\n              { title: \"Hosp. Number\", field: \"id\", filtering: false },\r\n              { title: \"Sex\", field: \"sex\", filtering: false },\r\n              {\r\n                title: \"Date Of Birth\",\r\n                field: \"dateOfBirth\",\r\n                filtering: false,\r\n              },\r\n              { title: \"Age\", field: \"age\", filtering: false },\r\n              /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n              /*{ title: \"Status\", field: \"status\", filtering: false },*/\r\n              { title: \"Actions\", field: \"actions\", filtering: false },\r\n            ]}\r\n            isLoading={loading}\r\n            data={handleRemoteData}\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n                fontSize: \"16px\",\r\n                padding: \"10px\",\r\n                fontWeight: \"bolder\",\r\n              },\r\n              searchFieldStyle: {\r\n                width: \"50%\",\r\n              },\r\n              filtering: false,\r\n              exportButton: false,\r\n              searchFieldAlignment: \"left\",\r\n              pageSizeOptions: [10, 20, 100],\r\n              pageSize: 10,\r\n              debounceInterval: 400,\r\n            }}\r\n            onChangePage={handleChangePage}\r\n            //localization={localization}\r\n          />\r\n        </>\r\n      ) : status === 2 ? (\r\n        <BiometricsList permissions={props.permissions} />\r\n      ) : status === 3 ? (\r\n        <NotCaptured permissions={props.permissions} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <Modal isOpen={modal} toggle={onCancelDelete}>\r\n        <ModalHeader toggle={onCancelDelete}>Delete Patient</ModalHeader>\r\n        <ModalBody>\r\n          Are you sure to delete this record?{\" \"}\r\n          {patient\r\n            ? patient.surname +\r\n              \", \" +\r\n              patient.firstname +\r\n              \" \" +\r\n              patient.otherName\r\n            : \"\"}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            type=\"button\"\r\n            onClick={(e) => onDelete(patient.id)}\r\n          >\r\n            Yes\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            type=\"button\"\r\n            onClick={(e) => onCancelDelete()}\r\n          >\r\n            No\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Biometrics;\r\n","import React, {useState, useEffect, useCallback, useRef} from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../../api\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Card,CardBody,} from 'reactstrap';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport {FaEye, FaUserPlus} from \"react-icons/fa\";\r\nimport { MdDashboard, MdDeleteForever, MdModeEdit,MdPerson} from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Label } from 'semantic-ui-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"../patient.css\";\r\nimport SplitActionButton from '../SplitActionButton';\r\n\r\nimport { forwardRef } from 'react';\r\n//import { Button} from \"react-bootstrap\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\n\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        '& a':{\r\n            textDecoration:'none !important'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst CheckedInPatients = (props) => {\r\n    const tableRef = useRef(null);\r\n    const classes = useStyles();\r\n    const [patients, setPatients] = useState([]);\r\n    const [permissions, setPermissions] = useState(props.permissions);\r\n    const [loading, setLoading] = useState('');\r\n    const [modal, setModal] = useState(false);\r\n    const [patient, setPatient] = useState(false);\r\n    const [enablePPI, setEnablePPI] = useState(true);\r\n    const [searchParams,setSearchParams] = useState('*');\r\n    const [totalPages,setTotalPages] = useState(0);\r\n    const [totalRecords,setTotalRecords] = useState(0);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n    const toggle = (id) => {\r\n        const patient = patients.find(obj => obj.id == id);\r\n        setPatient(patient);\r\n        setModal(!modal);\r\n    }\r\n\r\n\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                name:'View',\r\n                type:'link',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/register-patient\",\r\n                    state: { patientId : row.id, permissions:permissions  }\r\n                }\r\n            },\r\n            {...(permissions.includes('view_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Dashboard',\r\n                        type:'link',\r\n                        icon:<MdPerson size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/patient-dashboard\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n            {...(permissions.includes('edit_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Edit',\r\n                        type:'link',\r\n                        icon:<MdModeEdit size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/register-patient\",\r\n                            state: { patientId : row.id, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n            {...(permissions.includes('delete_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Delete',\r\n                        type:'link',\r\n                        icon:<MdDeleteForever size=\"20\" color='rgb(4, 196, 217)'  />,\r\n                        to:{\r\n                            pathname: \"/#\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )}\r\n        ]\r\n    }\r\n    const handleRemoteData = query =>\r\n        new Promise((resolve, reject) => {\r\n            axios.get(`${baseUrl}patient/checked-in?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                .then(response => response)\r\n                .then(result => {\r\n                    resolve({\r\n                        data: result.data.records.map((row) => ({\r\n                            name: [row.firstName, row.otherName, row.surname].filter(Boolean).join(\", \"),\r\n                            id: getHospitalNumber(row.identifier),\r\n                            sex: row.sex.toLowerCase().charAt(0).toUpperCase() + row.sex.slice(1).toLowerCase(),\r\n                            dateOfBirth: row.dateOfBirth,\r\n                            age: (row.dateOfBirth === 0 ||\r\n                                row.dateOfBirth === undefined ||\r\n                                row.dateOfBirth === null ||\r\n                                row.dateOfBirth === \"\" )\r\n                                ? 0\r\n                                : calculate_age(row.dateOfBirth),\r\n                            actions:\r\n                                <div>\r\n                                    {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                                        <SplitActionButton actions={actionItems(row)} />\r\n                                    ):\"\"\r\n                                    }\r\n                                </div>\r\n                        })),\r\n                        page: query.page,\r\n                        totalCount: result.data.totalRecords\r\n                    });\r\n                });\r\n        })\r\n\r\n\r\n    const onDelete = async (id) => {\r\n        try {\r\n            if (id) {\r\n                const response = await axios.delete(`${baseUrl}patient/${id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                window.location.reload();\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const onCancelDelete = () => {\r\n        setModal(false);\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? address.address[0].city : null;\r\n        return city;\r\n    };\r\n\r\n    const getGender = (gender) => {\r\n        return gender.display;\r\n    };\r\n\r\n\r\n\r\n    const enablePPIColumns = () =>{\r\n        setEnablePPI(!enablePPI)\r\n    }\r\n    const PPISelect = () => <div>\r\n        {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n            <FormGroup className=\" float-right mr-1\">\r\n                <FormControlLabel  control={\r\n                    <Checkbox\r\n                        onChange={enablePPIColumns}\r\n                        checked={!enablePPI}\r\n                        style={{color:'#014d88',fontWeight:'bold'}}\r\n                    />\r\n                } label=\"Show PII\" style={{color:'#014d88',fontWeight:'bolder'}} />\r\n            </FormGroup>\r\n        ):<h5 style={{color:'#3d4465',fontWeight:'bold'}}>Patients</h5>\r\n        }\r\n    </div>;\r\n\r\n\r\n    const handleChangePage = (page) => {\r\n        setCurrentPage(page + 1);\r\n    };\r\n    const localization = {\r\n        pagination: {\r\n            labelDisplayedRows: `Page: ${currentPage}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <MaterialTable\r\n                tableRef={tableRef}\r\n                /*onSearchChange={(e) => {\r\n                    handleSearchChange(e);\r\n                }}*/\r\n                icons={tableIcons}\r\n                title={<PPISelect/>}\r\n                columns={[\r\n                    {\r\n                        title: \"Name\",\r\n                        field: \"name\",\r\n                        filtering: false,\r\n                        hidden:enablePPI\r\n                    },\r\n                    { title: \"Hosp. Number\", field: \"id\" , filtering: false},\r\n                    { title: \"Sex\", field: \"sex\", filtering: false },\r\n                    { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n                    { title: \"Age\", field: \"age\", filtering: false },\r\n                    /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n                    /*{ title: \"Status\", field: \"status\", filtering: false },*/\r\n                    {title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={loading}\r\n                data={handleRemoteData}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        fontSize:'16px',\r\n                        padding:'10px',\r\n                        fontWeight:'bolder'\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '50%'\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400,\r\n\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                //localization={localization}\r\n\r\n            />\r\n            <Modal isOpen={modal} toggle={onCancelDelete}>\r\n                <ModalHeader toggle={onCancelDelete}>Delete Patient</ModalHeader>\r\n                <ModalBody>\r\n                    Are you sure to delete this record? { patient ? patient.surname +  ', ' + patient.firstname +  ' ' + patient.otherName : '' }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"button\" onClick={(e) => onDelete(patient.id)}>Yes</Button>{' '}\r\n                    <Button color=\"secondary\" type=\"button\" onClick={(e) => onCancelDelete()}>No</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckedInPatients;\r\n\r\n\r\n","import React, {forwardRef, useCallback, useEffect, useRef, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport MaterialTable from \"material-table\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport {FaEye} from \"react-icons/fa\";\r\nimport {MdDeleteForever, MdModeEdit, MdPerson} from \"react-icons/md\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SplitActionButton from \"../SplitActionButton\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        '& a':{\r\n            textDecoration:'none !important'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nfunction DuplicateHospitalNumbers(props) {\r\n    const tableRef = useRef(null);\r\n    const classes = useStyles();\r\n    const [patients, setPatients] = useState([]);\r\n    const [permissions, setPermissions] = useState(props.permissions);\r\n    const [loading, setLoading] = useState('');\r\n    const [modal, setModal] = useState(false);\r\n    const [patient, setPatient] = useState(false);\r\n    const [enablePPI, setEnablePPI] = useState(true);\r\n    const [searchParams,setSearchParams] = useState('*');\r\n    const [totalPages,setTotalPages] = useState(0);\r\n    const [totalRecords,setTotalRecords] = useState(0);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n    const toggle = (id) => {\r\n        const patient = patients.find(obj => obj.id == id);\r\n        setPatient(patient);\r\n        setModal(!modal);\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        axios\r\n            .delete(`${baseUrl}patient/delete/${id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                Swal.fire({\r\n                      icon: 'success',\r\n                      text: 'DQA Deleted Successfully',\r\n                      timer: 1500\r\n                 });\r\n            })\r\n            .catch((error) => {\r\n                 Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'An error occurred while deleting!!!',\r\n                });\r\n            });\r\n    }\r\n\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                name:'View',\r\n                type:'link',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/register-patient\",\r\n                    state: { patientId : row.id, permissions:permissions  }\r\n                }\r\n            },\r\n            {...(permissions.includes('edit_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Edit',\r\n                        type:'link',\r\n                        icon:<MdModeEdit size=\"20\" color='rgb(4, 196, 217)' />,\r\n                        to:{\r\n                            pathname: \"/register-patient\",\r\n                            state: { patientId : row.id, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n             {...(permissions.includes('delete_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Delete',\r\n                        type:'link',\r\n                        icon:<MdDeleteForever size=\"20\" color='rgb(4, 196, 217)'  />,\r\n                        deleteAction: () => {handleDelete(row.id)},\r\n                        to:{\r\n                            pathname: \"/#\",\r\n                            state: { patientObj: row, permissions:permissions  }\r\n                        }\r\n                    }\r\n                )}\r\n        ]\r\n    }\r\n    const handleRemoteData = query =>\r\n        new Promise((resolve, reject) => {\r\n            axios.get(`${baseUrl}patient/get-duplicate-hospital_numbers?pageSize=${query.pageSize}&pageNo=${query.page}&searchParam=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                .then(response => response)\r\n                .then(result => {\r\n                  if (result.data === \"\") {\r\n                    resolve({\r\n                      data: [],\r\n                      page: 0,\r\n                      totalCount: 0,\r\n                    });\r\n                  } else {\r\n                      resolve({\r\n                        data: result.data.records.map((row) => ({\r\n                            name: [row.firstName, row.otherName, row.surname].filter(Boolean).join(\", \"),\r\n                            id: getHospitalNumber(row.identifier),\r\n                            sex: row.sex,\r\n                            dateOfBirth: row.dateOfBirth,\r\n                            status:row.archived == 1?'Archived':\"Active\",\r\n                            age: (row.dateOfBirth === 0 ||\r\n                                row.dateOfBirth === undefined ||\r\n                                row.dateOfBirth === null ||\r\n                                row.dateOfBirth === \"\" )\r\n                                ? 0\r\n                                : calculate_age(row.dateOfBirth),\r\n                            actions:\r\n                                <div>\r\n                                    {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                                        <SplitActionButton actions={actionItems(row)} />\r\n                                    ):\"\"\r\n                                    }\r\n                                </div>\r\n                        })),\r\n                        page: query.page,\r\n                        totalCount: result.data.totalRecords\r\n                    });\r\n                  }\r\n                });\r\n        })\r\n\r\n\r\n    const onDelete = async (id) => {\r\n        try {\r\n            if (id) {\r\n                const response = await axios.delete(`${baseUrl}patient/${id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                window.location.reload();\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const onCancelDelete = () => {\r\n        setModal(false);\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n\r\n        const today = new Date();\r\n        const dateParts = dob.split(\"-\");\r\n        const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n        let age_now = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const hospitalNumber = identifier.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const getAddress = (address) => {\r\n        const city = address && address.address && address.address.length > 0 ? address.address[0].city : null;\r\n        return city;\r\n    };\r\n\r\n    const getGender = (gender) => {\r\n        return gender.display;\r\n    };\r\n\r\n\r\n\r\n    const enablePPIColumns = () =>{\r\n        setEnablePPI(!enablePPI)\r\n    }\r\n    const PPISelect = () => <div>\r\n        {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n            <FormGroup className=\" float-right mr-1\">\r\n                <FormControlLabel  control={\r\n                    <Checkbox\r\n                        onChange={enablePPIColumns}\r\n                        checked={!enablePPI}\r\n                        style={{color:'#014d88',fontWeight:'bold'}}\r\n                    />\r\n                } label=\"Show PII\" style={{color:'#014d88',fontWeight:'bolder'}} />\r\n            </FormGroup>\r\n        ):<h5 style={{color:'#3d4465',fontWeight:'bold'}}>Patients</h5>\r\n        }\r\n    </div>;\r\n\r\n\r\n    const handleChangePage = (page) => {\r\n        setCurrentPage(page + 1);\r\n    };\r\n    const localization = {\r\n        pagination: {\r\n            labelDisplayedRows: `Page: ${currentPage}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <MaterialTable\r\n                tableRef={tableRef}\r\n                /*onSearchChange={(e) => {\r\n                    handleSearchChange(e);\r\n                }}*/\r\n                icons={tableIcons}\r\n                title={<PPISelect/>}\r\n                columns={[\r\n                    {\r\n                        title: \"Name\",\r\n                        field: \"name\",\r\n                        filtering: false,\r\n                        hidden:enablePPI\r\n                    },\r\n                    { title: \"Hosp. Number\", field: \"id\" , filtering: false},\r\n                    { title: \"Sex\", field: \"sex\", filtering: false },\r\n                    { title: \"Date Of Birth\", field: \"dateOfBirth\", filtering: false },\r\n                    { title: \"Age\", field: \"age\", filtering: false },\r\n                    /*{ title: \"Address\", field: \"address\", filtering: false },*/\r\n                    { title: \"Status\", field: \"status\", filtering: false },\r\n                    {title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={loading}\r\n                data={handleRemoteData}\r\n\r\n                options={{\r\n                    rowStyle: rowData => {\r\n                        if(rowData.status === 'Archived') {\r\n                            return {\r\n                                backgroundColor: '#ceeef5',\r\n                                border:'2px solid #fff'\r\n                            };\r\n                        }\r\n\r\n                        return {border:'2px solid #eee'};\r\n                    },\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        fontSize:'16px',\r\n                        padding:'10px',\r\n                        fontWeight:'bolder'\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '50%'\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400,\r\n\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                //localization={localization}\r\n\r\n            />\r\n            <Modal isOpen={modal} toggle={onCancelDelete}>\r\n                <ModalHeader toggle={onCancelDelete}>Delete Patient</ModalHeader>\r\n                <ModalBody>\r\n                    Are you sure to delete this record? { patient ? patient.surname +  ', ' + patient.firstname +  ' ' + patient.otherName : '' }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"button\" onClick={(e) => onDelete(patient.id)}>Yes</Button>{' '}\r\n                    <Button color=\"secondary\" type=\"button\" onClick={(e) => onCancelDelete()}>No</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DuplicateHospitalNumbers;","import React, {useEffect, useState} from 'react';\r\nimport {Tab} from \"semantic-ui-react\";\r\nimport PatientList from \"../Home/PatientList\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport DuplicateHospitalNumbers from \"./DuplicateHospitalNumbers\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../api\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FaUserPlus} from \"react-icons/fa\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        '& a':{\r\n            textDecoration:'none !important'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\nfunction Index(props) {\r\n    const classes = useStyles();\r\n    const [permissions, setPermissions] = useState([]);\r\n    useEffect(() => {\r\n        userPermission();\r\n    }, []);\r\n    //Get list of Finger index\r\n    const userPermission =()=>{\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setPermissions(response.data.permissions);\r\n\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    const panes = [\r\n        { menuItem: 'Duplicate Hospital Numbers', render: () =>\r\n                <Tab.Pane>\r\n                    <DuplicateHospitalNumbers permissions={permissions}/>\r\n                </Tab.Pane>\r\n        }\r\n    ];\r\n    return (\r\n        <div className={classes.root}>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                <Tab panes={panes} />\r\n            ):\"\"\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;","import React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport PatientBiometrics from \"./PatientBiometrics\";\r\nimport PatientList from \"./Home/PatientList\";\r\nimport BiometricsCapture from \"./Home/Biometrics\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport CheckedInPatients from \"./Home/CheckedInPatients\";\r\nimport MigrationDQA from \"./MigrationDQA\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& a\": {\r\n      textDecoration: \"none !important\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\nfunction Index(props) {\r\n  const classes = useStyles();\r\n  const [patients, setPatients] = useState([]);\r\n  const [permissions, setPermissions] = useState([]);\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [modal, setModal] = useState(false);\r\n  const [patient, setPatient] = useState(false);\r\n  const [enablePPI, setEnablePPI] = useState(true);\r\n  const toggle = (id) => {\r\n    const patient = patients.find((obj) => obj.id == id);\r\n    setPatient(patient);\r\n    setModal(!modal);\r\n  };\r\n  useEffect(() => {\r\n    userPermission();\r\n  }, []);\r\n  //Get list of Finger index\r\n  const userPermission = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPermissions(response.data.permissions);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const enablePPIColumns = () => {\r\n    setEnablePPI(!enablePPI);\r\n  };\r\n  const panes = [\r\n    {\r\n      menuItem: \"Clients\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <PatientList permissions={permissions} />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Checked-In\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <CheckedInPatients permissions={permissions} />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Patient Biometrics\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <BiometricsCapture permissions={permissions} />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    //    { menuItem: 'Biometrics Capture', render: () =>\r\n    //            <Tab.Pane>\r\n    //                <PatientBiometrics permissions={permissions}/>\r\n    //            </Tab.Pane>\r\n    //    },\r\n    {\r\n      menuItem: \"Migration DQA\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <MigrationDQA permissions={permissions} />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      {permissions.length > 0 && (\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"row mb-12 col-md-12\">\r\n              <div className=\"mb-6 col-md-6\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Typography style={{ color: \"#992E62\" }}>Patient</Typography>\r\n                  <Typography style={{ color: \"#014d88\" }}>Home</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <div className=\"mb-6 col-md-6\">\r\n                {permissions.includes(\"view_patient\") ||\r\n                permissions.includes(\"all_permission\") ? (\r\n                  <Link to={\"register-patient\"}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-right mr-1\"\r\n                      startIcon={<FaUserPlus size=\"25\" />}\r\n                      style={{ backgroundColor: \"#014d88\" }}\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          textTransform: \"capitalize\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                      >\r\n                        New Client\r\n                      </span>\r\n                    </Button>\r\n                  </Link>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <Tab panes={panes} />\r\n          </CardBody>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { MemoryRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport RegisterPatient from \"./main/webapp/components/RegisterPatient\";\r\nimport ViewPatient from \"./main/webapp/components/ViewPatient\";\r\nimport PatientDashboard from \"./main/webapp/components/PatientDashboard\";\r\nimport Dashboard from \"./main/webapp/components/ClientDashboard\";\r\nimport ClientDashboard from \"./main/webapp/components/ClientDashboard\";\r\nimport BiometricsDashboard from \"./main/webapp/components/biometrics/\";\r\n/*import PatientVitals from './main/webapp/components/PatientVitals';\r\nimport AddPatientVitals from './main/webapp/components/Add-Patient-Vitals';*/\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./main/webapp/css/style.css\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport Components from \"./main/webapp/components\";\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <ToastContainer />\r\n        {/*          <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL.*/}\r\n        <Switch>\r\n          <Route path=\"/patient-biometrics\">\r\n            <BiometricsDashboard />\r\n          </Route>\r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/view-patient\">\r\n            <ViewPatient />\r\n          </Route>\r\n          <Route path=\"/patient-dashboard\">\r\n            <PatientDashboardPage />\r\n          </Route>\r\n          <Route path=\"/patient-vitals\">\r\n            <Dashboard />\r\n            {/*<PatientVitalsPage />*/}\r\n          </Route>\r\n          <Route path=\"/add-patient-vital\">\r\n            <Dashboard />\r\n            {/*<AddPatientVitalsPage />*/}\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Components />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction PatientDashboardPage() {\r\n  return <ClientDashboard />;\r\n}\r\nfunction RegisterPatientPage() {\r\n  return <RegisterPatient />;\r\n}\r\n\r\n/*\r\nfunction PatientVitalsPage() {\r\n  return <PatientVitals />\r\n}\r\nfunction AddPatientVitalsPage() {\r\n  return <AddPatientVitals />\r\n}\r\n*/\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}